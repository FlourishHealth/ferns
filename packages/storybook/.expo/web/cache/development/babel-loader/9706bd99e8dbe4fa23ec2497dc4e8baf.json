{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { action } from \"@storybook/addon-actions\";\nimport React from \"react\";\nimport { Button } from \"../../ui/src/Button\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport { Box } from \"../../ui/src/Box\";\nimport { StorybookContainer } from \"../../ui/src/StorybookContainer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction allColorButtons(props) {\n  return _jsxs(StorybookContainer, {\n    children: [_jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Default\"\n      }, props))\n    }), _jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Primary\",\n        color: \"primary\"\n      }, props))\n    }), _jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Secondary\",\n        color: \"secondary\"\n      }, props))\n    }), _jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Tertiary\",\n        color: \"tertiary\"\n      }, props))\n    }), _jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Accent\",\n        color: \"accent\"\n      }, props))\n    }), _jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Red\",\n        color: \"red\"\n      }, props))\n    }), _jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Dark Gray\",\n        color: \"darkGray\"\n      }, props))\n    }), _jsx(Box, {\n      paddingY: 1,\n      children: _jsx(Button, _objectSpread({\n        onClick: action(\"clicked\"),\n        text: \"Gray\",\n        color: \"gray\"\n      }, props))\n    })]\n  });\n}\n\nstoriesOf(\"Button\", module).add(\"Colors\", function () {\n  return allColorButtons({});\n}).add(\"Loading\", function () {\n  return allColorButtons({\n    loading: true\n  });\n}).add(\"Ghost\", function () {\n  return allColorButtons({\n    type: \"ghost\"\n  });\n}).add(\"Outline\", function () {\n  return allColorButtons({\n    type: \"outline\"\n  });\n});\n\nvar Template = function Template(args) {\n  return _jsx(Button, _objectSpread({\n    onClick: action(\"clicked\"),\n    text: \"Button\"\n  }, args));\n};\n\nexport var Primary = Template.bind({});\nPrimary.args = {\n  size: \"md\",\n  color: \"primary\",\n  text: \"PRIMARY\",\n  type: \"solid\",\n  inline: false,\n  disabled: false\n};","map":{"version":3,"sources":["/Users/josh/src/ferns/packages/storybook/src/Button.stories.tsx"],"names":["action","React","Button","storiesOf","Box","StorybookContainer","allColorButtons","props","module","add","loading","type","Template","args","Primary","bind","size","color","text","inline","disabled"],"mappings":"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","sourcesContent":["import {action} from \"@storybook/addon-actions\";\nimport React from \"react\";\nimport {Button} from \"../../ui/src/Button\";\nimport {storiesOf} from \"@storybook/react-native\";\nimport {Box} from \"../../ui/src/Box\";\nimport {ButtonProps} from \"../../ui/src/Common\";\nimport {StorybookContainer} from \"../../ui/src/StorybookContainer\";\n\nfunction allColorButtons(props: Partial<ButtonProps>) {\n  return (\n    <StorybookContainer>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Default\" {...props} />\n      </Box>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Primary\" color=\"primary\" {...props} />\n      </Box>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Secondary\" color=\"secondary\" {...props} />\n      </Box>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Tertiary\" color=\"tertiary\" {...props} />\n      </Box>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Accent\" color=\"accent\" {...props} />\n      </Box>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Red\" color=\"red\" {...props} />\n      </Box>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Dark Gray\" color=\"darkGray\" {...props} />\n      </Box>\n      <Box paddingY={1}>\n        <Button onClick={action(\"clicked\")} text=\"Gray\" color=\"gray\" {...props} />\n      </Box>\n    </StorybookContainer>\n  );\n}\n\nstoriesOf(\"Button\", module)\n  .add(\"Colors\", () => allColorButtons({}))\n  .add(\"Loading\", () => allColorButtons({loading: true}))\n  .add(\"Ghost\", () => allColorButtons({type: \"ghost\"}))\n  .add(\"Outline\", () => allColorButtons({type: \"outline\"}));\n\nconst Template = (args: any) => <Button onClick={action(\"clicked\")} text=\"Button\" {...args} />;\n\nexport const Primary: any = Template.bind({});\n\nPrimary.args = {\n  size: \"md\",\n  color: \"primary\",\n  text: \"PRIMARY\",\n  type: \"solid\",\n  inline: false,\n  disabled: false,\n};\n"]},"metadata":{},"sourceType":"module"}