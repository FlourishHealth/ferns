{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { registerEventHandler, unregisterEventHandler } from './core';\nimport { shouldBeUseWeb } from './PlatformChecker';\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nfunction jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_objectSpread(_objectSpread({}, evt.nativeEvent), {}, {\n      eventName: eventName\n    }));\n  };\n}\nvar WorkletEventHandler = function () {\n  function WorkletEventHandler(worklet) {\n    _classCallCheck(this, WorkletEventHandler);\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _defineProperty(this, \"worklet\", void 0);\n    _defineProperty(this, \"eventNames\", void 0);\n    _defineProperty(this, \"reattachNeeded\", void 0);\n    _defineProperty(this, \"listeners\", void 0);\n    _defineProperty(this, \"viewTag\", void 0);\n    _defineProperty(this, \"registrations\", void 0);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    this.listeners = {};\n    this.viewTag = undefined;\n    this.registrations = [];\n    if (SHOULD_BE_USE_WEB) {\n      this.listeners = eventNames.reduce(function (acc, eventName) {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n  _createClass(WorkletEventHandler, [{\n    key: \"updateWorklet\",\n    value: function updateWorklet(newWorklet) {\n      this.worklet = newWorklet;\n      this.reattachNeeded = true;\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag, fallbackEventName) {\n      var _this = this;\n      this.viewTag = viewTag;\n      this.registrations = this.eventNames.map(function (eventName) {\n        return registerEventHandler(_this.worklet, eventName, viewTag);\n      });\n      if (this.registrations.length === 0 && fallbackEventName) {\n        this.registrations.push(registerEventHandler(this.worklet, fallbackEventName, viewTag));\n      }\n    }\n  }, {\n    key: \"registerForEventByName\",\n    value: function registerForEventByName(eventName) {\n      this.registrations.push(registerEventHandler(this.worklet, eventName));\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents() {\n      this.registrations.forEach(function (id) {\n        return unregisterEventHandler(id);\n      });\n      this.registrations = [];\n    }\n  }]);\n  return WorkletEventHandler;\n}();\nexport { WorkletEventHandler as default };","map":{"version":3,"sources":["WorkletEventHandler.ts"],"names":["registerEventHandler","unregisterEventHandler","shouldBeUseWeb","SHOULD_BE_USE_WEB","jsListener","eventName","handler","evt","nativeEvent","WorkletEventHandler","constructor","worklet","eventNames","_defineProperty","reattachNeeded","listeners","viewTag","undefined","registrations","reduce","acc","updateWorklet","newWorklet","registerForEvents","fallbackEventName","map","length","push","registerForEventByName","unregisterFromEvents","forEach","id"],"mappings":"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","sourcesContent":["'use strict';\nimport type { NativeSyntheticEvent } from 'react-native';\nimport { registerEventHandler, unregisterEventHandler } from './core';\nimport type { EventPayload, ReanimatedEvent } from './hook/commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ntype JSEvent<Event extends object> = NativeSyntheticEvent<EventPayload<Event>>;\n\n// In JS implementation (e.g. for web) we don't use Reanimated's\n// event emitter, therefore we have to handle here\n// the event that came from React Native and convert it.\nfunction jsListener<Event extends object>(\n  eventName: string,\n  handler: (event: ReanimatedEvent<Event>) => void\n) {\n  return (evt: JSEvent<Event>) => {\n    handler({ ...evt.nativeEvent, eventName } as ReanimatedEvent<Event>);\n  };\n}\n\nexport default class WorkletEventHandler<Event extends object> {\n  worklet: (event: ReanimatedEvent<Event>) => void;\n  eventNames: string[];\n  reattachNeeded: boolean;\n  listeners:\n    | Record<string, (event: ReanimatedEvent<ReanimatedEvent<Event>>) => void>\n    | Record<string, (event: JSEvent<Event>) => void>;\n\n  viewTag: number | undefined;\n  registrations: number[];\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[] = []\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    this.listeners = {};\n    this.viewTag = undefined;\n    this.registrations = [];\n\n    if (SHOULD_BE_USE_WEB) {\n      this.listeners = eventNames.reduce(\n        (\n          acc: Record<string, (event: JSEvent<Event>) => void>,\n          eventName: string\n        ) => {\n          acc[eventName] = jsListener(eventName, worklet);\n          return acc;\n        },\n        {}\n      );\n    }\n  }\n\n  updateWorklet(newWorklet: (event: ReanimatedEvent<Event>) => void): void {\n    this.worklet = newWorklet;\n    this.reattachNeeded = true;\n  }\n\n  registerForEvents(viewTag: number, fallbackEventName?: string): void {\n    this.viewTag = viewTag;\n    this.registrations = this.eventNames.map((eventName) =>\n      registerEventHandler(this.worklet, eventName, viewTag)\n    );\n    if (this.registrations.length === 0 && fallbackEventName) {\n      this.registrations.push(\n        registerEventHandler(this.worklet, fallbackEventName, viewTag)\n      );\n    }\n  }\n\n  registerForEventByName(eventName: string) {\n    this.registrations.push(registerEventHandler(this.worklet, eventName));\n  }\n\n  unregisterFromEvents(): void {\n    this.registrations.forEach((id) => unregisterEventHandler(id));\n    this.registrations = [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}