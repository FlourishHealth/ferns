{"ast":null,"code":"import React, { useContext } from \"react\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport { ThemeContext } from \"./Theme\";\nvar fontSizes = {\n  sm: 20,\n  md: 28,\n  lg: 36\n};\nexport var Heading = function Heading(_ref) {\n  var align = _ref.align,\n    children = _ref.children,\n    color = _ref.color,\n    size = _ref.size,\n    testID = _ref.testID;\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  var style = {};\n  style.fontFamily = theme.titleFont;\n  style.fontSize = fontSizes[size || \"md\"];\n  if (align) {\n    style.textAlign = align;\n  }\n  style.color = theme[color !== null && color !== void 0 ? color : \"darkGray\"];\n  var lines = 0;\n  return React.createElement(NativeText, {\n    numberOfLines: lines,\n    style: style,\n    testID: testID\n  }, children);\n};","map":{"version":3,"sources":["../src/Heading.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAG,UAAU,QAAO,OAAO;AAAC,OAAA,UAAA;AAIxC,SAAQ,YAAY;AAEpB,IAAM,SAAS,GAAG;EAChB,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE;CACL;AAED,OAAO,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,IAAA,EAMmB;EAAA,IALrC,KAAK,GAAA,IAAA,CAAL,KAAK;IACL,QAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,KAAK,GAAA,IAAA,CAAL,KAAK;IACL,IAAI,GAAA,IAAA,CAAJ,IAAI;IACJ,MAAM,GAAA,IAAA,CAAN,MAAM;EAEN,IAAA,WAAA,GAAgB,UAAU,CAAC,YAAY,CAAC;IAAjC,KAAK,GAAA,WAAA,CAAL,KAAK;EAEZ,IAAM,KAAK,GAAyB,CAAA,CAAE;EAEtC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS;EAElC,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC;EACxC,IAAI,KAAK,EAAE;IACT,KAAK,CAAC,SAAS,GAAG,KAAK;EACzB;EACA,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAL,KAAK,GAAI,UAAU,CAAC;EAMxC,IAAM,KAAK,GAAG,CAAC;EACf,OACE,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IAAC,aAAa,EAAE,KAAK;IAAE,KAAK,EAAE,KAAK;IAAE,MAAM,EAAE;EAAM,CAAA,EAC3D,QAAQ,CACE;AAEjB,CAAC","sourceRoot":"","sourcesContent":["import React, { useContext } from \"react\";\nimport { Text as NativeText } from \"react-native\";\nimport { ThemeContext } from \"./Theme\";\nconst fontSizes = {\n    sm: 20,\n    md: 28,\n    lg: 36,\n};\nexport const Heading = ({ align, children, color, size, testID, }) => {\n    const { theme } = useContext(ThemeContext);\n    const style = {};\n    style.fontFamily = theme.titleFont;\n    style.fontSize = fontSizes[size || \"md\"];\n    if (align) {\n        style.textAlign = align;\n    }\n    style.color = theme[color !== null && color !== void 0 ? color : \"darkGray\"];\n    // TODO: might be useful for wrapping/truncating\n    // if (numberOfLines !== 1 && !inline) {\n    //   style.flexWrap = \"wrap\";\n    // }\n    const lines = 0;\n    return (React.createElement(NativeText, { numberOfLines: lines, style: style, testID: testID }, children));\n};\n//# sourceMappingURL=Heading.js.map"]},"metadata":{},"sourceType":"module"}