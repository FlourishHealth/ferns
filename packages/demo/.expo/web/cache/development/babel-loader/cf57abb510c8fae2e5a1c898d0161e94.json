{"ast":null,"code":"import React from \"react\";\nimport { Box } from \"./Box\";\nimport { SelectList } from \"./SelectList\";\nimport { WithLabel } from \"./WithLabel\";\nvar options = [{\n  label: \"Eastern\",\n  value: \"America/New_York\"\n}, {\n  label: \"Central\",\n  value: \"America/Chicago\"\n}, {\n  label: \"Mountain\",\n  value: \"America/Denver\"\n}, {\n  label: \"Pacific\",\n  value: \"America/Los_Angeles\"\n}, {\n  label: \"Alaska\",\n  value: \"America/Anchorage\"\n}, {\n  label: \"Hawaii\",\n  value: \"Pacific/Honolulu\"\n}, {\n  label: \"Arizona\",\n  value: \"America/Phoenix\"\n}];\nexport var TimezonePicker = function TimezonePicker(_ref) {\n  var timezone = _ref.timezone,\n    onChange = _ref.onChange,\n    showLabel = _ref.showLabel,\n    _ref$width = _ref.width,\n    width = _ref$width === void 0 ? 100 : _ref$width;\n  if (showLabel) {\n    return React.createElement(Box, {\n      maxWidth: width\n    }, React.createElement(WithLabel, {\n      label: \"Timezone\"\n    }, React.createElement(SelectList, {\n      allowClear: true,\n      options: options,\n      style: {\n        minHeight: 40\n      },\n      value: timezone,\n      onChange: onChange\n    })));\n  } else {\n    return React.createElement(Box, {\n      maxWidth: width\n    }, React.createElement(SelectList, {\n      allowClear: true,\n      options: options,\n      style: {\n        minHeight: 40\n      },\n      value: timezone,\n      onChange: onChange\n    }));\n  }\n};","map":{"version":3,"sources":["../src/TimezonePicker.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO;AAEzB,SAAQ,GAAG,QAAO,OAAO;AAEzB,SAAQ,UAAU,QAAO,cAAc;AACvC,SAAQ,SAAS,QAAO,aAAa;AAGrC,IAAM,OAAO,GAAG,CACd;EAAC,KAAK,EAAE,SAAS;EAAE,KAAK,EAAE;AAAkB,CAAC,EAC7C;EAAC,KAAK,EAAE,SAAS;EAAE,KAAK,EAAE;AAAiB,CAAC,EAC5C;EAAC,KAAK,EAAE,UAAU;EAAE,KAAK,EAAE;AAAgB,CAAC,EAC5C;EAAC,KAAK,EAAE,SAAS;EAAE,KAAK,EAAE;AAAqB,CAAC,EAChD;EAAC,KAAK,EAAE,QAAQ;EAAE,KAAK,EAAE;AAAmB,CAAC,EAC7C;EAAC,KAAK,EAAE,QAAQ;EAAE,KAAK,EAAE;AAAkB,CAAC,EAC5C;EAAC,KAAK,EAAE,SAAS;EAAE,KAAK,EAAE;AAAiB,CAAC,CAC7C;AAED,OAAO,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAA,IAAA,EAKmB;EAAA,IAJ5C,QAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,QAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,SAAS,GAAA,IAAA,CAAT,SAAS;IAAA,UAAA,GAAA,IAAA,CACT,KAAK;IAAL,KAAK,GAAA,UAAA,cAAG,GAAG,GAAA,UAAA;EAEX,IAAI,SAAS,EAAE;IACb,OACE,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;MAAC,QAAQ,EAAE;IAAK,CAAA,EAClB,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA;MAAC,KAAK,EAAC;IAAU,CAAA,EACzB,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;MACT,UAAU,EAAA,IAAA;MACV,OAAO,EAAE,OAAO;MAChB,KAAK,EAAE;QAAC,SAAS,EAAE;MAAE,CAAC;MACtB,KAAK,EAAE,QAAQ;MACf,QAAQ,EAAE;IAAQ,CAAA,CAClB,CACQ,CACR;EAEV,CAAC,MAAM;IACL,OACE,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;MAAC,QAAQ,EAAE;IAAK,CAAA,EAClB,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;MACT,UAAU,EAAA,IAAA;MACV,OAAO,EAAE,OAAO;MAChB,KAAK,EAAE;QAAC,SAAS,EAAE;MAAE,CAAC;MACtB,KAAK,EAAE,QAAQ;MACf,QAAQ,EAAE;IAAQ,CAAA,CAClB,CACE;EAEV;AACF,CAAC","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Box } from \"./Box\";\nimport { SelectList } from \"./SelectList\";\nimport { WithLabel } from \"./WithLabel\";\n// TODO: Support world wide timezones\nconst options = [\n    { label: \"Eastern\", value: \"America/New_York\" },\n    { label: \"Central\", value: \"America/Chicago\" },\n    { label: \"Mountain\", value: \"America/Denver\" },\n    { label: \"Pacific\", value: \"America/Los_Angeles\" },\n    { label: \"Alaska\", value: \"America/Anchorage\" },\n    { label: \"Hawaii\", value: \"Pacific/Honolulu\" },\n    { label: \"Arizona\", value: \"America/Phoenix\" },\n];\nexport const TimezonePicker = ({ timezone, onChange, showLabel, width = 100, }) => {\n    if (showLabel) {\n        return (React.createElement(Box, { maxWidth: width },\n            React.createElement(WithLabel, { label: \"Timezone\" },\n                React.createElement(SelectList, { allowClear: true, options: options, style: { minHeight: 40 }, value: timezone, onChange: onChange }))));\n    }\n    else {\n        return (React.createElement(Box, { maxWidth: width },\n            React.createElement(SelectList, { allowClear: true, options: options, style: { minHeight: 40 }, value: timezone, onChange: onChange })));\n    }\n};\n//# sourceMappingURL=TimezonePicker.js.map"]},"metadata":{},"sourceType":"module"}