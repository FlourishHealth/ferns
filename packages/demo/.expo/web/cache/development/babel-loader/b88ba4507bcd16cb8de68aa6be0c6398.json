{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Unifier } from \"./Unifier\";\nexport var useStoredState = function useStoredState(key, initialValue) {\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var fetchData = useCallback(_asyncToGenerator(function* () {\n    try {\n      return yield Unifier.storage.getItem(key);\n    } catch (error) {\n      console.error(\"Error reading data from AsyncStorage:\", error);\n      return initialValue;\n    }\n  }), [initialValue, key]);\n  useEffect(function () {\n    void fetchData().then(function (value) {\n      setState(value);\n    });\n  }, []);\n  var setAsyncStorageState = function () {\n    var _ref2 = _asyncToGenerator(function* (newValue) {\n      try {\n        yield Unifier.storage.setItem(key, newValue);\n        setState(newValue);\n      } catch (error) {\n        console.error(\"Error writing data to AsyncStorage:\", error);\n      }\n    });\n    return function setAsyncStorageState(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return [state, setAsyncStorageState];\n};","map":{"version":3,"sources":["../src/useStoredState.ts"],"names":[],"mappings":";;AAAA,SAAQ,WAAW,EAAE,SAAS,EAAE,QAAQ,QAAO,OAAO;AAEtD,SAAQ,OAAO,QAAO,WAAW;AAEjC,OAAO,IAAM,cAAc,GAAG,SAAjB,cAAc,CACzB,GAAW,EACX,YAAgB,EAC4C;EAC5D,IAAA,SAAA,GAA0B,QAAQ,CAAgB,YAAY,CAAC;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA;IAAxD,KAAK,GAAA,UAAA;IAAE,QAAQ,GAAA,UAAA;EAGtB,IAAM,SAAS,GAAG,WAAW,CAAA,iBAAA,CAAC,aAAmC;IAC/D,IAAI;MACF,aAAa,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;IAC3C,CAAC,CAAC,OAAO,KAAK,EAAE;MACd,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC;MAC7D,OAAO,YAAY;IACrB;EACF,CAAC,GAAE,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAGvB,SAAS,CAAC,YAAK;IACb,KAAK,SAAS,CAAA,CAAE,CAAC,IAAI,CAAC,UAAC,KAAK,EAAI;MAC9B,QAAQ,CAAC,KAAK,CAAC;IACjB,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAM,oBAAoB;IAAA,IAAA,KAAA,GAAA,iBAAA,CAAG,WAAO,QAAuB,EAAmB;MAC5E,IAAI;QACF,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC;QAC5C,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC;MAC7D;IACF,CAAC;IAAA,gBAPK,oBAAoB,CAAA,EAAA;MAAA,OAAA,KAAA,CAAA,KAAA,OAAA,SAAA;IAAA;EAAA,GAOzB;EAED,OAAO,CAAC,KAAK,EAAE,oBAAoB,CAAC;AACtC,CAAC","sourceRoot":"","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { Unifier } from \"./Unifier\";\nexport const useStoredState = (key, initialValue) => {\n    const [state, setState] = useState(initialValue);\n    // Function to fetch data from AsyncStorage\n    const fetchData = useCallback(async () => {\n        try {\n            return await Unifier.storage.getItem(key);\n        }\n        catch (error) {\n            console.error(\"Error reading data from AsyncStorage:\", error);\n            return initialValue;\n        }\n    }, [initialValue, key]);\n    // Fetch data when the component mounts\n    useEffect(() => {\n        void fetchData().then((value) => {\n            setState(value);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const setAsyncStorageState = async (newValue) => {\n        try {\n            await Unifier.storage.setItem(key, newValue);\n            setState(newValue);\n        }\n        catch (error) {\n            console.error(\"Error writing data to AsyncStorage:\", error);\n        }\n    };\n    return [state, setAsyncStorageState];\n};\n//# sourceMappingURL=useStoredState.js.map"]},"metadata":{},"sourceType":"module"}