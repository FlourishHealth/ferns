{"ast":null,"code":"var _Reanimated;\nimport { tagMessage } from \"../../utils\";\nvar Reanimated;\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  Reanimated = undefined;\n}\nif (!((_Reanimated = Reanimated) !== null && _Reanimated !== void 0 && _Reanimated.useSharedValue)) {\n  Reanimated = undefined;\n}\nvar _worklet_16759732740229_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    tagMessage\\n  } = this._closure;\\n  console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"tagMessage\\\",\\\"_closure\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.js\\\"],\\\"mappings\\\":\\\"AAqB+B,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGjCC,OAAO,CAACC,IAAI,CAACH,UAAU,CAAC,gGAAgG,CAAC,CAAC;AAC5H\\\"}\"\n};\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  Reanimated.setGestureState = function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));\n    };\n    _f._closure = {\n      tagMessage: tagMessage\n    };\n    _f.__initData = _worklet_16759732740229_init_data;\n    _f.__workletHash = 16759732740229;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n}\nexport { Reanimated };","map":{"version":3,"sources":["reanimatedWrapper.ts"],"names":["tagMessage","Reanimated","require","e","undefined","useSharedValue","setGestureState","console","warn"],"mappings":";AAKA,SAASA,UAAT;AAMA,IAAIC,UAAJ;AAkBA,IAAI;EACFA,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAApBD;AACD,CAFD,CAEE,OAAOE,CAAP,EAAU;EAGVF,UAAU,GAAGG,SAAbH;AACD;AAED,IAAI,EAAA,CAAA,WAAA,GAACA,UAAD,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,IAACA,WAAAA,CAAYI,cAAb,CAAJ,EAAiC;EAG/BJ,UAAU,GAAGG,SAAbH;AACD;AAAA,IAAA,iCAAA;EAAA,IAAA;EAAA,QAAA;EAAA,SAAA;AAAA;AAED,IAAIA,UAAU,KAAKG,SAAfH,IAA4B,CAACA,UAAU,CAACK,eAA5C,EAA6D;EAE3DL,UAAU,CAACK,eAAXL;IAAAA,IAAAA,EAAAA,QAAAA,MAAAA,CAAAA,KAAAA;IAAAA,IAAAA,EAAAA,YAAAA,GAAAA,EAAmC;MAEjCM,OAAO,CAACC,IAARD,CACEP,UAAU,CACR,gGADQ,CADZO,CAAAA;IAKD,CAPDN;IAAAA,EAAAA,CAAAA,QAAAA;MAAAA,UAAAA,E;;;;;;;KAAAA;AAQD;AAED,SAASA,UAAT","sourcesContent":["import { ComponentClass } from 'react';\nimport {\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport { tagMessage } from '../../utils';\n\nexport interface SharedValue<T> {\n  value: T;\n}\n\nlet Reanimated: {\n  default: {\n    // Slightly modified definition copied from 'react-native-reanimated'\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    createAnimatedComponent<P extends object>(\n      component: ComponentClass<P>,\n      options?: unknown\n    ): ComponentClass<P>;\n  };\n  useEvent: (\n    callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void,\n    events: string[],\n    rebuild: boolean\n  ) => unknown;\n  useSharedValue: <T>(value: T) => SharedValue<T>;\n  setGestureState: (handlerTag: number, newState: number) => void;\n};\n\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  // When 'react-native-reanimated' is not available we want to quietly continue\n  // @ts-ignore TS demands the variable to be initialized\n  Reanimated = undefined;\n}\n\nif (!Reanimated?.useSharedValue) {\n  // @ts-ignore Make sure the loaded module is actually Reanimated, if it's not\n  // reset the module to undefined so we can fallback to the default implementation\n  Reanimated = undefined;\n}\n\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  // The loaded module is Reanimated but it doesn't have the setGestureState defined\n  Reanimated.setGestureState = () => {\n    'worklet';\n    console.warn(\n      tagMessage(\n        'Please use newer version of react-native-reanimated in order to control state of the gestures.'\n      )\n    );\n  };\n}\n\nexport { Reanimated };\n"]},"metadata":{},"sourceType":"module"}