{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSpringConfig = void 0;\nvar invariant_1 = require(\"./invariant\");\nexports.getSpringConfig = function (config) {\n  var friction = config.friction,\n    tension = config.tension,\n    speed = config.speed,\n    bounciness = config.bounciness,\n    stiffness = config.stiffness,\n    damping = config.damping,\n    mass = config.mass;\n  if (stiffness || damping || mass) {\n    invariant_1.invariant(bounciness || speed || tension || friction, `You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one`);\n    return {\n      stiffness: stiffness,\n      damping: damping,\n      mass: mass\n    };\n  } else if (bounciness || speed) {\n    invariant_1.invariant(tension || friction || stiffness || damping || mass, `You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one`);\n    return {\n      bounciness: bounciness,\n      speed: speed\n    };\n  }\n  return {\n    tension: tension,\n    friction: friction\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","getSpringConfig","invariant_1","require","config","friction","tension","speed","bounciness","stiffness","damping","mass","invariant"],"sources":["/Users/josh/src/ui/node_modules/react-native-modalize/lib/utils/get-spring-config.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSpringConfig = void 0;\nconst invariant_1 = require(\"./invariant\");\nexports.getSpringConfig = (config) => {\n    const { friction, tension, speed, bounciness, stiffness, damping, mass } = config;\n    if (stiffness || damping || mass) {\n        invariant_1.invariant(bounciness || speed || tension || friction, `You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one`);\n        return {\n            stiffness,\n            damping,\n            mass,\n        };\n    }\n    else if (bounciness || speed) {\n        invariant_1.invariant(tension || friction || stiffness || damping || mass, `You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one`);\n        return {\n            bounciness,\n            speed,\n        };\n    }\n    return {\n        tension,\n        friction,\n    };\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,IAAMC,WAAW,GAAGC,OAAO,cAAc,CAAC;AAC1CJ,OAAO,CAACE,eAAe,GAAG,UAACG,MAAM,EAAK;EAClC,IAAQC,QAAQ,GAA2DD,MAAM,CAAzEC,QAAQ;IAAEC,OAAO,GAAkDF,MAAM,CAA/DE,OAAO;IAAEC,KAAK,GAA2CH,MAAM,CAAtDG,KAAK;IAAEC,UAAU,GAA+BJ,MAAM,CAA/CI,UAAU;IAAEC,SAAS,GAAoBL,MAAM,CAAnCK,SAAS;IAAEC,OAAO,GAAWN,MAAM,CAAxBM,OAAO;IAAEC,IAAI,GAAKP,MAAM,CAAfO,IAAI;EACtE,IAAIF,SAAS,IAAIC,OAAO,IAAIC,IAAI,EAAE;IAC9BT,WAAW,CAACU,SAAS,CAACJ,UAAU,IAAID,KAAK,IAAID,OAAO,IAAID,QAAQ,EAAG,4GAA2G,CAAC;IAC/K,OAAO;MACHI,SAAS,EAATA,SAAS;MACTC,OAAO,EAAPA,OAAO;MACPC,IAAI,EAAJA;IACJ,CAAC;EACL,CAAC,MACI,IAAIH,UAAU,IAAID,KAAK,EAAE;IAC1BL,WAAW,CAACU,SAAS,CAACN,OAAO,IAAID,QAAQ,IAAII,SAAS,IAAIC,OAAO,IAAIC,IAAI,EAAG,4GAA2G,CAAC;IACxL,OAAO;MACHH,UAAU,EAAVA,UAAU;MACVD,KAAK,EAALA;IACJ,CAAC;EACL;EACA,OAAO;IACHD,OAAO,EAAPA,OAAO;IACPD,QAAQ,EAARA;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script"}