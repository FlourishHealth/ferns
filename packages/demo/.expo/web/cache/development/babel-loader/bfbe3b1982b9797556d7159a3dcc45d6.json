{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { withTiming, withSpring } from '../../animation';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nexport var ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  _inherits(ComplexAnimationBuilder, _BaseAnimationBuilder);\n  var _super = _createSuper(ComplexAnimationBuilder);\n  function ComplexAnimationBuilder() {\n    var _this;\n    _classCallCheck(this, ComplexAnimationBuilder);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"easingV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"rotateV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"dampingV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"dampingRatioV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"massV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"stiffnessV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"overshootClampingV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"restDisplacementThresholdV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"restSpeedThresholdV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"initialValues\", void 0);\n    return _this;\n  }\n  _createClass(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify(duration) {\n      this.durationV = duration;\n      this.type = withSpring;\n      return this;\n    }\n  }, {\n    key: \"dampingRatio\",\n    value: function dampingRatio(value) {\n      this.dampingRatioV = value;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      this.initialValues = values;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : withTiming;\n      var damping = this.dampingV;\n      var dampingRatio = this.dampingRatioV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n      function maybeSetConfigValue(value, variableName) {\n        if (value) {\n          config[variableName] = value;\n        }\n      }\n      if (type === withTiming) {\n        maybeSetConfigValue(easing, 'easing');\n      }\n      [{\n        variableName: 'damping',\n        value: damping\n      }, {\n        variableName: 'dampingRatio',\n        value: dampingRatio\n      }, {\n        variableName: 'mass',\n        value: mass\n      }, {\n        variableName: 'stiffness',\n        value: stiffness\n      }, {\n        variableName: 'overshootClamping',\n        value: overshootClamping\n      }, {\n        variableName: 'restDisplacementThreshold',\n        value: restDisplacementThreshold\n      }, {\n        variableName: 'restSpeedThreshold',\n        value: restSpeedThreshold\n      }, {\n        variableName: 'duration',\n        value: duration\n      }, {\n        variableName: 'rotate',\n        value: rotate\n      }].forEach(function (_ref) {\n        var value = _ref.value,\n          variableName = _ref.variableName;\n        return maybeSetConfigValue(value, variableName);\n      });\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify(duration) {\n      var instance = this.createInstance();\n      return instance.springify(duration);\n    }\n  }, {\n    key: \"dampingRatio\",\n    value: function dampingRatio(_dampingRatio) {\n      var instance = this.createInstance();\n      return instance.dampingRatio(_dampingRatio);\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      var instance = this.createInstance();\n      return instance.withInitialValues(values);\n    }\n  }]);\n  return ComplexAnimationBuilder;\n}(BaseAnimationBuilder);\n_defineProperty(ComplexAnimationBuilder, \"createInstance\", void 0);","map":{"version":3,"sources":["ComplexAnimationBuilder.ts"],"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","constructor","easingFunction","instance","createInstance","easing","easingV","degree","rotate","rotateV","duration","springify","durationV","type","dampingRatio","value","dampingRatioV","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","values","withInitialValues","initialValues","getAnimationAndConfig","animation","config","maybeSetConfigValue","variableName","forEach","_defineProperty"],"mappings":"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","sourcesContent":["'use strict';\nimport { withTiming, withSpring } from '../../animation';\nimport type {\n  AnimationFunction,\n  BaseBuilderAnimationConfig,\n  LayoutAnimationAndConfig,\n} from './commonTypes';\nimport type { EasingFunction } from '../../Easing';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nimport type { StyleProps } from '../../commonTypes';\n\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  easingV?: EasingFunction;\n  rotateV?: string;\n  type?: AnimationFunction;\n  dampingV?: number;\n  dampingRatioV?: number;\n  massV?: number;\n  stiffnessV?: number;\n  overshootClampingV?: number;\n  restDisplacementThresholdV?: number;\n  restSpeedThresholdV?: number;\n  initialValues?: StyleProps;\n\n  static createInstance: <T extends typeof BaseAnimationBuilder>(\n    this: T\n  ) => InstanceType<T>;\n\n  /**\n   * Lets you change the easing curve of the animation. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param easingFunction - An easing function which defines the animation curve.\n   */\n  static easing<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    easingFunction: EasingFunction\n  ) {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n\n  easing(easingFunction: EasingFunction): this {\n    this.easingV = easingFunction;\n    return this;\n  }\n\n  /**\n   * Lets you rotate the element. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param degree - The rotation degree.\n   */\n  static rotate<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    degree: string\n  ) {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n\n  rotate(degree: string): this {\n    this.rotateV = degree;\n    return this;\n  }\n\n  /**\n   * Enables the spring-based animation configuration. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param duration - An optional duration of the spring animation (in milliseconds).\n   */\n  static springify<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    duration?: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.springify(duration);\n  }\n\n  springify(duration?: number): this {\n    this.durationV = duration;\n    this.type = withSpring as AnimationFunction;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation damping ratio. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param dampingRatio - How damped the spring is.\n   */\n  static dampingRatio<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    dampingRatio: number\n  ) {\n    const instance = this.createInstance();\n    return instance.dampingRatio(dampingRatio);\n  }\n\n  dampingRatio(value: number): this {\n    this.dampingRatioV = value;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation damping. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param value - Decides how quickly a spring stops moving. Higher damping means the spring will come to rest faster.\n   */\n  static damping<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    damping: number\n  ) {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n\n  damping(damping: number): this {\n    this.dampingV = damping;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation mass. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param mass - The weight of the spring. Reducing this value makes the animation faster.\n   */\n  static mass<T extends typeof ComplexAnimationBuilder>(this: T, mass: number) {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n\n  mass(mass: number): this {\n    this.massV = mass;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the stiffness of the spring animation. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param stiffness - How bouncy the spring is.\n   */\n  static stiffness<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    stiffness: number\n  ) {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n\n  stiffness(stiffness: number): this {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n\n  /**\n   * Lets you adjust overshoot clamping of the spring. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param overshootClamping - Whether a spring can bounce over the final position.\n   */\n  static overshootClamping<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    overshootClamping: number\n  ) {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n\n  overshootClamping(overshootClamping: number): this {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the rest displacement threshold of the spring animation. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param restDisplacementThreshold - The displacement below which the spring will snap to the designated position without further oscillations.\n   */\n  static restDisplacementThreshold<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    restDisplacementThreshold: number\n  ) {\n    const instance = this.createInstance();\n    return instance.restDisplacementThreshold(restDisplacementThreshold);\n  }\n\n  restDisplacementThreshold(restDisplacementThreshold: number) {\n    this.restDisplacementThresholdV = restDisplacementThreshold;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the rest speed threshold of the spring animation. Can be chained alongside other [layout animation modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param restSpeedThreshold - The speed in pixels per second from which the spring will snap to the designated position without further oscillations.\n   */\n  static restSpeedThreshold<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    restSpeedThreshold: number\n  ) {\n    const instance = this.createInstance();\n    return instance.restSpeedThreshold(restSpeedThreshold);\n  }\n\n  restSpeedThreshold(restSpeedThreshold: number): this {\n    this.restSpeedThresholdV = restSpeedThreshold;\n    return this;\n  }\n\n  /**\n   * Lets you override the initial config of the animation\n   *\n   * @param values - An object containing the styles to override.\n   */\n  static withInitialValues<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    values: StyleProps\n  ) {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n\n  withInitialValues(values: StyleProps): this {\n    this.initialValues = values;\n    return this;\n  }\n\n  getAnimationAndConfig(): LayoutAnimationAndConfig {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : (withTiming as AnimationFunction);\n    const damping = this.dampingV;\n    const dampingRatio = this.dampingRatioV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const restDisplacementThreshold = this.restDisplacementThresholdV;\n    const restSpeedThreshold = this.restSpeedThresholdV;\n\n    const animation = type;\n\n    const config: BaseBuilderAnimationConfig = {};\n\n    function maybeSetConfigValue<Key extends keyof BaseBuilderAnimationConfig>(\n      value: BaseBuilderAnimationConfig[Key],\n      variableName: Key\n    ) {\n      if (value) {\n        config[variableName] = value;\n      }\n    }\n\n    if (type === withTiming) {\n      maybeSetConfigValue(easing, 'easing');\n    }\n\n    (\n      [\n        { variableName: 'damping', value: damping },\n        { variableName: 'dampingRatio', value: dampingRatio },\n        { variableName: 'mass', value: mass },\n        { variableName: 'stiffness', value: stiffness },\n        { variableName: 'overshootClamping', value: overshootClamping },\n        {\n          variableName: 'restDisplacementThreshold',\n          value: restDisplacementThreshold,\n        },\n        { variableName: 'restSpeedThreshold', value: restSpeedThreshold },\n        { variableName: 'duration', value: duration },\n        { variableName: 'rotate', value: rotate },\n      ] as const\n    ).forEach(({ value, variableName }) =>\n      maybeSetConfigValue(value, variableName)\n    );\n\n    return [animation, config];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}