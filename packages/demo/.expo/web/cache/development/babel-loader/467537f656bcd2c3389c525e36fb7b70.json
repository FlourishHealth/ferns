{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nexport var Spinner = function Spinner(_ref) {\n  var size = _ref.size,\n    color = _ref.color;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      return setShow(true);\n    }, 300);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, []);\n  if (!show) {\n    return null;\n  }\n  var spinnerSize = size === \"sm\" ? \"small\" : \"large\";\n  return React.createElement(ActivityIndicator, {\n    color: color !== null && color !== void 0 ? color : \"darkGray\",\n    size: spinnerSize\n  });\n};","map":{"version":3,"sources":["../src/Spinner.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,IAAiB,SAAS,EAAE,QAAQ,QAAO,OAAO;AAAC,OAAA,iBAAA;AAK/D,OAAO,IAAM,OAAO,GAAG,SAAV,OAAO,CAAA,IAAA,EAAwD;EAAA,IAAnD,IAAI,GAAA,IAAA,CAAJ,IAAI;IAAE,KAAK,GAAA,IAAA,CAAL,KAAK;EAClC,IAAA,SAAA,GAAwB,QAAQ,CAAC,KAAK,CAAC;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA;IAAhC,IAAI,GAAA,UAAA;IAAE,OAAO,GAAA,UAAA;EAIpB,SAAS,CAAC,YAAK;IACb,IAAM,KAAK,GAAG,UAAU,CAAC;MAAA,OAAM,OAAO,CAAC,IAAI,CAAC;IAAA,GAAE,GAAG,CAAC;IAClD,OAAO;MAAA,OAAM,YAAY,CAAC,KAAK,CAAC;IAAA;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAAC,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EACA,IAAM,WAAW,GAAsB,IAAI,KAAK,IAAI,GAAG,OAAO,GAAG,OAAO;EACxE,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA;IAAC,KAAK,EAAE,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAL,KAAK,GAAI,UAAU;IAAE,IAAI,EAAE;EAAW,CAAA,CAAI;AAC7E,CAAC","sourceRoot":"","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator } from \"react-native\";\nexport const Spinner = ({ size, color }) => {\n    const [show, setShow] = useState(false);\n    // The delay is for perceived performance. You don't want to show a spinner when you're doing a\n    // quick action.\n    useEffect(() => {\n        const timer = setTimeout(() => setShow(true), 300);\n        return () => clearTimeout(timer);\n    }, []);\n    if (!show) {\n        return null;\n    }\n    const spinnerSize = size === \"sm\" ? \"small\" : \"large\";\n    return React.createElement(ActivityIndicator, { color: color !== null && color !== void 0 ? color : \"darkGray\", size: spinnerSize });\n};\n//# sourceMappingURL=Spinner.js.map"]},"metadata":{},"sourceType":"module"}