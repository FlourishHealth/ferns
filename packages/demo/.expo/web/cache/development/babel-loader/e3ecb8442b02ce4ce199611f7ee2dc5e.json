{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\nimport { FontDisplay } from './Font.types';\nfunction getFontFaceStyleSheet() {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  var styleSheet = getStyleElement();\n  return styleSheet.sheet ? styleSheet.sheet : null;\n}\nfunction getFontFaceRules() {\n  var sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    var rules = _toConsumableArray(sheet.cssRules);\n    var items = [];\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({\n          rule: rule,\n          index: i\n        });\n      }\n    }\n    return items;\n  }\n  return [];\n}\nfunction getFontFaceRulesMatchingResource(fontFamilyName, options) {\n  var rules = getFontFaceRules();\n  return rules.filter(function (_ref) {\n    var rule = _ref.rule;\n    return rule.style.fontFamily === fontFamilyName && (options && options.display ? options.display === rule.style.fontDisplay : true);\n  });\n}\nvar serverContext = new Set();\nfunction getHeadElements() {\n  var entries = _toConsumableArray(serverContext.entries());\n  if (!entries.length) {\n    return [];\n  }\n  var css = entries.map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 1),\n      css = _ref3[0].css;\n    return css;\n  }).join('\\n');\n  var links = entries.map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 1),\n      resourceId = _ref5[0].resourceId;\n    return resourceId;\n  });\n  return [{\n    $$type: 'style',\n    children: css,\n    id: ID,\n    type: 'text/css'\n  }].concat(_toConsumableArray(links.map(function (resourceId) {\n    return {\n      $$type: 'link',\n      rel: 'preload',\n      href: resourceId,\n      as: 'font',\n      crossorigin: ''\n    };\n  })));\n}\nexport default {\n  get name() {\n    return 'ExpoFontLoader';\n  },\n  unloadAllAsync: function () {\n    var _unloadAllAsync = _asyncToGenerator(function* () {\n      if (!Platform.isDOMAvailable) return;\n      var element = document.getElementById(ID);\n      if (element && element instanceof HTMLStyleElement) {\n        document.removeChild(element);\n      }\n    });\n    function unloadAllAsync() {\n      return _unloadAllAsync.apply(this, arguments);\n    }\n    return unloadAllAsync;\n  }(),\n  unloadAsync: function () {\n    var _unloadAsync = _asyncToGenerator(function* (fontFamilyName, options) {\n      var sheet = getFontFaceStyleSheet();\n      if (!sheet) return;\n      var items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n      for (var item of items) {\n        sheet.deleteRule(item.index);\n      }\n    });\n    function unloadAsync(_x, _x2) {\n      return _unloadAsync.apply(this, arguments);\n    }\n    return unloadAsync;\n  }(),\n  getServerResources: function getServerResources() {\n    var elements = getHeadElements();\n    return elements.map(function (element) {\n      switch (element.$$type) {\n        case 'style':\n          return `<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;\n        case 'link':\n          return `<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;\n        default:\n          return '';\n      }\n    }).filter(Boolean);\n  },\n  resetServerContext: function resetServerContext() {\n    serverContext.clear();\n  },\n  isLoaded: function isLoaded(fontFamilyName) {\n    var _getFontFaceRulesMatc;\n    var resource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (typeof window === 'undefined') {\n      return !!_toConsumableArray(serverContext.values()).find(function (asset) {\n        return asset.name === fontFamilyName;\n      });\n    }\n    return ((_getFontFaceRulesMatc = getFontFaceRulesMatchingResource(fontFamilyName, resource)) == null ? void 0 : _getFontFaceRulesMatc.length) > 0;\n  },\n  loadAsync: function loadAsync(fontFamilyName, resource) {\n    if (typeof window === 'undefined') {\n      serverContext.add({\n        name: fontFamilyName,\n        css: _createWebFontTemplate(fontFamilyName, resource),\n        resourceId: resource.uri\n      });\n      return Promise.resolve();\n    }\n    var canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError('ERR_WEB_ENVIRONMENT', `The browser's \\`document.head\\` element doesn't support injecting fonts.`);\n    }\n    var style = getStyleElement();\n    document.head.appendChild(style);\n    var res = getFontFaceRulesMatchingResource(fontFamilyName, resource);\n    if (!res.length) {\n      _createWebStyle(fontFamilyName, resource);\n    }\n    if (!isFontLoadingListenerSupported()) {\n      return Promise.resolve();\n    }\n    return new FontObserver(fontFamilyName, {\n      display: resource.display\n    }).load(null, 6000);\n  }\n};\nvar ID = 'expo-generated-fonts';\nfunction getStyleElement() {\n  var element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  var styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\nexport function _createWebFontTemplate(fontFamily, resource) {\n  return `@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${resource.display || FontDisplay.AUTO}}`;\n}\nfunction _createWebStyle(fontFamily, resource) {\n  var fontStyle = _createWebFontTemplate(fontFamily, resource);\n  var styleElement = getStyleElement();\n  if (styleElement.styleSheet) {\n    var styleElementIE = styleElement;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText ? styleElementIE.styleSheet.cssText + fontStyle : fontStyle;\n  } else {\n    var textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\nfunction isFontLoadingListenerSupported() {\n  var userAgent = window.navigator.userAgent;\n  var isIOS = !!userAgent.match(/iPad|iPhone/i);\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var isEdge = userAgent.includes('Edge');\n  var isIE = userAgent.includes('Trident');\n  var isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}","map":{"version":3,"sources":["../src/ExpoFontLoader.web.ts"],"names":[],"mappings":";;;AAAA,SAAS,UAAU,EAAE,QAAQ,QAAQ,mBAAmB;AACxD,OAAO,YAAY,MAAM,kBAAkB;AAG3C,SAAS,WAAW,QAAsB,cAAc;AAExD,SAAS,qBAAqB,CAAA,EAAA;EAC5B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;IAC5B,OAAO,IAAI;EACZ;EACD,IAAM,UAAU,GAAG,eAAe,CAAA,CAAE;EACpC,OAAO,UAAU,CAAC,KAAK,GAAI,UAAU,CAAC,KAAuB,GAAG,IAAI;AACtE;AAIA,SAAS,gBAAgB,CAAA,EAAA;EACvB,IAAM,KAAK,GAAG,qBAAqB,CAAA,CAAE;EACrC,IAAI,KAAK,EAAE;IAET,IAAM,KAAK,GAAA,kBAAA,CAAO,KAAK,CAAC,QAAQ,CAAC;IAEjC,IAAM,KAAK,GAAe,EAAE;IAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACrC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;MACrB,IAAI,IAAI,YAAY,eAAe,EAAE;QACnC,KAAK,CAAC,IAAI,CAAC;UAAE,IAAI,EAAJ,IAAI;UAAE,KAAK,EAAE;QAAC,CAAE,CAAC;MAC/B;IACF;IACD,OAAO,KAAK;EACb;EACD,OAAO,EAAE;AACX;AAEA,SAAS,gCAAgC,CACvC,cAAsB,EACtB,OAA2B,EAAA;EAE3B,IAAM,KAAK,GAAG,gBAAgB,CAAA,CAAE;EAChC,OAAO,KAAK,CAAC,MAAM,CAAC,UAAA,IAAA,EAAa;IAAA,IAAV,IAAI,GAAA,IAAA,CAAJ,IAAI;IACzB,OACE,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,cAAc,KACvC,OAAO,IAAI,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,KAAM,IAAI,CAAC,KAAa,CAAC,WAAW,GAAG,IAAI,CAAC;EAE7F,CAAC,CAAC;AACJ;AAEA,IAAM,aAAa,GAA2D,IAAI,GAAG,CAAA,CAAE;AAEvF,SAAS,eAAe,CAAA,EAAA;EAUtB,IAAM,OAAO,GAAA,kBAAA,CAAO,aAAa,CAAC,OAAO,CAAA,CAAE,CAAC;EAC5C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;IACnB,OAAO,EAAE;EACV;EACD,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,KAAA;IAAA,IAAA,KAAA,GAAA,cAAA,CAAA,KAAA;MAAI,GAAG,GAAA,KAAA,IAAH,GAAG;IAAA,OAAQ,GAAG;EAAA,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC;EACtD,IAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,KAAA;IAAA,IAAA,KAAA,GAAA,cAAA,CAAA,KAAA;MAAI,UAAU,GAAA,KAAA,IAAV,UAAU;IAAA,OAAQ,UAAU;EAAA,EAAC;EAE3D,QACE;IACE,MAAM,EAAE,OAAO;IACf,QAAQ,EAAE,GAAG;IACb,EAAE,EAAE,EAAE;IACN,IAAI,EAAE;GACP,EAAA,MAAA,CAAA,kBAAA,CACE,KAAK,CAAC,GAAG,CAAC,UAAC,UAAU;IAAA,OAAM;MAC5B,MAAM,EAAE,MAAM;MACd,GAAG,EAAE,SAAS;MACd,IAAI,EAAE,UAAU;MAChB,EAAE,EAAE,MAAM;MACV,WAAW,EAAE;KACd;EAAA,CAAC,CAAC;AAEP;AAEA,eAAe;EACb,IAAI,IAAI,CAAA,EAAA;IACN,OAAO,gBAAgB;EACzB,CAAC;EAEK,cAAc;IAAA,IAAA,eAAA,GAAA,iBAAA,cAAA;MAClB,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;MAE9B,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;MAC3C,IAAI,OAAO,IAAI,OAAO,YAAY,gBAAgB,EAAE;QAClD,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;MAC9B;IACH,CAAC;IAAA,SAAA,eAAA;MAAA,OAAA,eAAA,CAAA,KAAA,OAAA,SAAA;IAAA;IAAA,OAAA,cAAA;EAAA;EAEK,WAAW;IAAA,IAAA,YAAA,GAAA,iBAAA,YAAC,cAAsB,EAAE,OAA2B,EAAA;MACnE,IAAM,KAAK,GAAG,qBAAqB,CAAA,CAAE;MACrC,IAAI,CAAC,KAAK,EAAE;MACZ,IAAM,KAAK,GAAG,gCAAgC,CAAC,cAAc,EAAE,OAAO,CAAC;MACvE,KAAK,IAAM,IAAI,IAAI,KAAK,EAAE;QACxB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MAC7B;IACH,CAAC;IAAA,SAAA,YAAA,EAAA,EAAA,GAAA;MAAA,OAAA,YAAA,CAAA,KAAA,OAAA,SAAA;IAAA;IAAA,OAAA,WAAA;EAAA;EAED,kBAAkB,WAAA,mBAAA,EAAA;IAChB,IAAM,QAAQ,GAAG,eAAe,CAAA,CAAE;IAElC,OAAO,QAAQ,CACZ,GAAG,CAAC,UAAC,OAAO,EAAI;MACf,QAAQ,OAAO,CAAC,MAAM;QACpB,KAAK,OAAO;UACV,OAAO,cAAc,OAAO,CAAC,EAAE,WAAW,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,QAAQ,UAAU;QACvF,KAAK,MAAM;UACT,OAAO,cAAc,OAAO,CAAC,GAAG,WAAW,OAAO,CAAC,IAAI,SAAS,OAAO,CAAC,EAAE,kBAAkB,OAAO,CAAC,WAAW,MAAM;QACvH;UACE,OAAO,EAAE;MACZ;IACH,CAAC,CAAC,CACD,MAAM,CAAC,OAAO,CAAC;EACpB,CAAC;EAED,kBAAkB,WAAA,mBAAA,EAAA;IAChB,aAAa,CAAC,KAAK,CAAA,CAAE;EACvB,CAAC;EAED,QAAQ,WAAA,SAAC,cAAsB,EAAkC;IAAA,IAAA,qBAAA;IAAA,IAAhC,QAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAA8B,CAAA,CAAE;IAC/D,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;MACjC,OAAO,CAAC,CAAC,kBAAA,CAAI,aAAa,CAAC,MAAM,CAAA,CAAE,EAAE,IAAI,CAAC,UAAC,KAAK,EAAI;QAClD,OAAO,KAAK,CAAC,IAAI,KAAK,cAAc;MACtC,CAAC,CAAC;IACH;IACD,OAAO,EAAA,qBAAA,GAAA,gCAAgC,CAAC,cAAc,EAAE,QAAQ,CAAC,qBAA1D,qBAAA,CAA4D,MAAM,IAAG,CAAC;EAC/E,CAAC;EAGD,SAAS,WAAA,UAAC,cAAsB,EAAE,QAAsB,EAAA;IACtD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;MACjC,aAAa,CAAC,GAAG,CAAC;QAChB,IAAI,EAAE,cAAc;QACpB,GAAG,EAAE,sBAAsB,CAAC,cAAc,EAAE,QAAQ,CAAC;QAErD,UAAU,EAAE,QAAQ,CAAC;OACtB,CAAC;MACF,OAAO,OAAO,CAAC,OAAO,CAAA,CAAE;IACzB;IAED,IAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,WAAW,KAAK,UAAU;IACvF,IAAI,CAAC,cAAc,EAAE;MACnB,MAAM,IAAI,UAAU,CAClB,qBAAqB,EACrB,0EAA0E,CAC3E;IACF;IAED,IAAM,KAAK,GAAG,eAAe,CAAA,CAAE;IAC/B,QAAQ,CAAC,IAAK,CAAC,WAAW,CAAC,KAAK,CAAC;IAEjC,IAAM,GAAG,GAAG,gCAAgC,CAAC,cAAc,EAAE,QAAQ,CAAC;IACtE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;MACf,eAAe,CAAC,cAAc,EAAE,QAAQ,CAAC;IAC1C;IAED,IAAI,CAAC,8BAA8B,CAAA,CAAE,EAAE;MACrC,OAAO,OAAO,CAAC,OAAO,CAAA,CAAE;IACzB;IAED,OAAO,IAAI,YAAY,CAAC,cAAc,EAAE;MAAE,OAAO,EAAE,QAAQ,CAAC;IAAO,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;EACzF;CACD;AAED,IAAM,EAAE,GAAG,sBAAsB;AAEjC,SAAS,eAAe,CAAA,EAAA;EACtB,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;EAC3C,IAAI,OAAO,IAAI,OAAO,YAAY,gBAAgB,EAAE;IAClD,OAAO,OAAO;EACf;EACD,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;EACpD,YAAY,CAAC,EAAE,GAAG,EAAE;EACpB,YAAY,CAAC,IAAI,GAAG,UAAU;EAC9B,OAAO,YAAY;AACrB;AAEA,OAAM,SAAU,sBAAsB,CAAC,UAAkB,EAAE,QAAsB,EAAA;EAC/E,OAAO,0BAA0B,UAAU,YAAY,QAAQ,CAAC,GAAG,kBACjE,QAAQ,CAAC,OAAO,IAAI,WAAW,CAAC,IAClC,GAAG;AACL;AAEA,SAAS,eAAe,CAAC,UAAkB,EAAE,QAAsB,EAAA;EACjE,IAAM,SAAS,GAAG,sBAAsB,CAAC,UAAU,EAAE,QAAQ,CAAC;EAE9D,IAAM,YAAY,GAAG,eAAe,CAAA,CAAE;EAGtC,IAAI,YAAY,CAAC,UAAU,EAAE;IAC3B,IAAM,cAAc,GAAG,YAAmB;IAC1C,cAAc,CAAC,UAAU,CAAC,OAAO,GAAG,cAAc,CAAC,UAAU,CAAC,OAAO,GACjE,cAAc,CAAC,UAAU,CAAC,OAAO,GAAG,SAAS,GAC7C,SAAS;GACd,MAAM;IACL,IAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;IACnD,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC;EACnC;EACD,OAAO,YAAY;AACrB;AAEA,SAAS,8BAA8B,CAAA,EAAA;EACrC,IAAQ,SAAS,GAAK,MAAM,CAAC,SAAS,CAA9B,SAAS;EAEjB,IAAM,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC;EAC/C,IAAM,QAAQ,GAAG,gCAAgC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;EAE3E,IAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;EAEzC,IAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;EAE1C,IAAM,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;EAC/C,OAAO,CAAC,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS;AAC9D","sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nconst serverContext: Set<{ name: string; css: string; resourceId: string }> = new Set();\n\nfunction getHeadElements(): {\n  $$type: string;\n  rel?: string;\n  href?: string;\n  as?: string;\n  crossorigin?: string;\n  children?: string;\n  id?: string;\n  type?: string;\n}[] {\n  const entries = [...serverContext.entries()];\n  if (!entries.length) {\n    return [];\n  }\n  const css = entries.map(([{ css }]) => css).join('\\n');\n  const links = entries.map(([{ resourceId }]) => resourceId);\n  // TODO: Maybe return nothing if no fonts were loaded.\n  return [\n    {\n      $$type: 'style',\n      children: css,\n      id: ID,\n      type: 'text/css',\n    },\n    ...links.map((resourceId) => ({\n      $$type: 'link',\n      rel: 'preload',\n      href: resourceId,\n      as: 'font',\n      crossorigin: '',\n    })),\n  ];\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  getServerResources(): string[] {\n    const elements = getHeadElements();\n\n    return elements\n      .map((element) => {\n        switch (element.$$type) {\n          case 'style':\n            return `<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;\n          case 'link':\n            return `<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;\n          default:\n            return '';\n        }\n      })\n      .filter(Boolean);\n  },\n\n  resetServerContext() {\n    serverContext.clear();\n  },\n\n  isLoaded(fontFamilyName: string, resource: UnloadFontOptions = {}): boolean {\n    if (typeof window === 'undefined') {\n      return !![...serverContext.values()].find((asset) => {\n        return asset.name === fontFamilyName;\n      });\n    }\n    return getFontFaceRulesMatchingResource(fontFamilyName, resource)?.length > 0;\n  },\n\n  // NOTE(EvanBacon): No async keyword! This cannot return a promise in Node environments.\n  loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (typeof window === 'undefined') {\n      serverContext.add({\n        name: fontFamilyName,\n        css: _createWebFontTemplate(fontFamilyName, resource),\n        // @ts-expect-error: typeof string\n        resourceId: resource.uri!,\n      });\n      return Promise.resolve();\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = getStyleElement();\n    document.head!.appendChild(style);\n\n    const res = getFontFaceRulesMatchingResource(fontFamilyName, resource);\n    if (!res.length) {\n      _createWebStyle(fontFamilyName, resource);\n    }\n\n    if (!isFontLoadingListenerSupported()) {\n      return Promise.resolve();\n    }\n\n    return new FontObserver(fontFamilyName, { display: resource.display }).load(null, 6000);\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nexport function _createWebFontTemplate(fontFamily: string, resource: FontResource): string {\n  return `@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${\n    resource.display || FontDisplay.AUTO\n  }}`;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = _createWebFontTemplate(fontFamily, resource);\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}