{"ast":null,"code":"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useDraggableNodesContext, usePanGestureContext } from '../context';\nexport var ScrollState = {\n  END: -1\n};\nvar InitialLayoutRect = {\n  w: 0,\n  h: 0,\n  x: 0,\n  y: 0,\n  px: 0,\n  py: 0\n};\nexport function resolveScrollRef(ref) {\n  var _a, _b, _c, _d, _e, _f;\n  if ((_a = ref.current) === null || _a === void 0 ? void 0 : _a._listRef) {\n    return (_b = ref.current._listRef) === null || _b === void 0 ? void 0 : _b._scrollRef;\n  }\n  if ((_c = ref.current) === null || _c === void 0 ? void 0 : _c.rlvRef) {\n    return (_f = (_e = (_d = ref.current) === null || _d === void 0 ? void 0 : _d.rlvRef) === null || _e === void 0 ? void 0 : _e._scrollComponent) === null || _f === void 0 ? void 0 : _f._scrollViewRef;\n  }\n  return ref.current;\n}\nexport function useDraggable(options) {\n  var gestureContext = usePanGestureContext();\n  var draggableNodes = useDraggableNodesContext();\n  var nodeRef = useRef(null);\n  var offset = useRef({\n    x: 0,\n    y: 0\n  });\n  var layout = useRef(InitialLayoutRect);\n  useEffect(function () {\n    var pushNode = function pushNode() {\n      var _a, _b;\n      var index = (_a = draggableNodes.nodes.current) === null || _a === void 0 ? void 0 : _a.findIndex(function (node) {\n        return node.ref === nodeRef;\n      });\n      if (index === undefined || index === -1) {\n        (_b = draggableNodes.nodes.current) === null || _b === void 0 ? void 0 : _b.push({\n          ref: nodeRef,\n          offset: offset,\n          rect: layout,\n          handlerConfig: options\n        });\n      }\n    };\n    var popNode = function popNode() {\n      var _a, _b;\n      var index = (_a = draggableNodes.nodes.current) === null || _a === void 0 ? void 0 : _a.findIndex(function (node) {\n        return node.ref === nodeRef;\n      });\n      if (index === undefined || index > -1) {\n        (_b = draggableNodes.nodes.current) === null || _b === void 0 ? void 0 : _b.splice(index, 1);\n      }\n    };\n    pushNode();\n    return function () {\n      popNode();\n    };\n  }, [draggableNodes.nodes, options]);\n  return {\n    nodeRef: nodeRef,\n    offset: offset,\n    draggableNodes: draggableNodes,\n    layout: layout,\n    gestureContext: gestureContext\n  };\n}\nexport function useScrollHandlers(options) {\n  var _a = useState(false),\n    _render = _a[0],\n    setRender = _a[1];\n  var _b = useDraggable(options),\n    nodeRef = _b.nodeRef,\n    gestureContext = _b.gestureContext,\n    offset = _b.offset,\n    layout = _b.layout;\n  var timer = useRef();\n  var subscription = useRef();\n  var onMeasure = useCallback(function (x, y, w, h, px, py) {\n    layout.current = {\n      x: x,\n      y: y,\n      w: w,\n      h: h + 10,\n      px: px,\n      py: py\n    };\n  }, [layout]);\n  var measureAndLayout = React.useCallback(function () {\n    clearTimeout(timer.current);\n    timer.current = setTimeout(function () {\n      var _a;\n      var ref = resolveScrollRef(nodeRef);\n      if (Platform.OS == 'web') {\n        var rect = ref.getBoundingClientRect();\n        ref.style.overflow = \"auto\";\n        onMeasure(rect.x, rect.y, rect.width, rect.height, rect.left, rect.top);\n      } else {\n        (_a = ref === null || ref === void 0 ? void 0 : ref.measure) === null || _a === void 0 ? void 0 : _a.call(ref, onMeasure);\n      }\n    }, 300);\n  }, [nodeRef, onMeasure]);\n  useEffect(function () {\n    if (Platform.OS === 'web' || !gestureContext.ref) return;\n    var interval = setInterval(function () {\n      if (gestureContext.ref.current) {\n        clearInterval(interval);\n        setRender(true);\n      }\n    }, 10);\n  }, [gestureContext.ref]);\n  var memoizedProps = React.useMemo(function () {\n    return {\n      ref: nodeRef,\n      simultaneousHandlers: gestureContext.ref,\n      onScroll: function onScroll(event) {\n        var _a = event.nativeEvent.contentOffset,\n          x = _a.x,\n          y = _a.y;\n        var maxOffsetX = event.nativeEvent.contentSize.width - layout.current.w;\n        var maxOffsetY = event.nativeEvent.contentSize.height - layout.current.h;\n        offset.current = {\n          x: x === maxOffsetX || x > maxOffsetX - 5 ? ScrollState.END : x,\n          y: y === maxOffsetY || y > maxOffsetY - 5 ? ScrollState.END : y\n        };\n      },\n      scrollEventThrottle: 1,\n      onLayout: function onLayout() {\n        var _a;\n        measureAndLayout();\n        (_a = subscription.current) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        subscription.current = gestureContext.eventManager.subscribe('onoffsetchange', function () {\n          measureAndLayout();\n        });\n      }\n    };\n  }, [gestureContext.eventManager, gestureContext.ref, layout, measureAndLayout, nodeRef, offset]);\n  return memoizedProps;\n}","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Platform","useDraggableNodesContext","usePanGestureContext","ScrollState","END","InitialLayoutRect","w","h","x","y","px","py","resolveScrollRef","ref","_a","_b","_c","_d","_e","_f","current","_listRef","_scrollRef","rlvRef","_scrollComponent","_scrollViewRef","useDraggable","options","gestureContext","draggableNodes","nodeRef","offset","layout","pushNode","index","nodes","findIndex","node","undefined","push","rect","handlerConfig","popNode","splice","useScrollHandlers","_render","setRender","timer","subscription","onMeasure","measureAndLayout","clearTimeout","setTimeout","OS","getBoundingClientRect","style","overflow","width","height","left","top","measure","call","interval","setInterval","clearInterval","memoizedProps","useMemo","simultaneousHandlers","onScroll","event","nativeEvent","contentOffset","maxOffsetX","contentSize","maxOffsetY","scrollEventThrottle","onLayout","unsubscribe","eventManager","subscribe"],"sources":["/Users/josh/src/ui/node_modules/react-native-actions-sheet/dist/src/hooks/use-scroll-handlers.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\nimport { useDraggableNodesContext, usePanGestureContext, } from '../context';\nexport var ScrollState = {\n    END: -1,\n};\nvar InitialLayoutRect = {\n    w: 0,\n    h: 0,\n    x: 0,\n    y: 0,\n    px: 0,\n    py: 0,\n};\nexport function resolveScrollRef(ref) {\n    var _a, _b, _c, _d, _e, _f;\n    // FlatList\n    if ((_a = ref.current) === null || _a === void 0 ? void 0 : _a._listRef) {\n        return (_b = ref.current._listRef) === null || _b === void 0 ? void 0 : _b._scrollRef;\n    }\n    // FlashList\n    if ((_c = ref.current) === null || _c === void 0 ? void 0 : _c.rlvRef) {\n        return (_f = (_e = (_d = ref.current) === null || _d === void 0 ? void 0 : _d.rlvRef) === null || _e === void 0 ? void 0 : _e._scrollComponent) === null || _f === void 0 ? void 0 : _f._scrollViewRef;\n    }\n    // ScrollView\n    return ref.current;\n}\nexport function useDraggable(options) {\n    var gestureContext = usePanGestureContext();\n    var draggableNodes = useDraggableNodesContext();\n    var nodeRef = useRef(null);\n    var offset = useRef({ x: 0, y: 0 });\n    var layout = useRef(InitialLayoutRect);\n    useEffect(function () {\n        var pushNode = function () {\n            var _a, _b;\n            var index = (_a = draggableNodes.nodes.current) === null || _a === void 0 ? void 0 : _a.findIndex(function (node) { return node.ref === nodeRef; });\n            if (index === undefined || index === -1) {\n                (_b = draggableNodes.nodes.current) === null || _b === void 0 ? void 0 : _b.push({\n                    ref: nodeRef,\n                    offset: offset,\n                    rect: layout,\n                    handlerConfig: options,\n                });\n            }\n        };\n        var popNode = function () {\n            var _a, _b;\n            var index = (_a = draggableNodes.nodes.current) === null || _a === void 0 ? void 0 : _a.findIndex(function (node) { return node.ref === nodeRef; });\n            if (index === undefined || index > -1) {\n                (_b = draggableNodes.nodes.current) === null || _b === void 0 ? void 0 : _b.splice(index, 1);\n            }\n        };\n        pushNode();\n        return function () {\n            popNode();\n        };\n    }, [draggableNodes.nodes, options]);\n    return {\n        nodeRef: nodeRef,\n        offset: offset,\n        draggableNodes: draggableNodes,\n        layout: layout,\n        gestureContext: gestureContext,\n    };\n}\n/**\n * Create a custom scrollable view inside the action sheet.\n * The scrollable view must implement `onScroll`, and `onLayout` props.\n * @example\n * ```tsx\n  const handlers = useScrollHandlers<RNScrollView>();\n  return <NativeViewGestureHandler\n    simultaneousHandlers={handlers.simultaneousHandlers}\n  >\n  <ScrollableView\n    {...handlers}\n  >\n  </ScrollableView>\n  \n  </NativeViewGestureHandler>\n * ```\n */\nexport function useScrollHandlers(options) {\n    var _a = useState(false), _render = _a[0], setRender = _a[1];\n    var _b = useDraggable(options), nodeRef = _b.nodeRef, gestureContext = _b.gestureContext, offset = _b.offset, layout = _b.layout;\n    var timer = useRef();\n    var subscription = useRef();\n    var onMeasure = useCallback(function (x, y, w, h, px, py) {\n        layout.current = {\n            x: x,\n            y: y,\n            w: w,\n            h: h + 10,\n            px: px,\n            py: py,\n        };\n    }, [layout]);\n    var measureAndLayout = React.useCallback(function () {\n        clearTimeout(timer.current);\n        timer.current = setTimeout(function () {\n            var _a;\n            var ref = resolveScrollRef(nodeRef);\n            if (Platform.OS == 'web') {\n                var rect = ref.getBoundingClientRect();\n                ref.style.overflow = \"auto\";\n                onMeasure(rect.x, rect.y, rect.width, rect.height, rect.left, rect.top);\n            }\n            else {\n                (_a = ref === null || ref === void 0 ? void 0 : ref.measure) === null || _a === void 0 ? void 0 : _a.call(ref, onMeasure);\n            }\n        }, 300);\n    }, [nodeRef, onMeasure]);\n    useEffect(function () {\n        if (Platform.OS === 'web' || !gestureContext.ref)\n            return;\n        var interval = setInterval(function () {\n            // Trigger a rerender when gestureContext gets populated.\n            if (gestureContext.ref.current) {\n                clearInterval(interval);\n                setRender(true);\n            }\n        }, 10);\n    }, [gestureContext.ref]);\n    var memoizedProps = React.useMemo(function () {\n        return {\n            ref: nodeRef,\n            simultaneousHandlers: gestureContext.ref,\n            onScroll: function (event) {\n                var _a = event.nativeEvent.contentOffset, x = _a.x, y = _a.y;\n                var maxOffsetX = event.nativeEvent.contentSize.width - layout.current.w;\n                var maxOffsetY = event.nativeEvent.contentSize.height - layout.current.h;\n                offset.current = {\n                    x: x === maxOffsetX || x > maxOffsetX - 5 ? ScrollState.END : x,\n                    y: y === maxOffsetY || y > maxOffsetY - 5 ? ScrollState.END : y,\n                };\n            },\n            scrollEventThrottle: 1,\n            onLayout: function () {\n                var _a;\n                measureAndLayout();\n                (_a = subscription.current) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n                subscription.current = gestureContext.eventManager.subscribe('onoffsetchange', function () {\n                    measureAndLayout();\n                });\n            },\n        };\n    }, [\n        gestureContext.eventManager,\n        gestureContext.ref,\n        layout,\n        measureAndLayout,\n        nodeRef,\n        offset,\n    ]);\n    return memoizedProps;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}