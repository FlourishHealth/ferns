{"ast":null,"code":"import '../Expo.fx';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function registerRootComponent(component) {\n  var qualifiedComponent = component;\n  if (process.env.NODE_ENV !== 'production') {\n    var _require = require('./withDevTools'),\n      withDevTools = _require.withDevTools;\n    qualifiedComponent = withDevTools(component);\n  }\n  AppRegistry.registerComponent('main', function () {\n    return qualifiedComponent;\n  });\n  if (Platform.OS === 'web') {\n    if (typeof document !== 'undefined') {\n      var rootTag = document.getElementById('root');\n      if (process.env.NODE_ENV !== 'production') {\n        if (!rootTag) {\n          throw new Error('Required HTML element with id \"root\" was not found in the document HTML.');\n        }\n      }\n      AppRegistry.runApplication('main', {\n        rootTag: rootTag,\n        hydrate: process.env.EXPO_PUBLIC_USE_STATIC === '1'\n      });\n    }\n  }\n}","map":{"version":3,"sources":["../../src/launch/registerRootComponent.tsx"],"names":[],"mappings":"AAAA,OAAO,YAAY;AAAC,OAAA,WAAA;AAAA,OAAA,QAAA;AAgBpB,eAAc,SAAU,qBAAqB,CAC3C,SAAiC,EAAA;EAEjC,IAAI,kBAAkB,GAAG,SAAS;EAElC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAA,QAAA,GAAyB,OAAO,CAAC,gBAAgB,CAAoC;MAA7E,YAAY,GAAA,QAAA,CAAZ,YAAY;IACpB,kBAAkB,GAAG,YAAY,CAAC,SAAS,CAAC;EAC7C;EAED,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE;IAAA,OAAM,kBAAkB;EAAA,EAAC;EAC/D,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;IAEzB,IAEE,OAAO,QAAQ,KAAK,WAAW,EAC/B;MACA,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC;MAC/C,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAI,CAAC,OAAO,EAAE;UACZ,MAAM,IAAI,KAAK,CACb,0EAA0E,CAC3E;QACF;MACF;MACD,WAAW,CAAC,cAAc,CAAC,MAAM,EAAE;QACjC,OAAO,EAAP,OAAO;QACP,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB,KAAK;OACjD,CAAC;IACH;EACF;AACH","sourcesContent":["import '../Expo.fx';\n\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\ntype InitialProps = {\n  exp?: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  let qualifiedComponent = component;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const { withDevTools } = require('./withDevTools') as typeof import('./withDevTools');\n    qualifiedComponent = withDevTools(component);\n  }\n\n  AppRegistry.registerComponent('main', () => qualifiedComponent);\n  if (Platform.OS === 'web') {\n    // Use two if statements for better dead code elimination.\n    if (\n      // Skip querying the DOM if we're in a Node.js environment.\n      typeof document !== 'undefined'\n    ) {\n      const rootTag = document.getElementById('root');\n      if (process.env.NODE_ENV !== 'production') {\n        if (!rootTag) {\n          throw new Error(\n            'Required HTML element with id \"root\" was not found in the document HTML.'\n          );\n        }\n      }\n      AppRegistry.runApplication('main', {\n        rootTag,\n        hydrate: process.env.EXPO_PUBLIC_USE_STATIC === '1',\n      });\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}