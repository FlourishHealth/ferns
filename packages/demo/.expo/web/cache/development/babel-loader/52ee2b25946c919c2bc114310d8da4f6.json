{"ast":null,"code":"import { getAssetByID } from '@react-native/assets-registry/registry';\nimport AssetSourceResolver from './AssetSourceResolver';\nvar _customSourceTransformer;\nexport function setCustomSourceTransformer(transformer) {\n  _customSourceTransformer = transformer;\n}\nexport default function resolveAssetSource(source) {\n  if (typeof source === 'object') {\n    return source;\n  }\n  var asset = getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n  var resolver = new AssetSourceResolver('https://expo.dev', null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get: function get() {\n    return setCustomSourceTransformer;\n  }\n});\nvar pickScale = AssetSourceResolver.pickScale;\nexport { pickScale };","map":{"version":3,"sources":["../src/resolveAssetSource.ts"],"names":[],"mappings":"AAAA,SAAS,YAAY,QAAQ,wCAAwC;AAErE,OAAO,mBAA4C,MAAM,uBAAuB;AAEhF,IAAI,wBAAwB;AAE5B,OAAM,SAAU,0BAA0B,CACxC,WAAmE,EAAA;EAEnE,wBAAwB,GAAG,WAAW;AACxC;AAMA,eAAc,SAAU,kBAAkB,CAAC,MAAW,EAAA;EACpD,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;IAC9B,OAAO,MAAM;EACd;EAED,IAAM,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC;EAClC,IAAI,CAAC,KAAK,EAAE;IACV,OAAO,IAAI;EACZ;EAED,IAAM,QAAQ,GAAG,IAAI,mBAAmB,CAEtC,kBAAkB,EAClB,IAAI,EACJ,KAAK,CACN;EACD,IAAI,wBAAwB,EAAE;IAC5B,OAAO,wBAAwB,CAAC,QAAQ,CAAC;EAC1C;EACD,OAAO,QAAQ,CAAC,YAAY,CAAA,CAAE;AAChC;AAEA,MAAM,CAAC,cAAc,CAAC,kBAAkB,EAAE,4BAA4B,EAAE;EACtE,GAAG,WAAA,IAAA,EAAA;IACD,OAAO,0BAA0B;EACnC;CACD,CAAC;AAEK,IAAQ,SAAS,GAAK,mBAAmB,CAAjC,SAAS;AAAyB,SAAA,SAAA","sourcesContent":["import { getAssetByID } from '@react-native/assets-registry/registry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | null {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n\n  const resolver = new AssetSourceResolver(\n    // Doesn't matter since this is removed on web\n    'https://expo.dev',\n    null,\n    asset\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}