{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Box, FlatList, ScrollView, SplitPage, Text } from \"ferns-ui\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WithRenderContent = function WithRenderContent() {\n  return _jsx(SplitPage, {\n    listViewData: Array.from(Array(100).keys()).map(function (i) {\n      return {\n        name: `user${i}`,\n        id: i\n      };\n    }),\n    listViewWidth: 250,\n    renderContent: function renderContent(index) {\n      return _jsxs(Box, {\n        color: \"lightGray\",\n        padding: 2,\n        children: [index === undefined && _jsx(Text, {\n          weight: \"bold\",\n          children: \"Nothing selected\"\n        }), index !== undefined && _jsxs(Text, {\n          weight: \"bold\",\n          children: [\"User \", index]\n        })]\n      });\n    },\n    renderListViewHeader: function renderListViewHeader() {\n      return _jsx(Box, {\n        color: \"red\",\n        padding: 2,\n        children: _jsx(Text, {\n          weight: \"bold\",\n          children: \"Users:\"\n        })\n      });\n    },\n    renderListViewItem: function renderListViewItem(item) {\n      return _jsx(Box, {\n        color: \"blue\",\n        padding: 2,\n        children: _jsxs(Text, {\n          children: [\"name: \", item.item.name]\n        })\n      }, item.item.name);\n    }\n  });\n};\nvar _OneChild = function OneChild() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  return _jsx(SplitPage, {\n    listViewData: Array.from(Array(100).keys()).map(function (i) {\n      return {\n        name: `user${i}`,\n        id: i\n      };\n    }),\n    renderListViewHeader: function renderListViewHeader() {\n      return _jsx(Box, {\n        color: \"red\",\n        padding: 2,\n        children: _jsx(Text, {\n          weight: \"bold\",\n          children: \"Users:\"\n        })\n      });\n    },\n    renderListViewItem: function renderListViewItem(item) {\n      return _jsx(Box, {\n        color: \"blue\",\n        padding: 2,\n        children: _jsxs(Text, {\n          children: [\"name: \", item.item.name]\n        })\n      }, item.item.name);\n    },\n    onSelectionChange: function onSelectionChange(val) {\n      setSelected(val.item.name);\n    },\n    children: _jsx(Box, {\n      color: \"green\",\n      height: \"100%\",\n      padding: 2,\n      children: _jsx(Text, {\n        align: \"center\",\n        children: selected\n      })\n    })\n  });\n};\nvar _TwoChildren = function TwoChildren() {\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selected = _useState4[0],\n    setSelected = _useState4[1];\n  return _jsxs(SplitPage, {\n    listViewData: Array.from(Array(100).keys()).map(function (i) {\n      return {\n        name: `user${i}`,\n        id: i\n      };\n    }),\n    renderListViewItem: function renderListViewItem(item) {\n      return _jsx(Box, {\n        color: \"blue\",\n        padding: 2,\n        children: _jsxs(Text, {\n          children: [\"name: \", item.item.name]\n        })\n      }, item.item.name);\n    },\n    onSelectionChange: function onSelectionChange(val) {\n      setSelected(val.item.name);\n    },\n    children: [_jsx(Box, {\n      color: \"green\",\n      height: \"100%\",\n      padding: 2,\n      children: _jsxs(Text, {\n        align: \"center\",\n        children: [\"First child with data: \", selected]\n      })\n    }), ScrollableContent()]\n  });\n};\nvar _ManyChildren = function ManyChildren() {\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selected = _useState6[0],\n    setSelected = _useState6[1];\n  return _jsxs(SplitPage, {\n    listViewData: Array.from(Array(100).keys()).map(function (i) {\n      return {\n        name: `user${i}`,\n        id: i\n      };\n    }),\n    renderListViewItem: function renderListViewItem(item) {\n      return _jsx(Box, {\n        color: \"blue\",\n        padding: 2,\n        children: _jsxs(Text, {\n          children: [\"name: \", item.item.name]\n        })\n      }, item.item.name);\n    },\n    selectLimit: 2,\n    tabs: [\"First child\", \"Second child\", \"Third\"],\n    onSelectionChange: function onSelectionChange(val) {\n      setSelected(val.item.name);\n    },\n    children: [_jsx(Box, {\n      color: \"green\",\n      height: \"100%\",\n      padding: 2,\n      children: _jsxs(Text, {\n        align: \"center\",\n        children: [\"First child with data: \", selected]\n      })\n    }), _jsx(Box, {\n      color: \"blue\",\n      height: \"100%\",\n      padding: 2,\n      children: _jsxs(Text, {\n        align: \"center\",\n        children: [\"Second child with data: \", selected]\n      })\n    }), ScrollableContent()]\n  });\n};\nvar ScrollableContent = function ScrollableContent() {\n  var items = Array.from(Array(100).keys()).map(function (i) {\n    return {\n      name: `user${i}`,\n      id: i\n    };\n  });\n  return _jsx(ScrollView, {\n    children: _jsx(FlatList, {\n      contentContainerStyle: {\n        height: \"100%\"\n      },\n      data: items,\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      },\n      renderItem: function renderItem(item) {\n        return _jsx(Box, {\n          color: \"purple\",\n          padding: 2,\n          children: _jsxs(Text, {\n            children: [\"name: \", item.item.name]\n          })\n        }, item.item.name);\n      }\n    })\n  });\n};\nexport var SplitPageStories = {\n  title: \"Split Page\",\n  component: SplitPage,\n  stories: {\n    \"Render Content Fn\": function RenderContentFn() {\n      return _jsx(WithRenderContent, {});\n    },\n    \"One Child\": function OneChild() {\n      return _jsx(_OneChild, {});\n    },\n    \"Two Children\": function TwoChildren() {\n      return _jsx(_TwoChildren, {});\n    },\n    \"Many Children\": function ManyChildren() {\n      return _jsx(_ManyChildren, {});\n    }\n  }\n};","map":{"version":3,"names":["Box","FlatList","ScrollView","SplitPage","Text","React","useState","jsx","_jsx","jsxs","_jsxs","WithRenderContent","listViewData","Array","from","keys","map","i","name","id","listViewWidth","renderContent","index","color","padding","children","undefined","weight","renderListViewHeader","renderListViewItem","item","OneChild","_useState","_useState2","_slicedToArray","selected","setSelected","onSelectionChange","val","height","align","TwoChildren","_useState3","_useState4","ScrollableContent","ManyChildren","_useState5","_useState6","selectLimit","tabs","items","contentContainerStyle","data","keyExtractor","renderItem","SplitPageStories","title","component","stories","RenderContentFn","_OneChild","_TwoChildren","_ManyChildren"],"sources":["/Users/josh/src/ui/packages/ui-demo/src/SplitPage.stories.tsx"],"sourcesContent":["import {Box, FlatList, ScrollView, SplitPage, Text} from \"ferns-ui\";\nimport React, {useState} from \"react\";\n\nconst WithRenderContent = () => {\n  return (\n    <SplitPage\n      listViewData={Array.from(Array(100).keys()).map((i) => ({\n        name: `user${i}`,\n        id: i,\n      }))}\n      listViewWidth={250}\n      renderContent={(index) => {\n        return (\n          <Box color=\"lightGray\" padding={2}>\n            {index === undefined && <Text weight=\"bold\">Nothing selected</Text>}\n            {index !== undefined && <Text weight=\"bold\">User {index}</Text>}\n          </Box>\n        );\n      }}\n      renderListViewHeader={() => (\n        <Box color=\"red\" padding={2}>\n          <Text weight=\"bold\">Users:</Text>\n        </Box>\n      )}\n      renderListViewItem={(item) => (\n        <Box key={item.item.name} color=\"blue\" padding={2}>\n          <Text>name: {item.item.name}</Text>\n        </Box>\n      )}\n    />\n  );\n};\n\nconst OneChild = () => {\n  const [selected, setSelected] = useState(\"\");\n\n  return (\n    <SplitPage\n      listViewData={Array.from(Array(100).keys()).map((i) => ({\n        name: `user${i}`,\n        id: i,\n      }))}\n      renderListViewHeader={() => (\n        <Box color=\"red\" padding={2}>\n          <Text weight=\"bold\">Users:</Text>\n        </Box>\n      )}\n      renderListViewItem={(item) => (\n        <Box key={item.item.name} color=\"blue\" padding={2}>\n          <Text>name: {item.item.name}</Text>\n        </Box>\n      )}\n      onSelectionChange={(val) => {\n        setSelected(val.item.name);\n      }}\n    >\n      <Box color=\"green\" height=\"100%\" padding={2}>\n        <Text align=\"center\">{selected}</Text>\n      </Box>\n    </SplitPage>\n  );\n};\n\nconst TwoChildren = () => {\n  const [selected, setSelected] = useState(\"\");\n\n  return (\n    <SplitPage\n      listViewData={Array.from(Array(100).keys()).map((i) => ({\n        name: `user${i}`,\n        id: i,\n      }))}\n      renderListViewItem={(item) => (\n        <Box key={item.item.name} color=\"blue\" padding={2}>\n          <Text>name: {item.item.name}</Text>\n        </Box>\n      )}\n      onSelectionChange={(val) => {\n        setSelected(val.item.name);\n      }}\n    >\n      <Box color=\"green\" height=\"100%\" padding={2}>\n        <Text align=\"center\">First child with data: {selected}</Text>\n      </Box>\n      {ScrollableContent()}\n    </SplitPage>\n  );\n};\nconst ManyChildren = () => {\n  const [selected, setSelected] = useState(\"\");\n\n  return (\n    <SplitPage\n      listViewData={Array.from(Array(100).keys()).map((i) => ({\n        name: `user${i}`,\n        id: i,\n      }))}\n      renderListViewItem={(item) => (\n        <Box key={item.item.name} color=\"blue\" padding={2}>\n          <Text>name: {item.item.name}</Text>\n        </Box>\n      )}\n      selectLimit={2}\n      tabs={[\"First child\", \"Second child\", \"Third\"]}\n      onSelectionChange={(val) => {\n        setSelected(val.item.name);\n      }}\n    >\n      <Box color=\"green\" height=\"100%\" padding={2}>\n        <Text align=\"center\">First child with data: {selected}</Text>\n      </Box>\n      <Box color=\"blue\" height=\"100%\" padding={2}>\n        <Text align=\"center\">Second child with data: {selected}</Text>\n      </Box>\n      {ScrollableContent()}\n    </SplitPage>\n  );\n};\n\nconst ScrollableContent = () => {\n  const items = Array.from(Array(100).keys()).map((i) => ({\n    name: `user${i}`,\n    id: i,\n  }));\n\n  return (\n    <ScrollView>\n      <FlatList\n        contentContainerStyle={{height: \"100%\"}}\n        data={items}\n        keyExtractor={(item) => item.name}\n        renderItem={(item) => {\n          return (\n            <Box key={item.item.name} color=\"purple\" padding={2}>\n              <Text>name: {item.item.name}</Text>\n            </Box>\n          );\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport const SplitPageStories = {\n  title: \"Split Page\",\n  component: SplitPage,\n  stories: {\n    \"Render Content Fn\": function () {\n      return <WithRenderContent />;\n    },\n    \"One Child\": function () {\n      return <OneChild />;\n    },\n    \"Two Children\": function () {\n      return <TwoChildren />;\n    },\n    \"Many Children\": function () {\n      return <ManyChildren />;\n    },\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}