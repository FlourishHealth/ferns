{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { useState } from \"react\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Box } from \"./Box\";\nimport { Button } from \"./Button\";\nimport { Field } from \"./Field\";\nimport { Icon } from \"./Icon\";\nimport { Text } from \"./Text\";\nimport { Tooltip } from \"./Tooltip\";\nexport function formatAddress(address) {\n  var asString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var _a, _b, _c, _d;\n  var city = \"\";\n  if (address === null || address === void 0 ? void 0 : address.city) {\n    city = (address === null || address === void 0 ? void 0 : address.state) || address.zipcode ? `${address.city}, ` : `${address.city}`;\n  }\n  var state = \"\";\n  if (address === null || address === void 0 ? void 0 : address.state) {\n    state = (address === null || address === void 0 ? void 0 : address.zipcode) ? `${address.state} ` : `${address.state}`;\n  }\n  var zip = (address === null || address === void 0 ? void 0 : address.zipcode) || \"\";\n  var countyName = (_a = address === null || address === void 0 ? void 0 : address.countyName) !== null && _a !== void 0 ? _a : \"\";\n  var countyCode = (_b = address === null || address === void 0 ? void 0 : address.countyCode) !== null && _b !== void 0 ? _b : \"\";\n  var addressLineOne = (_c = address === null || address === void 0 ? void 0 : address.address1) !== null && _c !== void 0 ? _c : \"\";\n  var addressLineTwo = (_d = address === null || address === void 0 ? void 0 : address.address2) !== null && _d !== void 0 ? _d : \"\";\n  var addressLineThree = `${city}${state}${zip}`;\n  var addressLineFour = `${countyName}${(address === null || address === void 0 ? void 0 : address.countyCode) ? ` [${countyCode}]` : \"\"}`;\n  if (!asString) {\n    return `${addressLineOne}${addressLineOne && (addressLineTwo || addressLineThree) ? `\\n` : \"\"}${addressLineTwo}${addressLineTwo && addressLineThree ? `\\n` : \"\"}${addressLineThree}${addressLineThree && addressLineFour ? `\\n` : \"\"}${addressLineFour}`;\n  } else {\n    return `${addressLineOne}${addressLineOne && (addressLineTwo || addressLineThree) ? `, ` : \"\"}${addressLineTwo}${addressLineTwo && addressLineThree ? `, ` : \"\"}${addressLineThree}${addressLineThree && addressLineFour ? `, ` : \"\"}${addressLineFour}`;\n  }\n}\nexport var TapToEdit = function TapToEdit(_a) {\n  var _b;\n  var value = _a.value,\n    setValue = _a.setValue,\n    placeholder = _a.placeholder,\n    title = _a.title,\n    onSave = _a.onSave,\n    _a$editable = _a.editable,\n    editable = _a$editable === void 0 ? true : _a$editable,\n    _a$isEditing = _a.isEditing,\n    isEditing = _a$isEditing === void 0 ? false : _a$isEditing,\n    rowBoxProps = _a.rowBoxProps,\n    transform = _a.transform,\n    fieldComponent = _a.fieldComponent,\n    _a$withConfirmation = _a.withConfirmation,\n    withConfirmation = _a$withConfirmation === void 0 ? false : _a$withConfirmation,\n    _a$confirmationText = _a.confirmationText,\n    confirmationText = _a$confirmationText === void 0 ? \"Are you sure you want to save your changes?\" : _a$confirmationText,\n    _a$confirmationHeadin = _a.confirmationHeading,\n    confirmationHeading = _a$confirmationHeadin === void 0 ? \"Confirm\" : _a$confirmationHeadin,\n    propsDescription = _a.description,\n    _a$showDescriptionAsT = _a.showDescriptionAsTooltip,\n    showDescriptionAsTooltip = _a$showDescriptionAsT === void 0 ? false : _a$showDescriptionAsT,\n    fieldProps = __rest(_a, [\"value\", \"setValue\", \"placeholder\", \"title\", \"onSave\", \"editable\", \"isEditing\", \"rowBoxProps\", \"transform\", \"fieldComponent\", \"withConfirmation\", \"confirmationText\", \"confirmationHeading\", \"description\", \"showDescriptionAsTooltip\"]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    editing = _useState2[0],\n    setEditing = _useState2[1];\n  var _useState3 = useState(value),\n    _useState4 = _slicedToArray(_useState3, 1),\n    initialValue = _useState4[0];\n  var description = propsDescription;\n  if (editable && !setValue) {\n    throw new Error(\"setValue is required if editable is true\");\n  }\n  if (editable && (editing || isEditing)) {\n    return React.createElement(Box, {\n      direction: \"column\"\n    }, fieldComponent ? fieldComponent(setValue) : (React.createElement(Field, Object.assign({\n      helperText: description,\n      label: title,\n      placeholder: placeholder,\n      value: value,\n      onChange: setValue\n    }, fieldProps))), editing && !isEditing && (React.createElement(Box, {\n      direction: \"row\"\n    }, React.createElement(Button, {\n      color: \"blue\",\n      confirmationHeading: confirmationHeading,\n      confirmationText: confirmationText,\n      inline: true,\n      text: \"Save\",\n      withConfirmation: withConfirmation,\n      onClick: function () {\n        var _onClick = _asyncToGenerator(function* () {\n          if (!onSave) {\n            console.error(\"No onSave provided for editable TapToEdit\");\n          } else {\n            yield onSave(value);\n          }\n          setEditing(false);\n        });\n        function onClick() {\n          return _onClick.apply(this, arguments);\n        }\n        return onClick;\n      }()\n    }), React.createElement(Box, {\n      marginLeft: 2\n    }, React.createElement(Button, {\n      color: \"red\",\n      inline: true,\n      text: \"Cancel\",\n      onClick: function onClick() {\n        if (setValue) {\n          setValue(initialValue);\n        }\n        setEditing(false);\n      }\n    })))));\n  } else {\n    var displayValue = value;\n    if (transform) {\n      displayValue = transform(value);\n    } else {\n      if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"boolean\") {\n        displayValue = value ? \"Yes\" : \"No\";\n      } else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"percent\") {\n        displayValue = `${parseFloat(parseFloat(String(value * 100)).toPrecision(7))}%`;\n      } else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"currency\") {\n        var formatter = new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n          minimumFractionDigits: 2\n        });\n        displayValue = formatter.format(value);\n      } else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"multiselect\") {\n        displayValue = value.join(\", \");\n      } else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"url\") {\n        try {\n          var url = new URL(value);\n          displayValue = (_b = url === null || url === void 0 ? void 0 : url.hostname) !== null && _b !== void 0 ? _b : value;\n        } catch (error) {\n          if (value) {\n            console.debug(`Invalid URL: ${value}`);\n          }\n          displayValue = value;\n        }\n      } else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"address\") {\n        displayValue = formatAddress(value);\n      }\n    }\n    var openLink = function () {\n      var _ref = _asyncToGenerator(function* () {\n        if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"url\") {\n          yield Linking.openURL(value);\n        } else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"address\") {\n          yield Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(formatAddress(value, true))}`);\n        }\n      });\n      return function openLink() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var isClickable = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"url\" || (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"address\";\n    var renderTitleDescription = function renderTitleDescription() {\n      return React.createElement(Box, {\n        flex: \"grow\"\n      }, React.createElement(Text, {\n        weight: \"bold\"\n      }, title, \":\"), Boolean(description && !showDescriptionAsTooltip) && React.createElement(Text, null, description));\n    };\n    return React.createElement(Box, Object.assign({\n      direction: \"row\",\n      justifyContent: \"between\",\n      paddingX: 3,\n      paddingY: 2,\n      width: \"100%\"\n    }, rowBoxProps), showDescriptionAsTooltip ? (React.createElement(Tooltip, {\n      idealDirection: \"top\",\n      text: description\n    }, renderTitleDescription())) : renderTitleDescription(), React.createElement(Box, {\n      direction: \"row\",\n      justifyContent: \"start\",\n      marginLeft: 2\n    }, React.createElement(Box, {\n      justifyContent: \"start\",\n      onClick: isClickable ? openLink : undefined\n    }, React.createElement(Text, {\n      align: \"right\",\n      underline: isClickable\n    }, displayValue)), editable && (React.createElement(Box, {\n      marginLeft: 2,\n      onClick: function onClick() {\n        return setEditing(true);\n      }\n    }, React.createElement(Icon, {\n      color: \"darkGray\",\n      name: \"edit\",\n      prefix: \"far\",\n      size: \"md\"\n    })))));\n  }\n};","map":{"version":3,"sources":["../src/TapToEdit.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from \"react\";\nimport { Linking } from \"react-native\";\nimport { Box } from \"./Box\";\nimport { Button } from \"./Button\";\nimport { Field } from \"./Field\";\nimport { Icon } from \"./Icon\";\n// import {useOpenAPISpec} from \"./OpenAPIContext\";\nimport { Text } from \"./Text\";\nimport { Tooltip } from \"./Tooltip\";\nexport function formatAddress(address, asString = false) {\n    var _a, _b, _c, _d;\n    let city = \"\";\n    if (address === null || address === void 0 ? void 0 : address.city) {\n        city = (address === null || address === void 0 ? void 0 : address.state) || address.zipcode ? `${address.city}, ` : `${address.city}`;\n    }\n    let state = \"\";\n    if (address === null || address === void 0 ? void 0 : address.state) {\n        state = (address === null || address === void 0 ? void 0 : address.zipcode) ? `${address.state} ` : `${address.state}`;\n    }\n    const zip = (address === null || address === void 0 ? void 0 : address.zipcode) || \"\";\n    const countyName = (_a = address === null || address === void 0 ? void 0 : address.countyName) !== null && _a !== void 0 ? _a : \"\";\n    const countyCode = (_b = address === null || address === void 0 ? void 0 : address.countyCode) !== null && _b !== void 0 ? _b : \"\";\n    const addressLineOne = (_c = address === null || address === void 0 ? void 0 : address.address1) !== null && _c !== void 0 ? _c : \"\";\n    const addressLineTwo = (_d = address === null || address === void 0 ? void 0 : address.address2) !== null && _d !== void 0 ? _d : \"\";\n    const addressLineThree = `${city}${state}${zip}`;\n    const addressLineFour = `${countyName}${(address === null || address === void 0 ? void 0 : address.countyCode) ? ` [${countyCode}]` : \"\"}`;\n    if (!asString) {\n        // Only add new lines if lines before and after are not empty to avoid awkward whitespace\n        return `${addressLineOne}${addressLineOne && (addressLineTwo || addressLineThree) ? `\\n` : \"\"}${addressLineTwo}${addressLineTwo && addressLineThree ? `\\n` : \"\"}${addressLineThree}${addressLineThree && addressLineFour ? `\\n` : \"\"}${addressLineFour}`;\n    }\n    else {\n        return `${addressLineOne}${addressLineOne && (addressLineTwo || addressLineThree) ? `, ` : \"\"}${addressLineTwo}${addressLineTwo && addressLineThree ? `, ` : \"\"}${addressLineThree}${addressLineThree && addressLineFour ? `, ` : \"\"}${addressLineFour}`;\n    }\n}\nexport const TapToEdit = (_a) => {\n    var _b;\n    var { value, setValue, placeholder, title, onSave, editable = true, isEditing = false, rowBoxProps, transform, fieldComponent, withConfirmation = false, confirmationText = \"Are you sure you want to save your changes?\", confirmationHeading = \"Confirm\", description: propsDescription, \n    // openApiModel,\n    // openApiField,\n    showDescriptionAsTooltip = false } = _a, fieldProps = __rest(_a, [\"value\", \"setValue\", \"placeholder\", \"title\", \"onSave\", \"editable\", \"isEditing\", \"rowBoxProps\", \"transform\", \"fieldComponent\", \"withConfirmation\", \"confirmationText\", \"confirmationHeading\", \"description\", \"showDescriptionAsTooltip\"]);\n    const [editing, setEditing] = useState(false);\n    const [initialValue] = useState(value);\n    // const {getModelField} = useOpenAPISpec();\n    const description = propsDescription;\n    // if (!description && openApiModel && openApiField) {\n    //   description = getModelField(openApiModel, openApiField)?.description;\n    // }\n    if (editable && !setValue) {\n        throw new Error(\"setValue is required if editable is true\");\n    }\n    if (editable && (editing || isEditing)) {\n        return (React.createElement(Box, { direction: \"column\" },\n            fieldComponent ? (fieldComponent(setValue)) : (React.createElement(Field, Object.assign({ helperText: description, label: title, placeholder: placeholder, value: value, onChange: setValue }, fieldProps))),\n            editing && !isEditing && (React.createElement(Box, { direction: \"row\" },\n                React.createElement(Button, { color: \"blue\", confirmationHeading: confirmationHeading, confirmationText: confirmationText, inline: true, text: \"Save\", withConfirmation: withConfirmation, onClick: async () => {\n                        if (!onSave) {\n                            console.error(\"No onSave provided for editable TapToEdit\");\n                        }\n                        else {\n                            await onSave(value);\n                        }\n                        setEditing(false);\n                    } }),\n                React.createElement(Box, { marginLeft: 2 },\n                    React.createElement(Button, { color: \"red\", inline: true, text: \"Cancel\", onClick: () => {\n                            if (setValue) {\n                                setValue(initialValue);\n                            }\n                            setEditing(false);\n                        } }))))));\n    }\n    else {\n        let displayValue = value;\n        // If a transform props is present, that takes priority\n        if (transform) {\n            displayValue = transform(value);\n        }\n        else {\n            // If no transform, try and display the value reasonably.\n            if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"boolean\") {\n                displayValue = value ? \"Yes\" : \"No\";\n            }\n            else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"percent\") {\n                // Prevent floating point errors from showing up by using parseFloat and precision.\n                // Pass through parseFloat again to trim off insignificant zeroes.\n                displayValue = `${parseFloat(parseFloat(String(value * 100)).toPrecision(7))}%`;\n            }\n            else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"currency\") {\n                // TODO: support currencies other than USD in Field and related components.\n                const formatter = new Intl.NumberFormat(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                    minimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n                });\n                displayValue = formatter.format(value);\n            }\n            else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"multiselect\") {\n                // ???\n                displayValue = value.join(\", \");\n            }\n            else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"url\") {\n                // Show only the domain, full links are likely too long.\n                try {\n                    const url = new URL(value);\n                    displayValue = (_b = url === null || url === void 0 ? void 0 : url.hostname) !== null && _b !== void 0 ? _b : value;\n                }\n                catch (error) {\n                    // Don't print an error message for empty values.\n                    if (value) {\n                        console.debug(`Invalid URL: ${value}`);\n                    }\n                    displayValue = value;\n                }\n            }\n            else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"address\") {\n                displayValue = formatAddress(value);\n            }\n        }\n        const openLink = async () => {\n            if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"url\") {\n                await Linking.openURL(value);\n            }\n            else if ((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"address\") {\n                await Linking.openURL(`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(formatAddress(value, true))}`);\n            }\n        };\n        const isClickable = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"url\" || (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.type) === \"address\";\n        const renderTitleDescription = () => {\n            return (React.createElement(Box, { flex: \"grow\" },\n                React.createElement(Text, { weight: \"bold\" },\n                    title,\n                    \":\"),\n                Boolean(description && !showDescriptionAsTooltip) && React.createElement(Text, null, description)));\n        };\n        return (React.createElement(Box, Object.assign({ direction: \"row\", justifyContent: \"between\", paddingX: 3, paddingY: 2, width: \"100%\" }, rowBoxProps),\n            showDescriptionAsTooltip ? (React.createElement(Tooltip, { idealDirection: \"top\", text: description }, renderTitleDescription())) : (renderTitleDescription()),\n            React.createElement(Box, { direction: \"row\", justifyContent: \"start\", marginLeft: 2 },\n                React.createElement(Box, { justifyContent: \"start\", onClick: isClickable ? openLink : undefined },\n                    React.createElement(Text, { align: \"right\", underline: isClickable }, displayValue)),\n                editable && (React.createElement(Box, { marginLeft: 2, onClick: () => setEditing(true) },\n                    React.createElement(Icon, { color: \"darkGray\", name: \"edit\", prefix: \"far\", size: \"md\" }))))));\n    }\n};\n//# sourceMappingURL=TapToEdit.js.map"]},"metadata":{},"sourceType":"module"}