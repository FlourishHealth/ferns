{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { CodedError } from 'expo-modules-core';\nexport var ClipboardUnavailableException = function (_CodedError) {\n  _inherits(ClipboardUnavailableException, _CodedError);\n  var _super = _createSuper(ClipboardUnavailableException);\n  function ClipboardUnavailableException() {\n    _classCallCheck(this, ClipboardUnavailableException);\n    return _super.call(this, 'ERR_CLIPBOARD_UNAVAILABLE', \"The 'AsyncClipboard' API is not available on this browser\");\n  }\n  return _createClass(ClipboardUnavailableException);\n}(CodedError);\nexport var CopyFailureException = function (_CodedError2) {\n  _inherits(CopyFailureException, _CodedError2);\n  var _super2 = _createSuper(CopyFailureException);\n  function CopyFailureException(cause) {\n    _classCallCheck(this, CopyFailureException);\n    return _super2.call(this, 'ERR_COPY_FAILURE', `Failed to copy to clipboard: ${cause}`);\n  }\n  return _createClass(CopyFailureException);\n}(CodedError);\nexport var PasteFailureException = function (_CodedError3) {\n  _inherits(PasteFailureException, _CodedError3);\n  var _super3 = _createSuper(PasteFailureException);\n  function PasteFailureException(cause) {\n    _classCallCheck(this, PasteFailureException);\n    return _super3.call(this, 'ERR_COPY_FAILURE', `Failed to paste from clipboard: ${cause}`);\n  }\n  return _createClass(PasteFailureException);\n}(CodedError);\nexport var NoPermissionException = function (_CodedError4) {\n  _inherits(NoPermissionException, _CodedError4);\n  var _super4 = _createSuper(NoPermissionException);\n  function NoPermissionException() {\n    _classCallCheck(this, NoPermissionException);\n    return _super4.call(this, 'ERR_NO_PERMISSION', 'User denied permission to access clipboard');\n  }\n  return _createClass(NoPermissionException);\n}(CodedError);","map":{"version":3,"sources":["../../src/web/Exceptions.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,UAAU,QAAQ,mBAAmB;AAE9C,WAAa,6BAA8B,aAAA,WAAA;EAAA,SAAA,CAAA,6BAAA,EAAA,WAAA;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,6BAAA;EACzC,SAAA,8BAAA,EAAA;IAAA,eAAA,OAAA,6BAAA;IAAA,OAAA,MAAA,CAAA,IAAA,OACQ,2BAA2B,EAAE,2DAA2D;EAChG;EAAC,OAAA,YAAA,CAAA,6BAAA;AAAA,EAHgD,UAAU;AAM7D,WAAa,oBAAqB,aAAA,YAAA;EAAA,SAAA,CAAA,oBAAA,EAAA,YAAA;EAAA,IAAA,OAAA,GAAA,YAAA,CAAA,oBAAA;EAChC,SAAA,qBAAY,KAAa,EAAA;IAAA,eAAA,OAAA,oBAAA;IAAA,OAAA,OAAA,CAAA,IAAA,OACjB,kBAAkB,EAAE,gCAAgC,KAAK,EAAE;EACnE;EAAC,OAAA,YAAA,CAAA,oBAAA;AAAA,EAHuC,UAAU;AAMpD,WAAa,qBAAsB,aAAA,YAAA;EAAA,SAAA,CAAA,qBAAA,EAAA,YAAA;EAAA,IAAA,OAAA,GAAA,YAAA,CAAA,qBAAA;EACjC,SAAA,sBAAY,KAAa,EAAA;IAAA,eAAA,OAAA,qBAAA;IAAA,OAAA,OAAA,CAAA,IAAA,OACjB,kBAAkB,EAAE,mCAAmC,KAAK,EAAE;EACtE;EAAC,OAAA,YAAA,CAAA,qBAAA;AAAA,EAHwC,UAAU;AAMrD,WAAa,qBAAsB,aAAA,YAAA;EAAA,SAAA,CAAA,qBAAA,EAAA,YAAA;EAAA,IAAA,OAAA,GAAA,YAAA,CAAA,qBAAA;EACjC,SAAA,sBAAA,EAAA;IAAA,eAAA,OAAA,qBAAA;IAAA,OAAA,OAAA,CAAA,IAAA,OACQ,mBAAmB,EAAE,4CAA4C;EACzE;EAAC,OAAA,YAAA,CAAA,qBAAA;AAAA,EAHwC,UAAU","sourcesContent":["import { CodedError } from 'expo-modules-core';\n\nexport class ClipboardUnavailableException extends CodedError {\n  constructor() {\n    super('ERR_CLIPBOARD_UNAVAILABLE', \"The 'AsyncClipboard' API is not available on this browser\");\n  }\n}\n\nexport class CopyFailureException extends CodedError {\n  constructor(cause: string) {\n    super('ERR_COPY_FAILURE', `Failed to copy to clipboard: ${cause}`);\n  }\n}\n\nexport class PasteFailureException extends CodedError {\n  constructor(cause: string) {\n    super('ERR_COPY_FAILURE', `Failed to paste from clipboard: ${cause}`);\n  }\n}\n\nexport class NoPermissionException extends CodedError {\n  constructor() {\n    super('ERR_NO_PERMISSION', 'User denied permission to access clipboard');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}