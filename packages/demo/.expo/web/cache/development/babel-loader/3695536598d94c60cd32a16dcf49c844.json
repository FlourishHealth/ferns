{"ast":null,"code":"import React from \"react\";\nimport { Box } from \"./Box\";\nimport { Text } from \"./Text\";\nexport var WithLabel = function WithLabel(_ref) {\n  var label = _ref.label,\n    labelInline = _ref.labelInline,\n    labelJustifyContent = _ref.labelJustifyContent,\n    labelAlignItems = _ref.labelAlignItems,\n    labelPlacement = _ref.labelPlacement,\n    labelSize = _ref.labelSize,\n    labelColor = _ref.labelColor,\n    show = _ref.show,\n    children = _ref.children;\n  if (!children) {\n    return null;\n  }\n  return React.createElement(Box, {\n    alignItems: labelAlignItems,\n    direction: labelInline ? \"row\" : \"column\",\n    justifyContent: labelJustifyContent,\n    width: \"100%\"\n  }, Boolean(label && labelPlacement !== \"after\") && (React.createElement(Box, {\n    paddingY: 1\n  }, React.createElement(Text, {\n    color: labelColor || \"darkGray\",\n    size: labelSize,\n    weight: \"bold\"\n  }, show !== false ? label : \" \"))), children, Boolean(label && labelPlacement === \"after\") && (React.createElement(Box, {\n    paddingY: 1\n  }, React.createElement(Text, {\n    color: labelColor || \"darkGray\",\n    size: labelSize\n  }, show !== false ? label : \" \"))));\n};","map":{"version":3,"sources":["../src/WithLabel.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO;AAEzB,SAAQ,GAAG,QAAO,OAAO;AAEzB,SAAQ,IAAI,QAAO,QAAQ;AAE3B,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAS,CAAA,IAAA,EAU0B;EAAA,IAT9C,KAAK,GAAA,IAAA,CAAL,KAAK;IACL,WAAW,GAAA,IAAA,CAAX,WAAW;IACX,mBAAmB,GAAA,IAAA,CAAnB,mBAAmB;IACnB,eAAe,GAAA,IAAA,CAAf,eAAe;IACf,cAAc,GAAA,IAAA,CAAd,cAAc;IACd,SAAS,GAAA,IAAA,CAAT,SAAS;IACT,UAAU,GAAA,IAAA,CAAV,UAAU;IACV,IAAI,GAAA,IAAA,CAAJ,IAAI;IACJ,QAAQ,GAAA,IAAA,CAAR,QAAQ;EAER,IAAI,CAAC,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EACA,OACE,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IACF,UAAU,EAAE,eAAe;IAC3B,SAAS,EAAE,WAAW,GAAG,KAAK,GAAG,QAAQ;IACzC,cAAc,EAAE,mBAAmB;IACnC,KAAK,EAAC;EAAM,CAAA,EAEX,OAAO,CAAC,KAAK,IAAI,cAAc,KAAK,OAAO,CAAC,KAC3C,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,QAAQ,EAAE;EAAC,CAAA,EACd,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,UAAU,IAAI,UAAU;IAAE,IAAI,EAAE,SAAS;IAAE,MAAM,EAAC;EAAM,CAAA,EAClE,IAAI,KAAK,KAAK,GAAG,KAAK,GAAG,GAAG,CACxB,CACH,CACP,EACA,QAAQ,EACR,OAAO,CAAC,KAAK,IAAI,cAAc,KAAK,OAAO,CAAC,KAC3C,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,QAAQ,EAAE;EAAC,CAAA,EACd,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,UAAU,IAAI,UAAU;IAAE,IAAI,EAAE;EAAS,CAAA,EACnD,IAAI,KAAK,KAAK,GAAG,KAAK,GAAG,GAAG,CACxB,CACH,CACP,CACG;AAEV,CAAC","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Box } from \"./Box\";\nimport { Text } from \"./Text\";\nexport const WithLabel = ({ label, labelInline, labelJustifyContent, labelAlignItems, labelPlacement, labelSize, labelColor, show, children, }) => {\n    if (!children) {\n        return null;\n    }\n    return (React.createElement(Box, { alignItems: labelAlignItems, direction: labelInline ? \"row\" : \"column\", justifyContent: labelJustifyContent, width: \"100%\" },\n        Boolean(label && labelPlacement !== \"after\") && (React.createElement(Box, { paddingY: 1 },\n            React.createElement(Text, { color: labelColor || \"darkGray\", size: labelSize, weight: \"bold\" }, show !== false ? label : \" \"))),\n        children,\n        Boolean(label && labelPlacement === \"after\") && (React.createElement(Box, { paddingY: 1 },\n            React.createElement(Text, { color: labelColor || \"darkGray\", size: labelSize }, show !== false ? label : \" \")))));\n};\n//# sourceMappingURL=WithLabel.js.map"]},"metadata":{},"sourceType":"module"}