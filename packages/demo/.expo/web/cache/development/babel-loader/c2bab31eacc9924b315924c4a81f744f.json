{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"progress\", \"onPress\", \"style\", \"accessibilityLabel\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nvar PROGRESS_EPSILON = 0.05;\nvar _worklet_3396128806637_init_data = {\n  code: \"function anonymous(){const{progress,PROGRESS_EPSILON}=this.__closure;return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-drawer-layout/lib/module/views/modern/Overlay.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"progress\\\",\\\"PROGRESS_EPSILON\\\",\\\"__closure\\\",\\\"opacity\\\",\\\"value\\\",\\\"zIndex\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-drawer-layout/lib/module/views/modern/Overlay.js\\\"],\\\"mappings\\\":\\\"AAayC,SAAAA,SAAMA,CAAA,QAAAC,QAAA,CAAAC,gBAAA,OAAAC,SAAA,CAC3C,MAAO,CACLC,OAAO,CAAEH,QAAQ,CAACI,KAAK,CAGvBC,MAAM,CAAEL,QAAQ,CAACI,KAAK,CAAGH,gBAAgB,CAAG,CAAC,CAAG,CAAC,CACnD,CAAC,CACH\\\"}\",\n  version: \"3.6.3\"\n};\nvar _worklet_1663201322870_init_data = {\n  code: \"function anonymous(){const{progress,PROGRESS_EPSILON}=this.__closure;const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-drawer-layout/lib/module/views/modern/Overlay.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"progress\\\",\\\"PROGRESS_EPSILON\\\",\\\"__closure\\\",\\\"active\\\",\\\"value\\\",\\\"pointerEvents\\\",\\\"accessibilityElementsHidden\\\",\\\"importantForAccessibility\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-drawer-layout/lib/module/views/modern/Overlay.js\\\"],\\\"mappings\\\":\\\"AAqByC,SAAAA,SAAMA,CAAA,QAAAC,QAAA,CAAAC,gBAAA,OAAAC,SAAA,CAC3C,KAAM,CAAAC,MAAM,CAAGH,QAAQ,CAACI,KAAK,CAAGH,gBAAgB,CAChD,MAAO,CACLI,aAAa,CAAEF,MAAM,CAAG,MAAM,CAAG,MAAM,CACvCG,2BAA2B,CAAE,CAACH,MAAM,CACpCI,yBAAyB,CAAEJ,MAAM,CAAG,MAAM,CAAG,qBAC/C,CAAC,CACH\\\"}\",\n  version: \"3.6.3\"\n};\nexport var Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Close drawer' : _ref$accessibilityLab,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var animatedStyle = useAnimatedStyle(function () {\n    var _e = [new global.Error(), -3, -27];\n    var anonymous = function anonymous() {\n      return {\n        opacity: progress.value,\n        zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n      };\n    };\n    anonymous.__closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    anonymous.__workletHash = 3396128806637;\n    anonymous.__initData = _worklet_3396128806637_init_data;\n    anonymous.__stackDetails = _e;\n    return anonymous;\n  }());\n  var animatedProps = useAnimatedProps(function () {\n    var _e = [new global.Error(), -3, -27];\n    var anonymous = function anonymous() {\n      var active = progress.value > PROGRESS_EPSILON;\n      return {\n        pointerEvents: active ? 'auto' : 'none',\n        accessibilityElementsHidden: !active,\n        importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n      };\n    };\n    anonymous.__closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    anonymous.__workletHash = 1663201322870;\n    anonymous.__initData = _worklet_1663201322870_init_data;\n    anonymous.__stackDetails = _e;\n    return anonymous;\n  }());\n  return React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nvar overlayStyle = Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nvar styles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1,\n    pointerEvents: 'auto'\n  }\n});","map":{"version":3,"sources":["views/modern/Overlay.tsx"],"names":["React","Animated","useAnimatedProps","useAnimatedStyle","PROGRESS_EPSILON","Overlay","forwardRef","progress","onPress","style","accessibilityLabel","props","ref","animatedStyle","opacity","value","zIndex","animatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","styles","overlay","overlayStyle","pressable","Platform","select","web","WebkitTapHighlightColor","default","StyleSheet","create","absoluteFillObject","backgroundColor","flex"],"mappings":"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","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nconst PROGRESS_EPSILON = 0.05;\nexport const Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {\n  let {\n    progress,\n    onPress,\n    style,\n    accessibilityLabel = 'Close drawer',\n    ...props\n  } = _ref;\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n    };\n  });\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n    };\n  });\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), /*#__PURE__*/React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nconst overlayStyle = Platform.select({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  pressable: {\n    flex: 1,\n    pointerEvents: 'auto'\n  }\n});\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}