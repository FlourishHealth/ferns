{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport camelCase from \"lodash/camelCase\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nvar OpenAPIContext = createContext(null);\nexport var OpenAPIProvider = function OpenAPIProvider(_ref) {\n  var children = _ref.children,\n    specUrl = _ref.specUrl;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    spec = _useState2[0],\n    setSpec = _useState2[1];\n  var getModelFields = function getModelFields(modelName) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    var modelPath = `/${camelCase(modelName.replace(/\\s/g, \"\"))}/`;\n    var rootConfig = (_a = spec === null || spec === void 0 ? void 0 : spec.paths) === null || _a === void 0 ? void 0 : _a[modelPath];\n    if (!rootConfig) {\n      if ((spec === null || spec === void 0 ? void 0 : spec.paths) && modelName) {\n        console.warn(`No OpenAPI model found for ${modelName}`);\n      }\n      return null;\n    }\n    var items = (_j = (_h = (_g = (_f = (_e = (_d = (_c = (_b = rootConfig === null || rootConfig === void 0 ? void 0 : rootConfig.get) === null || _b === void 0 ? void 0 : _b.responses) === null || _c === void 0 ? void 0 : _c[\"200\"]) === null || _d === void 0 ? void 0 : _d.content) === null || _e === void 0 ? void 0 : _e[\"application/json\"]) === null || _f === void 0 ? void 0 : _f.schema) === null || _g === void 0 ? void 0 : _g.properties) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.items;\n    return items;\n  };\n  var getModelField = function getModelField(modelName, fieldName) {\n    var _a, _b;\n    var fields = getModelFields(modelName);\n    var dotFields = fieldName.split(\".\");\n    var field = (_a = fields === null || fields === void 0 ? void 0 : fields.properties) === null || _a === void 0 ? void 0 : _a[dotFields[0]];\n    if (!field && fieldName && (fields === null || fields === void 0 ? void 0 : fields.properties)) {\n      console.warn(`No OpenAPI field found for ${modelName}:${fieldName}`);\n    }\n    for (var dotField of dotFields.slice(1)) {\n      field = (_b = field === null || field === void 0 ? void 0 : field.properties) === null || _b === void 0 ? void 0 : _b[dotField];\n    }\n    return field;\n  };\n  useEffect(function () {\n    if (!specUrl) {\n      return;\n    }\n    fetch(specUrl).then(function () {\n      var _ref2 = _asyncToGenerator(function* (response) {\n        var data = yield response.json();\n        setSpec(data);\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()).catch(function (error) {\n      return console.error(`Error fetching OpenAPI spec: ${error}`);\n    });\n  }, [specUrl]);\n  return React.createElement(OpenAPIContext.Provider, {\n    value: {\n      spec: spec,\n      getModelFields: getModelFields,\n      getModelField: getModelField\n    }\n  }, children);\n};\nexport var useOpenAPISpec = function useOpenAPISpec() {\n  var context = useContext(OpenAPIContext);\n  if (!context) {\n    throw new Error(\"useOpenAPISpec must be used within an OpenAPIProvider\");\n  }\n  return context;\n};","map":{"version":3,"sources":["../src/OpenAPIContext.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import camelCase from \"lodash/camelCase\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nconst OpenAPIContext = createContext(null);\nexport const OpenAPIProvider = ({ children, specUrl }) => {\n    const [spec, setSpec] = useState(null);\n    const getModelFields = (modelName) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const modelPath = `/${camelCase(modelName.replace(/\\s/g, \"\"))}/`;\n        const rootConfig = (_a = spec === null || spec === void 0 ? void 0 : spec.paths) === null || _a === void 0 ? void 0 : _a[modelPath];\n        if (!rootConfig) {\n            if ((spec === null || spec === void 0 ? void 0 : spec.paths) && modelName) {\n                console.warn(`No OpenAPI model found for ${modelName}`);\n            }\n            return null;\n        }\n        const items = (_j = (_h = (_g = (_f = (_e = (_d = (_c = (_b = rootConfig === null || rootConfig === void 0 ? void 0 : rootConfig.get) === null || _b === void 0 ? void 0 : _b.responses) === null || _c === void 0 ? void 0 : _c[\"200\"]) === null || _d === void 0 ? void 0 : _d.content) === null || _e === void 0 ? void 0 : _e[\"application/json\"]) === null || _f === void 0 ? void 0 : _f.schema) === null || _g === void 0 ? void 0 : _g.properties) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.items;\n        return items;\n    };\n    const getModelField = (modelName, fieldName) => {\n        var _a, _b;\n        const fields = getModelFields(modelName);\n        const dotFields = fieldName.split(\".\");\n        let field = (_a = fields === null || fields === void 0 ? void 0 : fields.properties) === null || _a === void 0 ? void 0 : _a[dotFields[0]];\n        if (!field && fieldName && (fields === null || fields === void 0 ? void 0 : fields.properties)) {\n            console.warn(`No OpenAPI field found for ${modelName}:${fieldName}`);\n        }\n        for (const dotField of dotFields.slice(1)) {\n            field = (_b = field === null || field === void 0 ? void 0 : field.properties) === null || _b === void 0 ? void 0 : _b[dotField];\n        }\n        return field;\n    };\n    // Fetch the OpenAPI spec from the provided URL.\n    useEffect(() => {\n        if (!specUrl) {\n            return;\n        }\n        fetch(specUrl)\n            .then(async (response) => {\n            const data = (await response.json());\n            setSpec(data);\n        })\n            .catch((error) => console.error(`Error fetching OpenAPI spec: ${error}`));\n    }, [specUrl]);\n    return (React.createElement(OpenAPIContext.Provider, { value: { spec, getModelFields, getModelField } }, children));\n};\nexport const useOpenAPISpec = () => {\n    const context = useContext(OpenAPIContext);\n    if (!context) {\n        throw new Error(\"useOpenAPISpec must be used within an OpenAPIProvider\");\n    }\n    return context;\n};\n//# sourceMappingURL=OpenAPIContext.js.map"]},"metadata":{},"sourceType":"module"}