{"ast":null,"code":"'use strict';\n\nimport NativeReanimatedModule from './NativeReanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { makeShareableCloneOnUIRecursive, makeShareableCloneRecursive, registerShareableMapping } from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nvar _worklet_12865969727780_init_data = {\n  code: \"function makeUIMutable(initial,syncDataHolder){const{valueSetter,makeShareableCloneOnUIRecursive}=this.__closure;const listeners=new Map();let value=initial;const self={set value(newValue){valueSetter(self,newValue);},get value(){return value;},set _value(newValue){value=newValue;if(syncDataHolder){_updateDataSynchronously(syncDataHolder,makeShareableCloneOnUIRecursive(newValue));}listeners.forEach(function(listener){listener(newValue);});},get _value(){return value;},modify:function(modifier){let forceUpdate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;valueSetter(self,modifier!==undefined?modifier(value):value,forceUpdate);},addListener:function(id,listener){listeners.set(id,listener);},removeListener:function(id){listeners.delete(id);},_animation:null,_isReanimatedSharedValue:true};return self;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"makeUIMutable\\\",\\\"initial\\\",\\\"syncDataHolder\\\",\\\"valueSetter\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"__closure\\\",\\\"listeners\\\",\\\"Map\\\",\\\"value\\\",\\\"self\\\",\\\"newValue\\\",\\\"_value\\\",\\\"_updateDataSynchronously\\\",\\\"forEach\\\",\\\"listener\\\",\\\"modify\\\",\\\"modifier\\\",\\\"forceUpdate\\\",\\\"arguments\\\",\\\"length\\\",\\\"undefined\\\",\\\"addListener\\\",\\\"id\\\",\\\"set\\\",\\\"removeListener\\\",\\\"delete\\\",\\\"_animation\\\",\\\"_isReanimatedSharedValue\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAQO,SAAAA,aAASA,CAAcC,OAAA,CAAOC,cAAE,CAAc,OAAAC,WAAA,CAAAC,+BAAA,OAAAC,SAAA,CAGnD,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAC3B,GAAI,CAAAC,KAAK,CAAGP,OAAO,CACnB,KAAM,CAAAQ,IAAI,CAAG,CACX,GAAI,CAAAD,KAAKA,CAACE,QAAQ,CAAE,CAClBP,WAAW,CAACM,IAAI,CAAEC,QAAQ,CAAC,CAC7B,CAAC,CACD,GAAI,CAAAF,KAAKA,CAAA,CAAG,CACV,MAAO,CAAAA,KAAK,CACd,CAAC,CAOD,GAAI,CAAAG,MAAMA,CAACD,QAAQ,CAAE,CACnBF,KAAK,CAAGE,QAAQ,CAChB,GAAIR,cAAc,CAAE,CAClBU,wBAAwB,CAACV,cAAc,CAAEE,+BAA+B,CAACM,QAAQ,CAAC,CAAC,CACrF,CACAJ,SAAS,CAACO,OAAO,CAAC,SAAAC,QAAQ,CAAI,CAC5BA,QAAQ,CAACJ,QAAQ,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CACD,GAAI,CAAAC,MAAMA,CAAA,CAAG,CACX,MAAO,CAAAH,KAAK,CACd,CAAC,CACDO,MAAM,CAAE,QAAAA,CAAUC,QAAQ,CAAE,CAC1B,GAAI,CAAAC,WAAW,CAAGC,SAAS,CAACC,MAAM,CAAG,CAAC,EAAID,SAAS,CAAC,CAAC,CAAC,GAAKE,SAAS,CAAGF,SAAS,CAAC,CAAC,CAAC,CAAG,IAAI,CAC1Ff,WAAW,CAACM,IAAI,CAAEO,QAAQ,GAAKI,SAAS,CAAGJ,QAAQ,CAACR,KAAK,CAAC,CAAGA,KAAK,CAAES,WAAW,CAAC,CAClF,CAAC,CACDI,WAAW,CAAE,QAAAA,CAACC,EAAE,CAAER,QAAQ,CAAK,CAC7BR,SAAS,CAACiB,GAAG,CAACD,EAAE,CAAER,QAAQ,CAAC,CAC7B,CAAC,CACDU,cAAc,CAAE,QAAAA,CAAAF,EAAE,CAAI,CACpBhB,SAAS,CAACmB,MAAM,CAACH,EAAE,CAAC,CACtB,CAAC,CACDI,UAAU,CAAE,IAAI,CAChBC,wBAAwB,CAAE,IAC5B,CAAC,CACD,MAAO,CAAAlB,IAAI,CACb\\\"}\",\n  version: \"3.6.3\"\n};\nexport var makeUIMutable = function () {\n  var _e = [new global.Error(), -3, -27];\n  var makeUIMutable = function makeUIMutable(initial, syncDataHolder) {\n    var listeners = new Map();\n    var value = initial;\n    var self = {\n      set value(newValue) {\n        valueSetter(self, newValue);\n      },\n      get value() {\n        return value;\n      },\n      set _value(newValue) {\n        value = newValue;\n        if (syncDataHolder) {\n          _updateDataSynchronously(syncDataHolder, makeShareableCloneOnUIRecursive(newValue));\n        }\n        listeners.forEach(function (listener) {\n          listener(newValue);\n        });\n      },\n      get _value() {\n        return value;\n      },\n      modify: function modify(modifier) {\n        var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        valueSetter(self, modifier !== undefined ? modifier(value) : value, forceUpdate);\n      },\n      addListener: function addListener(id, listener) {\n        listeners.set(id, listener);\n      },\n      removeListener: function removeListener(id) {\n        listeners.delete(id);\n      },\n      _animation: null,\n      _isReanimatedSharedValue: true\n    };\n    return self;\n  };\n  makeUIMutable.__closure = {\n    valueSetter: valueSetter,\n    makeShareableCloneOnUIRecursive: makeShareableCloneOnUIRecursive\n  };\n  makeUIMutable.__workletHash = 12865969727780;\n  makeUIMutable.__initData = _worklet_12865969727780_init_data;\n  makeUIMutable.__stackDetails = _e;\n  return makeUIMutable;\n}();\nvar _worklet_12435948459793_init_data = {\n  code: \"function anonymous(){const{makeUIMutable,initial,syncDataHolder}=this.__closure;return makeUIMutable(initial,syncDataHolder);}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"makeUIMutable\\\",\\\"initial\\\",\\\"syncDataHolder\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AA+DY,SAAAA,SAAMA,CAAA,QAAAC,aAAA,CAAAC,OAAA,CAAAC,cAAA,OAAAC,SAAA,CAGZ,MAAO,CAAAH,aAAa,CAACC,OAAO,CAAEC,cAAc,CAAC,CAC/C\\\"}\",\n  version: \"3.6.3\"\n};\nvar _worklet_12096167784162_init_data = {\n  code: \"function anonymous(){const{mutable,newValue}=this.__closure;mutable.value=newValue;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"mutable\\\",\\\"newValue\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AA4EgB,SAAAA,SAAMA,CAAA,QAAAC,OAAA,CAAAC,QAAA,OAAAC,SAAA,CACZF,OAAO,CAACG,KAAK,CAAGF,QAAQ,CAC1B\\\"}\",\n  version: \"3.6.3\"\n};\nvar _worklet_10579608795621_init_data = {\n  code: \"function anonymous(){const{mutable,modifier,forceUpdate}=this.__closure;mutable.modify(modifier,forceUpdate);}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"mutable\\\",\\\"modifier\\\",\\\"forceUpdate\\\",\\\"__closure\\\",\\\"modify\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAyGgB,SAAAA,SAAMA,CAAA,QAAAC,OAAA,CAAAC,QAAA,CAAAC,WAAA,OAAAC,SAAA,CACZH,OAAO,CAACI,MAAM,CAACH,QAAQ,CAAEC,WAAW,CAAC,CACvC\\\"}\",\n  version: \"3.6.3\"\n};\nexport function makeMutable(initial) {\n  var oneWayReadsOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var value = initial;\n  var syncDataHolder;\n  if (!oneWayReadsOnly && !SHOULD_BE_USE_WEB) {\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(makeShareableCloneRecursive(value));\n    registerShareableMapping(syncDataHolder);\n  }\n  var handle = makeShareableCloneRecursive({\n    __init: function () {\n      var _e = [new global.Error(), -4, -27];\n      var anonymous = function anonymous() {\n        return makeUIMutable(initial, syncDataHolder);\n      };\n      anonymous.__closure = {\n        makeUIMutable: makeUIMutable,\n        initial: initial,\n        syncDataHolder: syncDataHolder\n      };\n      anonymous.__workletHash = 12435948459793;\n      anonymous.__initData = _worklet_12435948459793_init_data;\n      anonymous.__stackDetails = _e;\n      return anonymous;\n    }()\n  });\n  var listeners = SHOULD_BE_USE_WEB ? new Map() : undefined;\n  var mutable = {\n    set value(newValue) {\n      if (SHOULD_BE_USE_WEB) {\n        valueSetter(mutable, newValue);\n      } else {\n        runOnUI(function () {\n          var _e = [new global.Error(), -3, -27];\n          var anonymous = function anonymous() {\n            mutable.value = newValue;\n          };\n          anonymous.__closure = {\n            mutable: mutable,\n            newValue: newValue\n          };\n          anonymous.__workletHash = 12096167784162;\n          anonymous.__initData = _worklet_12096167784162_init_data;\n          anonymous.__stackDetails = _e;\n          return anonymous;\n        }())();\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue) {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error('[Reanimated] Setting `_value` directly is only possible on the UI runtime.');\n      }\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    get _value() {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error('[Reanimated] Reading from `_value` directly is only possible on the UI runtime.');\n      }\n      return value;\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!SHOULD_BE_USE_WEB) {\n        runOnUI(function () {\n          var _e = [new global.Error(), -4, -27];\n          var anonymous = function anonymous() {\n            mutable.modify(modifier, forceUpdate);\n          };\n          anonymous.__closure = {\n            mutable: mutable,\n            modifier: modifier,\n            forceUpdate: forceUpdate\n          };\n          anonymous.__workletHash = 10579608795621;\n          anonymous.__initData = _worklet_10579608795621_init_data;\n          anonymous.__stackDetails = _e;\n          return anonymous;\n        }())();\n      } else {\n        valueSetter(mutable, modifier !== undefined ? modifier(mutable.value) : mutable.value, forceUpdate);\n      }\n    },\n    addListener: function addListener(id, listener) {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error('[Reanimated] Adding listeners is only possible on the UI runtime.');\n      }\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error('[Reanimated] Removing listeners is only possible on the UI runtime.');\n      }\n      listeners.delete(id);\n    },\n    _isReanimatedSharedValue: true\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\nvar _worklet_11709675973052_init_data = {\n  code: \"function anonymous(){const{initial}=this.__closure;return initial;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"initial\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAoIY,SAAAA,SAAMA,CAAA,QAAAC,OAAA,OAAAC,SAAA,CAGZ,MAAO,CAAAD,OAAO,CAChB\\\"}\",\n  version: \"3.6.3\"\n};\nexport function makeRemote() {\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var handle = makeShareableCloneRecursive({\n    __init: function () {\n      var _e = [new global.Error(), -2, -27];\n      var anonymous = function anonymous() {\n        return initial;\n      };\n      anonymous.__closure = {\n        initial: initial\n      };\n      anonymous.__workletHash = 11709675973052;\n      anonymous.__initData = _worklet_11709675973052_init_data;\n      anonymous.__stackDetails = _e;\n      return anonymous;\n    }()\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}","map":{"version":3,"sources":["mutables.ts"],"names":["NativeReanimatedModule","shouldBeUseWeb","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","registerShareableMapping","runOnUI","valueSetter","SHOULD_BE_USE_WEB","makeUIMutable","initial","syncDataHolder","listeners","Map","value","self","newValue","_value","_updateDataSynchronously","forEach","listener","modify","modifier","forceUpdate","undefined","addListener","id","set","removeListener","delete","_animation","_isReanimatedSharedValue","makeMutable","oneWayReadsOnly","makeSynchronizedDataHolder","handle","__init","mutable","getDataSynchronously","Error","makeRemote"],"mappings":"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","sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { SharedValue, ShareableSyncDataHolderRef } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nexport function makeUIMutable<T>(\n  initial: T,\n  syncDataHolder?: ShareableSyncDataHolderRef<T>\n) {\n  'worklet';\n\n  const listeners = new Map();\n  let value = initial;\n\n  const self = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: T) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(\n          syncDataHolder,\n          makeShareableCloneOnUIRecursive(newValue)\n        );\n      }\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      return value;\n    },\n    modify: (modifier?: (value: T) => T, forceUpdate = true) => {\n      valueSetter(\n        self,\n        modifier !== undefined ? modifier(value) : value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: (newValue: T) => void) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<T>(\n  initial: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  let value: T = initial;\n  let syncDataHolder: ShareableSyncDataHolderRef<T> | undefined;\n  if (!oneWayReadsOnly && !SHOULD_BE_USE_WEB) {\n    // updates are always synchronous when running on web or in Jest environment\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(\n      makeShareableCloneRecursive(value)\n    );\n    registerShareableMapping(syncDataHolder);\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial, syncDataHolder);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = SHOULD_BE_USE_WEB ? new Map() : undefined;\n  const mutable = {\n    set value(newValue) {\n      if (SHOULD_BE_USE_WEB) {\n        valueSetter(mutable, newValue);\n      } else {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue: T) {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Setting `_value` directly is only possible on the UI runtime.'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Reading from `_value` directly is only possible on the UI runtime.'\n        );\n      }\n      return value;\n    },\n    modify: (modifier?: (value: T) => T, forceUpdate = true) => {\n      if (!SHOULD_BE_USE_WEB) {\n        runOnUI(() => {\n          mutable.modify(modifier, forceUpdate);\n        })();\n      } else {\n        valueSetter(\n          mutable,\n          modifier !== undefined ? modifier(mutable.value) : mutable.value,\n          forceUpdate\n        );\n      }\n    },\n    addListener: (id: number, listener: (value: T) => void) => {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Adding listeners is only possible on the UI runtime.'\n        );\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Removing listeners is only possible on the UI runtime.'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\n\nexport function makeRemote<T extends object>(initial: T = {} as T): T {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return initial;\n    },\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}\n"]},"metadata":{},"sourceType":"module"}