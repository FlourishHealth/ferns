{"ast":null,"code":"import React, { forwardRef, useEffect, useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Modalize } from \"react-native-modalize\";\nimport { Portal } from \"react-native-portalize\";\nexport var useCombinedRefs = function useCombinedRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  var targetRef = useRef();\n  useEffect(function () {\n    refs.forEach(function (ref) {\n      if (!ref) {\n        return;\n      }\n      if (typeof ref === \"function\") {\n        ref(targetRef.current);\n      } else {\n        ref.current = targetRef.current;\n      }\n    });\n  }, [refs]);\n  return targetRef;\n};\nexport var SimpleContent = forwardRef(function (props, ref) {\n  var modalizeRef = useRef(null);\n  var combinedRef = useCombinedRefs(ref, modalizeRef);\n  var animated = useRef(new Animated.Value(0)).current;\n  return React.createElement(Portal, null, React.createElement(Modalize, {\n    ref: combinedRef,\n    adjustToContentHeight: true,\n    panGestureAnimatedValue: animated,\n    scrollViewProps: {\n      showsVerticalScrollIndicator: false,\n      stickyHeaderIndices: [0]\n    }\n  }, props.children));\n});","map":{"version":3,"sources":["../src/ModalSheet.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,IAAG,UAAU,EAAE,SAAS,EAAE,MAAM,QAAO,OAAO;AAAC,OAAA,QAAA;AAE3D,SAAQ,QAAQ,QAAO,uBAAuB;AAC9C,SAAQ,MAAM,QAAO,wBAAwB;AAE7C,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAA,EAAoB;EAAA,SAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAb,IAAS,OAAA,KAAA,CAAA,IAAA,GAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;IAAT,IAAS,CAAA,IAAA,IAAA,SAAA,CAAA,IAAA;EAAA;EAC1C,IAAM,SAAS,GAAG,MAAM,CAAA,CAAE;EAG1B,SAAS,CAAC,YAAK;IACb,IAAI,CAAC,OAAO,CAAC,UAAC,GAAQ,EAAI;MACxB,IAAI,CAAC,GAAG,EAAE;QACR;MACF;MAEA,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;QAC7B,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;MACxB,CAAC,MAAM;QACL,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO;MACjC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EAEV,OAAO,SAAS;AAClB,CAAC;AAMD,OAAO,IAAM,aAAa,GAAG,UAAU,CAAC,UAAC,KAAY,EAAE,GAAG,EAAI;EAC5D,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;EAChC,IAAM,WAAW,GAAG,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC;EACrD,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;EAQtD,OACE,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,IAAA,EACL,KAAA,CAAA,aAAA,CAAC,QAAQ,E;IAEP,GAAG,EAAE,WAAW;IAChB,qBAAqB,EAAA,IAAA;IACrB,uBAAuB,EAAE,QAAQ;IACjC,eAAe,EAAE;MACf,4BAA4B,EAAE,KAAK;MACnC,mBAAmB,EAAE,CAAC,CAAC;IACxB;EAAA,CAAA,EAEA,KAAK,CAAC,QAAQ,CACN,CACJ;AAEb,CAAC,CAAC","sourceRoot":"","sourcesContent":["/* eslint-disable react/display-name */\nimport React, { forwardRef, useEffect, useRef } from \"react\";\nimport { Animated } from \"react-native\";\nimport { Modalize } from \"react-native-modalize\";\nimport { Portal } from \"react-native-portalize\";\nexport const useCombinedRefs = (...refs) => {\n    const targetRef = useRef();\n    // Iterate through the refs array, and set the ref.current value to the targetRef\n    useEffect(() => {\n        refs.forEach((ref) => {\n            if (!ref) {\n                return;\n            }\n            if (typeof ref === \"function\") {\n                ref(targetRef.current);\n            }\n            else {\n                ref.current = targetRef.current;\n            }\n        });\n    }, [refs]);\n    return targetRef;\n};\nexport const SimpleContent = forwardRef((props, ref) => {\n    const modalizeRef = useRef(null);\n    const combinedRef = useCombinedRefs(ref, modalizeRef);\n    const animated = useRef(new Animated.Value(0)).current;\n    // const renderHeader = () => (\n    //   <Box paddingY={4} marginTop={4} marginBottom={4}>\n    //     <Text>50 users online</Text>\n    //   </Box>\n    // );\n    return (React.createElement(Portal, null,\n        React.createElement(Modalize\n        // HeaderComponent={renderHeader}\n        , { \n            // HeaderComponent={renderHeader}\n            ref: combinedRef, adjustToContentHeight: true, panGestureAnimatedValue: animated, scrollViewProps: {\n                showsVerticalScrollIndicator: false,\n                stickyHeaderIndices: [0],\n            } }, props.children)));\n});\n//# sourceMappingURL=ModalSheet.js.map"]},"metadata":{},"sourceType":"module"}