{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { getCalendars } from \"expo-localization\";\nimport range from \"lodash/range\";\nimport { DateTime } from \"luxon\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Calendar } from \"react-native-calendars\";\nimport { Box } from \"./Box\";\nimport { Heading } from \"./Heading\";\nimport { IconButton } from \"./IconButton\";\nimport { isMobileDevice } from \"./MediaQuery\";\nimport { Modal } from \"./Modal\";\nimport { SelectList } from \"./SelectList\";\nimport { ThemeContext } from \"./Theme\";\nimport { TimezonePicker } from \"./TimezonePicker\";\nvar TIME_PICKER_HEIGHT = 104;\nvar INPUT_HEIGHT = 40;\nvar hours = range(1, 13).map(function (n) {\n  return String(n);\n});\nvar minutes = range(0, 60).map(function (n) {\n  return String(n).padStart(2, \"0\");\n});\nvar minutesOptions = [].concat(_toConsumableArray(minutes), [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]);\nvar TimeInput = function TimeInput(_ref) {\n  var type = _ref.type,\n    value = _ref.value,\n    onChange = _ref.onChange;\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  var defaultText = type === \"minute\" ? String(value).padStart(2, \"0\") : String(value);\n  var _useState = useState(defaultText),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    focused = _useState4[0],\n    setFocused = _useState4[1];\n  var error = false;\n  if (type === \"hour\") {\n    error = !hours.includes(String(Number(text)));\n  } else if (type === \"minute\") {\n    error = !minutesOptions.includes(String(Number(text)));\n  }\n  var textInputStyle = {\n    flex: 1,\n    paddingTop: 4,\n    paddingRight: 4,\n    paddingBottom: 4,\n    paddingLeft: 0,\n    height: INPUT_HEIGHT,\n    width: \"100%\",\n    color: theme.darkGray,\n    fontFamily: theme.primaryFont\n  };\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: INPUT_HEIGHT,\n      width: \"100%\",\n      paddingHorizontal: focused ? 10 : 14,\n      paddingVertical: focused ? 0 : 4,\n      borderColor: error ? theme.red : theme.blue,\n      borderWidth: focused ? 5 : 1,\n      borderRadius: 5,\n      backgroundColor: theme.white\n    }\n  }, React.createElement(TextInput, {\n    keyboardType: \"number-pad\",\n    returnKeyType: \"done\",\n    style: Object.assign(Object.assign({}, textInputStyle), {\n      outline: Platform.select({\n        web: \"none\"\n      })\n    }),\n    textContentType: \"none\",\n    underlineColorAndroid: \"transparent\",\n    value: text,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onChangeText: function onChangeText(t) {\n      setText(t);\n      onChange(Number(t));\n    },\n    onFocus: function onFocus() {\n      setFocused(true);\n    }\n  }));\n};\nvar CalendarHeader = function CalendarHeader(_ref2) {\n  var addMonth = _ref2.addMonth,\n    month = _ref2.month;\n  var displayDate = DateTime.fromJSDate(month[0]).toFormat(\"MMM yyyy\");\n  return React.createElement(Box, {\n    alignItems: \"center\",\n    direction: \"row\",\n    height: 40,\n    justifyContent: \"between\",\n    width: \"100%\"\n  }, React.createElement(IconButton, {\n    accessibilityLabel: \"arrow\",\n    bgColor: \"white\",\n    icon: \"angle-double-left\",\n    iconColor: \"primary\",\n    size: \"md\",\n    onClick: function onClick() {\n      addMonth(-12);\n    }\n  }), React.createElement(IconButton, {\n    accessibilityLabel: \"arrow\",\n    bgColor: \"white\",\n    icon: \"angle-left\",\n    iconColor: \"primary\",\n    size: \"md\",\n    onClick: function onClick() {\n      addMonth(-1);\n    }\n  }), React.createElement(Heading, {\n    size: \"sm\"\n  }, displayDate), React.createElement(IconButton, {\n    accessibilityLabel: \"arrow\",\n    bgColor: \"white\",\n    icon: \"angle-right\",\n    iconColor: \"primary\",\n    size: \"md\",\n    onClick: function onClick() {\n      addMonth(1);\n    }\n  }), React.createElement(IconButton, {\n    accessibilityLabel: \"arrow\",\n    bgColor: \"white\",\n    icon: \"angle-double-right\",\n    iconColor: \"primary\",\n    size: \"md\",\n    onClick: function onClick() {\n      addMonth(12);\n    }\n  }));\n};\nexport var DateTimeActionSheet = function DateTimeActionSheet(_ref3) {\n  var mode = _ref3.mode,\n    value = _ref3.value,\n    onChange = _ref3.onChange,\n    visible = _ref3.visible,\n    onDismiss = _ref3.onDismiss,\n    transformValue = _ref3.transformValue;\n  var _a, _b;\n  var _useContext2 = useContext(ThemeContext),\n    theme = _useContext2.theme;\n  var calendar = getCalendars()[0];\n  var originalTimezone = ((_a = transformValue === null || transformValue === void 0 ? void 0 : transformValue.options) === null || _a === void 0 ? void 0 : _a.timezone) || (calendar === null || calendar === void 0 ? void 0 : calendar.timeZone);\n  var _useState5 = useState(originalTimezone),\n    _useState6 = _slicedToArray(_useState5, 2),\n    timezone = _useState6[0],\n    setTimezone = _useState6[1];\n  if (!timezone) {\n    console.error(\"Could not automatically determine timezone and none was provided to DateTimeActionSheet.\");\n  }\n  if (typeof value !== \"string\" && typeof value !== \"undefined\") {\n    console.error(`Datetime only accepts string or undefined value, not ${typeof value}: ${value}`);\n  }\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hour = _useState8[0],\n    setHour = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    minute = _useState10[0],\n    setMinute = _useState10[1];\n  var _useState11 = useState(\"am\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    amPm = _useState12[0],\n    setAmPm = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    date = _useState14[0],\n    setDate = _useState14[1];\n  useEffect(function () {\n    var datetime;\n    if (value) {\n      datetime = DateTime.fromISO(value).setZone(timezone).set({\n        millisecond: 0,\n        second: 0\n      });\n    } else {\n      datetime = DateTime.now().setZone(timezone).set({\n        millisecond: 0,\n        second: 0\n      });\n    }\n    if (!datetime.isValid) {\n      throw new Error(`Invalid date/time value ${value}, datetime ${datetime} timezone: ${timezone}`);\n    }\n    var h = datetime.hour % 12;\n    if (h === 0) {\n      h = 12;\n    }\n    setHour(h);\n    setMinute(datetime.minute);\n    setAmPm(datetime.toFormat(\"a\") === \"am\" ? \"am\" : \"pm\");\n    setDate(datetime.toISO());\n  }, [value, transformValue, (_b = transformValue === null || transformValue === void 0 ? void 0 : transformValue.options) === null || _b === void 0 ? void 0 : _b.timezone]);\n  var renderMobileTime = function renderMobileTime() {\n    return React.createElement(Box, null, React.createElement(Box, {\n      direction: \"row\",\n      width: \"100%\"\n    }, React.createElement(Box, {\n      paddingY: 2,\n      width: \"35%\"\n    }, React.createElement(Picker, {\n      itemStyle: {\n        height: TIME_PICKER_HEIGHT\n      },\n      selectedValue: hour,\n      style: {\n        height: TIME_PICKER_HEIGHT,\n        backgroundColor: \"#FFFFFF\"\n      },\n      onValueChange: function onValueChange(itemValue) {\n        return setHour(itemValue);\n      }\n    }, hours.map(function (n) {\n      return React.createElement(Picker.Item, {\n        key: String(n),\n        label: String(n),\n        value: String(n)\n      });\n    }))), React.createElement(Box, {\n      paddingY: 2,\n      width: \"35%\"\n    }, React.createElement(Picker, {\n      itemStyle: {\n        height: TIME_PICKER_HEIGHT\n      },\n      selectedValue: minute,\n      style: {\n        height: TIME_PICKER_HEIGHT,\n        backgroundColor: \"#FFFFFF\"\n      },\n      onValueChange: function onValueChange(itemValue) {\n        return setMinute(itemValue);\n      }\n    }, minutes.map(function (n) {\n      return React.createElement(Picker.Item, {\n        key: String(n),\n        label: String(n),\n        value: String(n)\n      });\n    }))), React.createElement(Box, {\n      paddingY: 2,\n      width: \"30%\"\n    }, React.createElement(Picker, {\n      itemStyle: {\n        height: TIME_PICKER_HEIGHT\n      },\n      selectedValue: amPm,\n      style: {\n        height: TIME_PICKER_HEIGHT,\n        backgroundColor: \"#FFFFFF\"\n      },\n      onValueChange: function onValueChange(itemValue) {\n        return setAmPm(itemValue);\n      }\n    }, React.createElement(Picker.Item, {\n      key: \"am\",\n      label: \"am\",\n      value: \"am\"\n    }), React.createElement(Picker.Item, {\n      key: \"pm\",\n      label: \"pm\",\n      value: \"pm\"\n    })))), Boolean(mode === \"time\" || mode === \"datetime\") && (React.createElement(Box, {\n      paddingY: 2\n    }, React.createElement(TimezonePicker, {\n      showLabel: false,\n      timezone: timezone,\n      width: \"100%\",\n      onChange: setTimezone\n    }))));\n  };\n  var renderWebTime = function renderWebTime() {\n    return React.createElement(Box, {\n      direction: \"row\",\n      justifyContent: \"center\",\n      width: \"100%\"\n    }, React.createElement(Box, {\n      width: 60\n    }, React.createElement(TimeInput, {\n      type: \"hour\",\n      value: hour,\n      onChange: function onChange(v) {\n        return setHour(v);\n      }\n    })), React.createElement(Box, {\n      alignItems: \"center\",\n      height: INPUT_HEIGHT,\n      justifyContent: \"center\",\n      marginLeft: 2,\n      marginRight: 2\n    }, React.createElement(Heading, {\n      size: \"md\"\n    }, \":\")), React.createElement(Box, {\n      marginRight: 2,\n      width: 60\n    }, React.createElement(TimeInput, {\n      type: \"minute\",\n      value: minute,\n      onChange: function onChange(v) {\n        return setMinute(v);\n      }\n    })), React.createElement(Box, {\n      marginRight: 2,\n      width: 60\n    }, React.createElement(SelectList, {\n      options: [{\n        label: \"am\",\n        value: \"am\"\n      }, {\n        label: \"pm\",\n        value: \"pm\"\n      }],\n      style: {\n        minHeight: INPUT_HEIGHT\n      },\n      value: amPm,\n      onChange: function onChange(result) {\n        setAmPm(result);\n      }\n    })), Boolean(mode === \"time\" || mode === \"datetime\") && (React.createElement(Box, null, React.createElement(TimezonePicker, {\n      showLabel: false,\n      timezone: timezone,\n      onChange: setTimezone\n    }))));\n  };\n  var renderDateTime = function renderDateTime() {\n    return React.createElement(Box, null, React.createElement(Box, {\n      marginBottom: 2\n    }, renderDateCalendar()), isMobileDevice() ? renderMobileTime() : renderWebTime());\n  };\n  var sendOnChange = function sendOnChange() {\n    var militaryHour = amPm === \"pm\" && hour !== 12 ? Number(hour) + 12 : Number(hour);\n    if (mode === \"date\") {\n      var v = DateTime.fromISO(date).setZone(\"UTC\").set({\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      }).toISO();\n      if (!v || !DateTime.fromISO(v).isValid) {\n        throw new Error(`Invalid date: ${date}`);\n      }\n      onChange({\n        value: v\n      });\n    } else if (mode === \"time\") {\n      var _v = DateTime.fromISO(date).setZone(timezone).set({\n        hour: militaryHour,\n        minute: minute,\n        second: 0,\n        millisecond: 0\n      }).setZone(timezone).setZone(\"UTC\").toISO();\n      if (!_v || !DateTime.fromISO(_v).isValid) {\n        throw new Error(`Invalid date: ${date}`);\n      }\n      onChange({\n        value: _v\n      });\n    } else if (mode === \"datetime\") {\n      var _v2 = DateTime.fromISO(date).setZone(timezone).set({\n        hour: militaryHour,\n        minute: minute,\n        second: 0,\n        millisecond: 0\n      }).setZone(\"UTC\").toISO();\n      if (!_v2 || !DateTime.fromISO(_v2).isValid) {\n        throw new Error(`Invalid date: ${date}`);\n      }\n      onChange({\n        value: _v2\n      });\n    }\n    onDismiss();\n  };\n  var sendClear = function sendClear() {\n    onChange({\n      value: \"\"\n    });\n    onDismiss();\n  };\n  var renderDateCalendar = function renderDateCalendar() {\n    var markedDates = {};\n    var dt = DateTime.fromISO(date).setZone(\"UTC\");\n    var dateString;\n    if (dt.hour === 0 && dt.minute === 0 && dt.second === 0) {\n      console.log(\"UTC\");\n      dateString = dt.toFormat(\"yyyy-MM-dd\");\n    } else {\n      console.log(\"NOT UTC\");\n      dateString = dt.setZone().toFormat(\"yyyy-MM-dd\");\n    }\n    console.log(\"DATE STRING\", dateString);\n    if (date) {\n      markedDates[dateString] = {\n        selected: true,\n        selectedColor: theme.primary\n      };\n    }\n    return React.createElement(Box, {\n      width: \"100%\"\n    }, React.createElement(Box, {\n      marginBottom: 4,\n      width: \"100%\"\n    }, React.createElement(Calendar, {\n      customHeader: CalendarHeader,\n      initialDate: dateString,\n      markedDates: markedDates,\n      onDayPress: function onDayPress(day) {\n        setDate(day.dateString);\n        if (mode === \"date\") {\n          onChange({\n            value: day.dateString\n          });\n          onDismiss();\n        }\n      }\n    })));\n  };\n  var renderContent = function renderContent() {\n    if (mode === \"date\") {\n      return renderDateCalendar();\n    } else if (mode === \"time\" && isMobileDevice()) {\n      return renderMobileTime();\n    } else if (mode === \"time\" && !isMobileDevice()) {\n      return renderWebTime();\n    } else {\n      return renderDateTime();\n    }\n  };\n  return React.createElement(Modal, {\n    primaryButtonOnClick: sendOnChange,\n    primaryButtonText: \"Save\",\n    secondaryButtonOnClick: sendClear,\n    secondaryButtonText: \"Clear\",\n    showClose: true,\n    visible: visible,\n    onDismiss: onDismiss\n  }, renderContent());\n};","map":{"version":3,"sources":["../src/DateTimeActionSheet.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Picker } from \"@react-native-picker/picker\";\nimport { getCalendars } from \"expo-localization\";\nimport range from \"lodash/range\";\nimport { DateTime } from \"luxon\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Platform, TextInput, View } from \"react-native\";\nimport { Calendar } from \"react-native-calendars\";\nimport { Box } from \"./Box\";\nimport { Heading } from \"./Heading\";\nimport { IconButton } from \"./IconButton\";\nimport { isMobileDevice } from \"./MediaQuery\";\nimport { Modal } from \"./Modal\";\nimport { SelectList } from \"./SelectList\";\nimport { ThemeContext } from \"./Theme\";\nimport { TimezonePicker } from \"./TimezonePicker\";\nconst TIME_PICKER_HEIGHT = 104;\nconst INPUT_HEIGHT = 40;\nconst hours = range(1, 13).map((n) => String(n));\n// TODO: support limited picker minutes, e.g. 5 or 15 minute increments.\nconst minutes = range(0, 60).map((n) => String(n).padStart(2, \"0\"));\nconst minutesOptions = [...minutes, \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nconst TimeInput = ({ type, value, onChange, }) => {\n    const { theme } = useContext(ThemeContext);\n    const defaultText = type === \"minute\" ? String(value).padStart(2, \"0\") : String(value);\n    const [text, setText] = useState(defaultText);\n    const [focused, setFocused] = useState(false);\n    let error = false;\n    if (type === \"hour\") {\n        error = !hours.includes(String(Number(text)));\n    }\n    else if (type === \"minute\") {\n        error = !minutesOptions.includes(String(Number(text)));\n    }\n    // Broken out because types don't think \"outline\" is a valid style.\n    const textInputStyle = {\n        flex: 1,\n        paddingTop: 4,\n        paddingRight: 4,\n        paddingBottom: 4,\n        paddingLeft: 0,\n        height: INPUT_HEIGHT,\n        width: \"100%\",\n        color: theme.darkGray,\n        fontFamily: theme.primaryFont,\n    };\n    return (React.createElement(View, { style: {\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: INPUT_HEIGHT,\n            width: \"100%\",\n            // Add padding so the border doesn't mess up layouts\n            paddingHorizontal: focused ? 10 : 14,\n            paddingVertical: focused ? 0 : 4,\n            borderColor: error ? theme.red : theme.blue,\n            borderWidth: focused ? 5 : 1,\n            borderRadius: 5,\n            backgroundColor: theme.white,\n        } },\n        React.createElement(TextInput, { keyboardType: \"number-pad\", returnKeyType: \"done\", style: Object.assign(Object.assign({}, textInputStyle), { outline: Platform.select({ web: \"none\" }) }), textContentType: \"none\", underlineColorAndroid: \"transparent\", value: text, onBlur: () => {\n                setFocused(false);\n            }, onChangeText: (t) => {\n                setText(t);\n                onChange(Number(t));\n            }, onFocus: () => {\n                setFocused(true);\n            } })));\n};\nconst CalendarHeader = ({ addMonth, month, }) => {\n    const displayDate = DateTime.fromJSDate(month[0]).toFormat(\"MMM yyyy\");\n    return (React.createElement(Box, { alignItems: \"center\", direction: \"row\", height: 40, justifyContent: \"between\", width: \"100%\" },\n        React.createElement(IconButton, { accessibilityLabel: \"arrow\", bgColor: \"white\", icon: \"angle-double-left\", iconColor: \"primary\", size: \"md\", onClick: () => {\n                addMonth(-12);\n            } }),\n        React.createElement(IconButton, { accessibilityLabel: \"arrow\", bgColor: \"white\", icon: \"angle-left\", iconColor: \"primary\", size: \"md\", onClick: () => {\n                addMonth(-1);\n            } }),\n        React.createElement(Heading, { size: \"sm\" }, displayDate),\n        React.createElement(IconButton, { accessibilityLabel: \"arrow\", bgColor: \"white\", icon: \"angle-right\", iconColor: \"primary\", size: \"md\", onClick: () => {\n                addMonth(1);\n            } }),\n        React.createElement(IconButton, { accessibilityLabel: \"arrow\", bgColor: \"white\", icon: \"angle-double-right\", iconColor: \"primary\", size: \"md\", onClick: () => {\n                addMonth(12);\n            } })));\n};\n// For mobile, renders all components in an action sheet. For web, renders all components in a\n// modal. For mobile:\n// If mode is \"time\", renders a spinner picker for time picker on both platforms.\n// If mode is \"date\", renders our custom calendar on both platforms.\n// If mode is \"datetime\",renders a spinner picker for time picker and our custom calendar on both\n// platforms.\n// For web, renders a simplistic text box for time picker and a calendar for date picker\n// in a modal In the future, web time picker should be a typeahead dropdown like Google calendar.\nexport const DateTimeActionSheet = ({ \n// actionSheetRef,\nmode, value, onChange, visible, onDismiss, transformValue, }) => {\n    var _a, _b;\n    const { theme } = useContext(ThemeContext);\n    const calendar = getCalendars()[0];\n    const originalTimezone = ((_a = transformValue === null || transformValue === void 0 ? void 0 : transformValue.options) === null || _a === void 0 ? void 0 : _a.timezone) || (calendar === null || calendar === void 0 ? void 0 : calendar.timeZone);\n    const [timezone, setTimezone] = useState(originalTimezone);\n    if (!timezone) {\n        console.error(\"Could not automatically determine timezone and none was provided to DateTimeActionSheet.\");\n    }\n    if (typeof value !== \"string\" && typeof value !== \"undefined\") {\n        console.error(`Datetime only accepts string or undefined value, not ${typeof value}: ${value}`);\n    }\n    // Accept ISO 8601, HH:mm, or hh:mm A formats. We may want only HH:mm or hh:mm A for mode=time\n    const [hour, setHour] = useState(0);\n    const [minute, setMinute] = useState(0);\n    const [amPm, setAmPm] = useState(\"am\");\n    const [date, setDate] = useState(\"\");\n    // If the value changes in the props, update the state for the date and time.\n    useEffect(() => {\n        let datetime;\n        if (value) {\n            datetime = DateTime.fromISO(value).setZone(timezone).set({ millisecond: 0, second: 0 });\n        }\n        else {\n            datetime = DateTime.now().setZone(timezone).set({ millisecond: 0, second: 0 });\n        }\n        if (!datetime.isValid) {\n            throw new Error(`Invalid date/time value ${value}, datetime ${datetime} timezone: ${timezone}`);\n        }\n        let h = datetime.hour % 12;\n        if (h === 0) {\n            h = 12;\n        }\n        setHour(h);\n        setMinute(datetime.minute);\n        setAmPm(datetime.toFormat(\"a\") === \"am\" ? \"am\" : \"pm\");\n        setDate(datetime.toISO());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value, transformValue, (_b = transformValue === null || transformValue === void 0 ? void 0 : transformValue.options) === null || _b === void 0 ? void 0 : _b.timezone]);\n    // TODO Support 24 hour time for time picker.\n    const renderMobileTime = () => {\n        return (React.createElement(Box, null,\n            React.createElement(Box, { direction: \"row\", width: \"100%\" },\n                React.createElement(Box, { paddingY: 2, width: \"35%\" },\n                    React.createElement(Picker, { itemStyle: {\n                            height: TIME_PICKER_HEIGHT,\n                        }, selectedValue: hour, style: {\n                            height: TIME_PICKER_HEIGHT,\n                            backgroundColor: \"#FFFFFF\",\n                        }, onValueChange: (itemValue) => setHour(itemValue) }, hours.map((n) => (React.createElement(Picker.Item, { key: String(n), label: String(n), value: String(n) }))))),\n                React.createElement(Box, { paddingY: 2, width: \"35%\" },\n                    React.createElement(Picker, { itemStyle: {\n                            height: TIME_PICKER_HEIGHT,\n                        }, selectedValue: minute, style: {\n                            height: TIME_PICKER_HEIGHT,\n                            backgroundColor: \"#FFFFFF\",\n                        }, onValueChange: (itemValue) => setMinute(itemValue) }, minutes.map((n) => (React.createElement(Picker.Item, { key: String(n), label: String(n), value: String(n) }))))),\n                React.createElement(Box, { paddingY: 2, width: \"30%\" },\n                    React.createElement(Picker, { itemStyle: {\n                            height: TIME_PICKER_HEIGHT,\n                        }, selectedValue: amPm, style: {\n                            height: TIME_PICKER_HEIGHT,\n                            backgroundColor: \"#FFFFFF\",\n                        }, onValueChange: (itemValue) => setAmPm(itemValue) },\n                        React.createElement(Picker.Item, { key: \"am\", label: \"am\", value: \"am\" }),\n                        React.createElement(Picker.Item, { key: \"pm\", label: \"pm\", value: \"pm\" })))),\n            Boolean(mode === \"time\" || mode === \"datetime\") && (React.createElement(Box, { paddingY: 2 },\n                React.createElement(TimezonePicker, { showLabel: false, timezone: timezone, width: \"100%\", onChange: setTimezone })))));\n    };\n    // TODO: Support a typeahead dropdown for time picker, similar to Google Calendar on the web.\n    const renderWebTime = () => {\n        return (React.createElement(Box, { direction: \"row\", justifyContent: \"center\", width: \"100%\" },\n            React.createElement(Box, { width: 60 },\n                React.createElement(TimeInput, { type: \"hour\", value: hour, onChange: (v) => setHour(v) })),\n            React.createElement(Box, { alignItems: \"center\", height: INPUT_HEIGHT, justifyContent: \"center\", marginLeft: 2, marginRight: 2 },\n                React.createElement(Heading, { size: \"md\" }, \":\")),\n            React.createElement(Box, { marginRight: 2, width: 60 },\n                React.createElement(TimeInput, { type: \"minute\", value: minute, onChange: (v) => setMinute(v) })),\n            React.createElement(Box, { marginRight: 2, width: 60 },\n                React.createElement(SelectList, { options: [\n                        { label: \"am\", value: \"am\" },\n                        { label: \"pm\", value: \"pm\" },\n                    ], style: { minHeight: INPUT_HEIGHT }, value: amPm, onChange: (result) => {\n                        setAmPm(result);\n                    } })),\n            Boolean(mode === \"time\" || mode === \"datetime\") && (React.createElement(Box, null,\n                React.createElement(TimezonePicker, { showLabel: false, timezone: timezone, onChange: setTimezone })))));\n    };\n    const renderDateTime = () => {\n        return (React.createElement(Box, null,\n            React.createElement(Box, { marginBottom: 2 }, renderDateCalendar()),\n            isMobileDevice() ? renderMobileTime() : renderWebTime()));\n    };\n    // Note: do not call this if waiting on a state change.\n    const sendOnChange = () => {\n        const militaryHour = amPm === \"pm\" && hour !== 12 ? Number(hour) + 12 : Number(hour);\n        if (mode === \"date\") {\n            const v = DateTime.fromISO(date)\n                .setZone(\"UTC\")\n                .set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n                .toISO();\n            if (!v || !DateTime.fromISO(v).isValid) {\n                throw new Error(`Invalid date: ${date}`);\n            }\n            onChange({ value: v });\n        }\n        else if (mode === \"time\") {\n            const v = DateTime.fromISO(date)\n                .setZone(timezone)\n                .set({ hour: militaryHour, minute, second: 0, millisecond: 0 })\n                .setZone(timezone)\n                .setZone(\"UTC\")\n                .toISO();\n            if (!v || !DateTime.fromISO(v).isValid) {\n                throw new Error(`Invalid date: ${date}`);\n            }\n            onChange({ value: v });\n        }\n        else if (mode === \"datetime\") {\n            const v = DateTime.fromISO(date)\n                .setZone(timezone)\n                // Take from the original zone\n                // Set the value on the screen\n                .set({ hour: militaryHour, minute, second: 0, millisecond: 0 })\n                // Put that in the  new timezone on the screen\n                // We always send back in UTC\n                .setZone(\"UTC\")\n                .toISO();\n            if (!v || !DateTime.fromISO(v).isValid) {\n                throw new Error(`Invalid date: ${date}`);\n            }\n            onChange({ value: v });\n        }\n        onDismiss();\n    };\n    const sendClear = () => {\n        onChange({\n            value: \"\",\n        });\n        onDismiss();\n    };\n    // Renders our custom calendar component on mobile or web.\n    const renderDateCalendar = () => {\n        const markedDates = {};\n        // Check if the date is T00:00:00.000Z (it should be), otherwise treat it as a date in the\n        // current timezone.\n        const dt = DateTime.fromISO(date).setZone(\"UTC\");\n        let dateString;\n        if (dt.hour === 0 && dt.minute === 0 && dt.second === 0) {\n            console.log(\"UTC\");\n            dateString = dt.toFormat(\"yyyy-MM-dd\");\n        }\n        else {\n            console.log(\"NOT UTC\");\n            dateString = dt.setZone().toFormat(\"yyyy-MM-dd\");\n        }\n        console.log(\"DATE STRING\", dateString);\n        if (date) {\n            markedDates[dateString] = {\n                selected: true,\n                selectedColor: theme.primary,\n            };\n        }\n        return (React.createElement(Box, { width: \"100%\" },\n            React.createElement(Box, { marginBottom: 4, width: \"100%\" },\n                React.createElement(Calendar, { customHeader: CalendarHeader, initialDate: dateString, markedDates: markedDates, onDayPress: (day) => {\n                        setDate(day.dateString);\n                        // If mode is just date, we can shortcut and close right away.\n                        // time and datetime need to wait for the primary button.\n                        if (mode === \"date\") {\n                            onChange({ value: day.dateString });\n                            onDismiss();\n                        }\n                    } }))));\n    };\n    const renderContent = () => {\n        if (mode === \"date\") {\n            return renderDateCalendar();\n        }\n        else if (mode === \"time\" && isMobileDevice()) {\n            return renderMobileTime();\n        }\n        else if (mode === \"time\" && !isMobileDevice()) {\n            return renderWebTime();\n        }\n        else {\n            return renderDateTime();\n        }\n    };\n    return (React.createElement(Modal, { primaryButtonOnClick: sendOnChange, primaryButtonText: \"Save\", secondaryButtonOnClick: sendClear, secondaryButtonText: \"Clear\", showClose: true, visible: visible, onDismiss: onDismiss }, renderContent()));\n};\n//# sourceMappingURL=DateTimeActionSheet.js.map"]},"metadata":{},"sourceType":"module"}