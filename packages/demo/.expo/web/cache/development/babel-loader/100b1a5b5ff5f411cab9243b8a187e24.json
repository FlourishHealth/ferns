{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { manipulateAsync, SaveFormat } from \"expo-image-manipulator\";\nimport { launchImageLibraryAsync, MediaTypeOptions } from \"expo-image-picker\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { isMobileDevice } from \"./MediaQuery\";\nimport { ThemeContext } from \"./Theme\";\nimport { Tooltip } from \"./Tooltip\";\nvar sizes = {\n  xs: 24,\n  sm: 32,\n  md: 48,\n  lg: 64,\n  xl: 120\n};\nvar sizeIconPadding = {\n  xs: 0,\n  sm: 0,\n  md: 1,\n  lg: 1,\n  xl: 2\n};\nvar statusIcons = {\n  online: {\n    icon: \"circle\",\n    color: \"green\",\n    label: \"Online\"\n  },\n  offline: {\n    icon: \"circle\",\n    color: \"gray\",\n    label: \"Offline\"\n  },\n  doNotDisturb: {\n    icon: \"minus-circle\",\n    color: \"red\",\n    label: \"Do Not Disturb\"\n  },\n  away: {\n    icon: \"moon\",\n    color: \"orange\",\n    label: \"Away\"\n  },\n  meeting: {\n    icon: \"calendar\",\n    color: \"orange\",\n    label: \"In a Meeting\"\n  },\n  vacation: {\n    icon: \"plane\",\n    color: \"orange\",\n    label: \"On Vacation\"\n  },\n  sick: {\n    icon: \"clinic-medical\",\n    color: \"orange\",\n    label: \"Sick\"\n  },\n  outOfOffice: {\n    icon: \"clock\",\n    color: \"orange\",\n    label: \"Out of Office\"\n  },\n  commuting: {\n    icon: \"car\",\n    color: \"orange\",\n    label: \"Commuting\"\n  }\n};\nexport var Avatar = function Avatar(props) {\n  var _a, _b, _c;\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isImageLoaded = _useState2[0],\n    setIsImageLoaded = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    hovered = _useState4[0],\n    setHovered = _useState4[1];\n  var _useState5 = useState((_a = props.src) !== null && _a !== void 0 ? _a : undefined),\n    _useState6 = _slicedToArray(_useState5, 2),\n    src = _useState6[0],\n    setSrc = _useState6[1];\n  var name = props.name,\n    initials = props.initials,\n    outline = props.outline,\n    _props$size = props.size,\n    size = _props$size === void 0 ? \"md\" : _props$size,\n    _props$imageFit = props.imageFit,\n    imageFit = _props$imageFit === void 0 ? \"contain\" : _props$imageFit,\n    editAvatarImage = props.editAvatarImage,\n    onChange = props.onChange,\n    _props$avatarImageWid = props.avatarImageWidth,\n    avatarImageWidth = _props$avatarImageWid === void 0 ? sizes[size] : _props$avatarImageWid,\n    avatarImageHeight = props.avatarImageHeight,\n    _props$avatarImageFor = props.avatarImageFormat,\n    avatarImageFormat = _props$avatarImageFor === void 0 ? SaveFormat.PNG : _props$avatarImageFor,\n    _props$shouldShowEdit = props.shouldShowEditIconIfNoImage,\n    shouldShowEditIconIfNoImage = _props$shouldShowEdit === void 0 ? false : _props$shouldShowEdit;\n  var width = sizes[size];\n  var height = sizes[size];\n  var radius = sizes[size] / 2;\n  var fontSize = sizes[size] / 2;\n  var computedInitials = initials !== null && initials !== void 0 ? initials : name.match(/(^\\S\\S?|\\s\\S)?/g).map(function (v) {\n    return v.trim();\n  }).join(\"\").match(/(^\\S|\\S$)?/g).join(\"\").toLocaleUpperCase();\n  useEffect(function () {\n    setSrc(props.src);\n  }, [props]);\n  if (editAvatarImage && !onChange) {\n    console.warn(\"Avatars with the editAvatarImage flag on should also have an onChange property.\");\n  }\n  var handleImageError = function handleImageError() {\n    setIsImageLoaded(false);\n    console.warn(\"Image load error\");\n  };\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield launchImageLibraryAsync({\n        mediaTypes: MediaTypeOptions.Images,\n        allowsEditing: true,\n        base64: true\n      });\n      if (!result.canceled && result.assets) {\n        var resizedImage = yield resizeImage(result.assets[0].uri);\n        setSrc(resizedImage.uri);\n        if (onChange) {\n          onChange(Object.assign({\n            avatarImageFormat: avatarImageFormat\n          }, resizedImage));\n        }\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var resizeImage = function () {\n    var _ref2 = _asyncToGenerator(function* (imageUri) {\n      return manipulateAsync(imageUri, [{\n        resize: {\n          width: avatarImageWidth,\n          height: avatarImageHeight\n        }\n      }], {\n        format: avatarImageFormat\n      });\n    });\n    return function resizeImage(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function shouldShowEditIcon() {\n    if (Platform.OS === \"web\") {\n      return shouldShowEditIconIfNoImage && !src || editAvatarImage && hovered;\n    } else {\n      return shouldShowEditIconIfNoImage && !src || editAvatarImage;\n    }\n  }\n  var renderEditIcon = function renderEditIcon() {\n    if (shouldShowEditIcon() && Platform.OS === \"web\") {\n      return React.createElement(Box, {\n        alignItems: \"center\",\n        dangerouslySetInlineStyle: {\n          __style: {\n            backgroundColor: \"rgba(255,255,255,0.8)\",\n            borderRadius: radius\n          }\n        },\n        height: height,\n        justifyContent: \"center\",\n        position: \"absolute\",\n        width: width,\n        zIndex: 5,\n        onClick: pickImage,\n        onHoverEnd: function onHoverEnd() {\n          return setHovered(false);\n        },\n        onHoverStart: function onHoverStart() {\n          return setHovered(true);\n        }\n      }, React.createElement(Icon, {\n        color: \"darkGray\",\n        name: \"edit\",\n        size: size\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        }\n      }, \"Upload Image\"));\n    } else if (shouldShowEditIcon() && Platform.OS !== \"web\") {\n      return React.createElement(Box, {\n        bottom: true,\n        left: Boolean(props.status),\n        paddingX: sizeIconPadding[size],\n        position: \"absolute\",\n        right: !Boolean(props.status),\n        zIndex: 5,\n        onClick: pickImage\n      }, React.createElement(Icon, {\n        color: \"darkGray\",\n        name: \"edit\",\n        size: size\n      }));\n    }\n    return null;\n  };\n  var renderStatusIcon = function renderStatusIcon() {\n    if (!props.status) {\n      return null;\n    }\n    var _statusIcons$props$st = statusIcons[props.status],\n      icon = _statusIcons$props$st.icon,\n      color = _statusIcons$props$st.color;\n    if (props.statusMobile && [\"online\", \"away\", \"offline\", \"doNotDisturb\"].includes(props.status)) {\n      icon = \"mobile-alt\";\n    }\n    if (!icon || !color) {\n      console.warn(`Avatar: Invalid status ${props.status}`);\n      return null;\n    }\n    return React.createElement(Box, {\n      bottom: true,\n      paddingX: sizeIconPadding[size],\n      position: \"absolute\",\n      right: true,\n      zIndex: 5\n    }, React.createElement(Icon, {\n      color: color,\n      name: icon,\n      size: size\n    }));\n  };\n  var avatar = React.createElement(Box, {\n    height: height,\n    position: \"relative\",\n    width: width\n  }, React.createElement(Box, {\n    border: outline ? \"white\" : undefined,\n    height: height,\n    overflow: \"hidden\",\n    position: \"relative\",\n    rounding: \"circle\",\n    width: width,\n    onHoverEnd: function onHoverEnd() {\n      return setHovered(false);\n    },\n    onHoverStart: function onHoverStart() {\n      return setHovered(true);\n    }\n  }, src && isImageLoaded ? React.createElement(Image, {\n    resizeMode: imageFit,\n    source: {\n      uri: src,\n      cache: \"force-cache\"\n    },\n    style: {\n      borderRadius: radius,\n      height: height,\n      width: width,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      overflow: \"hidden\"\n    },\n    onError: handleImageError\n  }) : React.createElement(View, {\n    style: {\n      height: height,\n      width: width,\n      borderRadius: radius,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: props.backgroundColor ? theme[props.backgroundColor] : theme.gray\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: fontSize,\n      color: (_b = props.textColor) !== null && _b !== void 0 ? _b : theme.darkGray\n    }\n  }, computedInitials))), renderEditIcon(), renderStatusIcon());\n  var status = props.statusText;\n  if (!status && props.status) {\n    status = (_c = statusIcons[props.status]) === null || _c === void 0 ? void 0 : _c.label;\n  }\n  if (status) {\n    return React.createElement(Box, {\n      width: width\n    }, React.createElement(Tooltip, {\n      idealDirection: \"top\",\n      text: isMobileDevice() ? undefined : status\n    }, avatar));\n  } else {\n    return avatar;\n  }\n};","map":{"version":3,"sources":["../src/Avatar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable no-console */\nimport { manipulateAsync, SaveFormat } from \"expo-image-manipulator\";\nimport { launchImageLibraryAsync, MediaTypeOptions } from \"expo-image-picker\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Image, Platform, Text, View } from \"react-native\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { isMobileDevice } from \"./MediaQuery\";\nimport { ThemeContext } from \"./Theme\";\nimport { Tooltip } from \"./Tooltip\";\nconst sizes = {\n    xs: 24,\n    sm: 32,\n    md: 48,\n    lg: 64,\n    xl: 120,\n};\nconst sizeIconPadding = {\n    xs: 0,\n    sm: 0,\n    md: 1,\n    lg: 1,\n    xl: 2,\n};\nconst statusIcons = {\n    online: { icon: \"circle\", color: \"green\", label: \"Online\" },\n    offline: { icon: \"circle\", color: \"gray\", label: \"Offline\" },\n    doNotDisturb: { icon: \"minus-circle\", color: \"red\", label: \"Do Not Disturb\" },\n    away: { icon: \"moon\", color: \"orange\", label: \"Away\" },\n    meeting: { icon: \"calendar\", color: \"orange\", label: \"In a Meeting\" },\n    vacation: { icon: \"plane\", color: \"orange\", label: \"On Vacation\" },\n    sick: { icon: \"clinic-medical\", color: \"orange\", label: \"Sick\" },\n    outOfOffice: { icon: \"clock\", color: \"orange\", label: \"Out of Office\" },\n    commuting: { icon: \"car\", color: \"orange\", label: \"Commuting\" },\n};\nexport const Avatar = (props) => {\n    var _a, _b, _c;\n    const { theme } = useContext(ThemeContext);\n    const [isImageLoaded, setIsImageLoaded] = useState(true);\n    const [hovered, setHovered] = useState(false);\n    const [src, setSrc] = useState((_a = props.src) !== null && _a !== void 0 ? _a : undefined);\n    const { name, initials, outline, size = \"md\", imageFit = \"contain\", editAvatarImage, onChange, avatarImageWidth = sizes[size], avatarImageHeight, avatarImageFormat = SaveFormat.PNG, shouldShowEditIconIfNoImage = false, } = props;\n    const width = sizes[size];\n    const height = sizes[size];\n    const radius = sizes[size] / 2;\n    const fontSize = sizes[size] / 2;\n    const computedInitials = initials !== null && initials !== void 0 ? initials : name.match(/(^\\S\\S?|\\s\\S)?/g)\n        .map((v) => v.trim())\n        .join(\"\")\n        .match(/(^\\S|\\S$)?/g)\n        .join(\"\")\n        .toLocaleUpperCase();\n    // If the src changes, update the image.\n    useEffect(() => {\n        setSrc(props.src);\n    }, [props]);\n    if (editAvatarImage && !onChange) {\n        console.warn(\"Avatars with the editAvatarImage flag on should also have an onChange property.\");\n    }\n    const handleImageError = () => {\n        setIsImageLoaded(false);\n        console.warn(\"Image load error\");\n    };\n    const pickImage = async () => {\n        // TODO: Add permission request to use camera to take a picture\n        const result = await launchImageLibraryAsync({\n            mediaTypes: MediaTypeOptions.Images,\n            allowsEditing: true,\n            base64: true,\n        });\n        if (!result.canceled && result.assets) {\n            const resizedImage = await resizeImage(result.assets[0].uri);\n            setSrc(resizedImage.uri);\n            if (onChange) {\n                onChange(Object.assign({ avatarImageFormat }, resizedImage));\n            }\n        }\n    };\n    const resizeImage = async (imageUri) => {\n        return manipulateAsync(imageUri, [{ resize: { width: avatarImageWidth, height: avatarImageHeight } }], { format: avatarImageFormat });\n    };\n    function shouldShowEditIcon() {\n        if (Platform.OS === \"web\") {\n            return (shouldShowEditIconIfNoImage && !src) || (editAvatarImage && hovered);\n        }\n        else {\n            return (shouldShowEditIconIfNoImage && !src) || editAvatarImage;\n        }\n    }\n    const renderEditIcon = () => {\n        if (shouldShowEditIcon() && Platform.OS === \"web\") {\n            return (React.createElement(Box, { alignItems: \"center\", dangerouslySetInlineStyle: {\n                    __style: { backgroundColor: \"rgba(255,255,255,0.8)\", borderRadius: radius },\n                }, height: height, justifyContent: \"center\", position: \"absolute\", width: width, zIndex: 5, onClick: pickImage, onHoverEnd: () => setHovered(false), onHoverStart: () => setHovered(true) },\n                React.createElement(Icon, { color: \"darkGray\", name: \"edit\", size: size }),\n                React.createElement(Text, { style: { fontWeight: \"bold\" } }, \"Upload Image\")));\n        }\n        else if (shouldShowEditIcon() && Platform.OS !== \"web\") {\n            return (React.createElement(Box, { bottom: true, left: Boolean(props.status), paddingX: sizeIconPadding[size], position: \"absolute\", right: !Boolean(props.status), zIndex: 5, onClick: pickImage },\n                React.createElement(Icon, { color: \"darkGray\", name: \"edit\", size: size })));\n        }\n        return null;\n    };\n    const renderStatusIcon = () => {\n        if (!props.status) {\n            return null;\n        }\n        // eslint-disable-next-line prefer-const\n        let { icon, color } = statusIcons[props.status];\n        if (props.statusMobile &&\n            [\"online\", \"away\", \"offline\", \"doNotDisturb\"].includes(props.status)) {\n            icon = \"mobile-alt\";\n        }\n        if (!icon || !color) {\n            console.warn(`Avatar: Invalid status ${props.status}`);\n            return null;\n        }\n        return (React.createElement(Box, { bottom: true, paddingX: sizeIconPadding[size], position: \"absolute\", right: true, zIndex: 5 },\n            React.createElement(Icon, { color: color, name: icon, size: size })));\n    };\n    const avatar = (React.createElement(Box, { height: height, position: \"relative\", width: width },\n        React.createElement(Box, { border: outline ? \"white\" : undefined, height: height, overflow: \"hidden\", position: \"relative\", rounding: \"circle\", width: width, onHoverEnd: () => setHovered(false), onHoverStart: () => setHovered(true) }, src && isImageLoaded ? (\n        // TODO: Make our Image component rounding work so that we can use it for Avatar.\n        // Currently it creates an unrounded box around the Image.\n        React.createElement(Image, { resizeMode: imageFit, source: { uri: src, cache: \"force-cache\" }, style: {\n                borderRadius: radius,\n                height,\n                width,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                overflow: \"hidden\",\n            }, onError: handleImageError })) : (React.createElement(View, { style: {\n                height,\n                width,\n                borderRadius: radius,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: props.backgroundColor ? theme[props.backgroundColor] : theme.gray,\n            } },\n            React.createElement(Text, { style: { fontSize, color: (_b = props.textColor) !== null && _b !== void 0 ? _b : theme.darkGray } }, computedInitials)))),\n        renderEditIcon(),\n        renderStatusIcon()));\n    let status = props.statusText;\n    if (!status && props.status) {\n        status = (_c = statusIcons[props.status]) === null || _c === void 0 ? void 0 : _c.label;\n    }\n    if (status) {\n        // Need to wrap the tooltip so it doesn't expand to 100% width and render the tooltip off.\n        // Don't show the tooltips on mobile because they intercept the edit avatar clicks.\n        return (React.createElement(Box, { width: width },\n            React.createElement(Tooltip, { idealDirection: \"top\", text: isMobileDevice() ? undefined : status }, avatar)));\n    }\n    else {\n        return avatar;\n    }\n};\n//# sourceMappingURL=Avatar.js.map"]},"metadata":{},"sourceType":"module"}