{"ast":null,"code":"import isArray from \"lodash/isArray\";\nimport React from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport DateTimePickerWeb from \"react-datetime-picker\";\nimport TimePicker from \"react-time-picker\";\nimport { Box } from \"./Box\";\nimport { WithLabel } from \"./WithLabel\";\nexport var DateTimeField = function DateTimeField(_ref) {\n  var mode = _ref.mode,\n    value = _ref.value,\n    _onChange = _ref.onChange,\n    errorMessage = _ref.errorMessage,\n    errorMessageColor = _ref.errorMessageColor;\n  return React.createElement(WithLabel, {\n    label: errorMessage,\n    labelColor: errorMessageColor || \"red\",\n    labelPlacement: \"after\",\n    labelSize: \"sm\"\n  }, React.createElement(Box, {\n    flex: \"grow\",\n    maxWidth: 300,\n    zIndex: \"auto\"\n  }, mode === \"datetime\" && (React.createElement(DateTimePickerWeb, {\n    disableClock: true,\n    value: value,\n    onChange: function onChange(newVal) {\n      if (isArray(newVal) || !newVal) {\n        console.warn(\"DateTimePicker returned an array\", newVal);\n        return;\n      }\n      _onChange(newVal);\n    }\n  })), mode === \"date\" && (React.createElement(DatePicker, {\n    value: value,\n    onChange: function onChange(newVal) {\n      if (isArray(newVal) || !newVal) {\n        console.warn(\"DatePicker returned an array\", newVal);\n        return;\n      }\n      _onChange(newVal);\n    }\n  })), mode === \"time\" && (React.createElement(TimePicker, {\n    disableClock: true,\n    value: value,\n    onChange: function onChange(newVal) {\n      if (isArray(newVal) || !newVal) {\n        console.warn(\"TimePicker returned an array\", newVal);\n        return;\n      }\n      var newDate = new Date(newVal);\n      _onChange(newDate);\n    }\n  }))));\n};","map":{"version":3,"sources":["../src/DateTimeField.tsx"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,gBAAgB;AACpC,OAAO,KAAqB,MAAM,OAAO;AACzC,OAAO,UAAU,MAAM,mBAAmB;AAC1C,OAAO,iBAAiB,MAAM,uBAAuB;AACrD,OAAO,UAAU,MAAM,mBAAmB;AAE1C,SAAQ,GAAG,QAAO,OAAO;AAEzB,SAAQ,SAAS,QAAO,aAAa;AAErC,OAAO,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAA,IAAA,EAM2B;EAAA,IALnD,IAAI,GAAA,IAAA,CAAJ,IAAI;IACJ,KAAK,GAAA,IAAA,CAAL,KAAK;IACL,SAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,YAAY,GAAA,IAAA,CAAZ,YAAY;IACZ,iBAAiB,GAAA,IAAA,CAAjB,iBAAiB;EAEjB,OACE,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA;IACR,KAAK,EAAE,YAAY;IACnB,UAAU,EAAE,iBAAiB,IAAI,KAAK;IACtC,cAAc,EAAC,OAAO;IACtB,SAAS,EAAC;EAAI,CAAA,EAEd,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,IAAI,EAAC,MAAM;IAAC,QAAQ,EAAE,GAAG;IAAE,MAAM,EAAC;EAAM,CAAA,EAC1C,IAAI,KAAK,UAAU,KAClB,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA;IAChB,YAAY,EAAA,IAAA;IACZ,KAAK,EAAE,KAAK;IACZ,QAAQ,EAAE,SAAA,SAAC,MAAM,EAAI;MACnB,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;QAC9B,OAAO,CAAC,IAAI,CAAC,kCAAkC,EAAE,MAAM,CAAC;QACxD;MACF;MACA,SAAQ,CAAC,MAAM,CAAC;IAClB;EAAC,CAAA,CACD,CACH,EACA,IAAI,KAAK,MAAM,KACd,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,KAAK,EAAE,KAAK;IACZ,QAAQ,EAAE,SAAA,SAAC,MAAM,EAAI;MACnB,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;QAC9B,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE,MAAM,CAAC;QACpD;MACF;MACA,SAAQ,CAAC,MAAM,CAAC;IAClB;EAAC,CAAA,CACD,CACH,EACA,IAAI,KAAK,MAAM,KACd,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,YAAY,EAAA,IAAA;IACZ,KAAK,EAAE,KAAK;IACZ,QAAQ,EAAE,SAAA,SAAC,MAAM,EAAI;MACnB,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;QAC9B,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE,MAAM,CAAC;QACpD;MACF;MAEA,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC;MAChC,SAAQ,CAAC,OAAO,CAAC;IACnB;EAAC,CAAA,CACD,CACH,CACG,CACI;AAEhB,CAAC","sourceRoot":"","sourcesContent":["import isArray from \"lodash/isArray\";\nimport React from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport DateTimePickerWeb from \"react-datetime-picker\";\nimport TimePicker from \"react-time-picker\";\nimport { Box } from \"./Box\";\nimport { WithLabel } from \"./WithLabel\";\nexport const DateTimeField = ({ mode, value, onChange, errorMessage, errorMessageColor, }) => {\n    return (React.createElement(WithLabel, { label: errorMessage, labelColor: errorMessageColor || \"red\", labelPlacement: \"after\", labelSize: \"sm\" },\n        React.createElement(Box, { flex: \"grow\", maxWidth: 300, zIndex: \"auto\" },\n            mode === \"datetime\" && (React.createElement(DateTimePickerWeb, { disableClock: true, value: value, onChange: (newVal) => {\n                    if (isArray(newVal) || !newVal) {\n                        console.warn(\"DateTimePicker returned an array\", newVal);\n                        return;\n                    }\n                    onChange(newVal);\n                } })),\n            mode === \"date\" && (React.createElement(DatePicker, { value: value, onChange: (newVal) => {\n                    if (isArray(newVal) || !newVal) {\n                        console.warn(\"DatePicker returned an array\", newVal);\n                        return;\n                    }\n                    onChange(newVal);\n                } })),\n            mode === \"time\" && (React.createElement(TimePicker, { disableClock: true, value: value, onChange: (newVal) => {\n                    if (isArray(newVal) || !newVal) {\n                        console.warn(\"TimePicker returned an array\", newVal);\n                        return;\n                    }\n                    // TimePicker returns a string or Date, so we need to make sure it's a Date\n                    const newDate = new Date(newVal);\n                    onChange(newDate);\n                } })))));\n};\n//# sourceMappingURL=DateTimeField.js.map"]},"metadata":{},"sourceType":"module"}