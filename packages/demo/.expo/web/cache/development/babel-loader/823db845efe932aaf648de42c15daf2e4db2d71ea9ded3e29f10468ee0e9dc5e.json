{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"useLegacyImplementation\", \"layout\", \"drawerType\", \"drawerPosition\", \"drawerStyle\", \"swipeEnabled\", \"swipeEdgeWidth\", \"swipeMinDistance\", \"swipeMinVelocity\", \"keyboardDismissMode\", \"hideStatusBarOnOpen\", \"statusBarAnimation\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport * as Reanimated from 'react-native-reanimated';\nimport { SWIPE_MIN_DISTANCE, SWIPE_MIN_VELOCITY } from '../constants';\nimport { GestureHandlerRootView } from './GestureHandler';\nvar getDefaultDrawerWidth = function getDefaultDrawerWidth(_ref) {\n  var height = _ref.height,\n    width = _ref.width;\n  var smallerAxisSize = Math.min(height, width);\n  var isLandscape = width > height;\n  var isTablet = smallerAxisSize >= 600;\n  var appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n  var maxWidth = isTablet ? 320 : 280;\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\nexport function Drawer(_ref2) {\n  var _Reanimated$isConfigu;\n  var _ref2$useLegacyImplem = _ref2.useLegacyImplementation,\n    useLegacyImplementation = _ref2$useLegacyImplem === void 0 ? !((_Reanimated$isConfigu = Reanimated.isConfigured) !== null && _Reanimated$isConfigu !== void 0 && _Reanimated$isConfigu.call(Reanimated)) : _ref2$useLegacyImplem,\n    customLayout = _ref2.layout,\n    _ref2$drawerType = _ref2.drawerType,\n    drawerType = _ref2$drawerType === void 0 ? Platform.select({\n      ios: 'slide',\n      default: 'front'\n    }) : _ref2$drawerType,\n    _ref2$drawerPosition = _ref2.drawerPosition,\n    drawerPosition = _ref2$drawerPosition === void 0 ? I18nManager.getConstants().isRTL ? 'right' : 'left' : _ref2$drawerPosition,\n    drawerStyle = _ref2.drawerStyle,\n    _ref2$swipeEnabled = _ref2.swipeEnabled,\n    swipeEnabled = _ref2$swipeEnabled === void 0 ? Platform.OS !== 'web' && Platform.OS !== 'windows' && Platform.OS !== 'macos' : _ref2$swipeEnabled,\n    _ref2$swipeEdgeWidth = _ref2.swipeEdgeWidth,\n    swipeEdgeWidth = _ref2$swipeEdgeWidth === void 0 ? 32 : _ref2$swipeEdgeWidth,\n    _ref2$swipeMinDistanc = _ref2.swipeMinDistance,\n    swipeMinDistance = _ref2$swipeMinDistanc === void 0 ? SWIPE_MIN_DISTANCE : _ref2$swipeMinDistanc,\n    _ref2$swipeMinVelocit = _ref2.swipeMinVelocity,\n    swipeMinVelocity = _ref2$swipeMinVelocit === void 0 ? SWIPE_MIN_VELOCITY : _ref2$swipeMinVelocit,\n    _ref2$keyboardDismiss = _ref2.keyboardDismissMode,\n    keyboardDismissMode = _ref2$keyboardDismiss === void 0 ? 'on-drag' : _ref2$keyboardDismiss,\n    _ref2$hideStatusBarOn = _ref2.hideStatusBarOnOpen,\n    hideStatusBarOnOpen = _ref2$hideStatusBarOn === void 0 ? false : _ref2$hideStatusBarOn,\n    _ref2$statusBarAnimat = _ref2.statusBarAnimation,\n    statusBarAnimation = _ref2$statusBarAnimat === void 0 ? 'slide' : _ref2$statusBarAnimat,\n    style = _ref2.style,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var legacyImplemenationNotAvailable = require('react-native-reanimated').abs === undefined;\n  if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n    throw new Error('The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.');\n  }\n  var Drawer = useLegacyImplementation ? require('./legacy/Drawer').Drawer : require('./modern/Drawer').Drawer;\n  var windowDimensions = useWindowDimensions();\n  var layout = customLayout != null ? customLayout : windowDimensions;\n  return React.createElement(GestureHandlerRootView, {\n    style: [styles.container, style]\n  }, React.createElement(Drawer, _extends({}, rest, {\n    layout: layout,\n    drawerType: drawerType,\n    drawerPosition: drawerPosition,\n    drawerStyle: [{\n      width: getDefaultDrawerWidth(layout)\n    }, styles.drawer, drawerStyle],\n    swipeEnabled: swipeEnabled,\n    swipeEdgeWidth: swipeEdgeWidth,\n    swipeMinDistance: swipeMinDistance,\n    swipeMinVelocity: swipeMinVelocity,\n    keyboardDismissMode: keyboardDismissMode,\n    hideStatusBarOnOpen: hideStatusBarOnOpen,\n    statusBarAnimation: statusBarAnimation\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawer: {\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"names":["React","I18nManager","Platform","StyleSheet","useWindowDimensions","Reanimated","SWIPE_MIN_DISTANCE","SWIPE_MIN_VELOCITY","GestureHandlerRootView","getDefaultDrawerWidth","_ref","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","OS","maxWidth","Drawer","_ref2","_Reanimated$isConfigu","_ref2$useLegacyImplem","useLegacyImplementation","isConfigured","call","customLayout","layout","_ref2$drawerType","drawerType","select","ios","default","_ref2$drawerPosition","drawerPosition","getConstants","isRTL","drawerStyle","_ref2$swipeEnabled","swipeEnabled","_ref2$swipeEdgeWidth","swipeEdgeWidth","_ref2$swipeMinDistanc","swipeMinDistance","_ref2$swipeMinVelocit","swipeMinVelocity","_ref2$keyboardDismiss","keyboardDismissMode","_ref2$hideStatusBarOn","hideStatusBarOnOpen","_ref2$statusBarAnimat","statusBarAnimation","style","rest","_objectWithoutProperties","_excluded","legacyImplemenationNotAvailable","require","abs","undefined","Error","windowDimensions","createElement","styles","container","_extends","drawer","create","flex","backgroundColor"],"sources":["/Users/josh/src/ui/node_modules/react-native-drawer-layout/src/views/Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  useWindowDimensions,\n  ViewStyle,\n} from 'react-native';\nimport * as Reanimated from 'react-native-reanimated';\n\nimport { SWIPE_MIN_DISTANCE, SWIPE_MIN_VELOCITY } from '../constants';\nimport type { DrawerProps } from '../types';\nimport { GestureHandlerRootView } from './GestureHandler';\n\ntype Props = DrawerProps & {\n  /**\n   * Whether to use the legacy implementation of the drawer.\n   * The legacy implementation uses v1 of Reanimated.\n   * The modern implementation uses v2 of Reanimated.\n   *\n   * By default, the appropriate implementation is used based on whether Reanimated v2 is configured.\n   */\n  useLegacyImplementation?: boolean;\n\n  /**\n   * Style object for the wrapper view.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nconst getDefaultDrawerWidth = ({\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n}) => {\n  /*\n   * Default drawer width is screen width - header height\n   * with a max width of 280 on mobile and 320 on tablet\n   * https://material.io/components/navigation-drawer\n   */\n  const smallerAxisSize = Math.min(height, width);\n  const isLandscape = width > height;\n  const isTablet = smallerAxisSize >= 600;\n  const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n  const maxWidth = isTablet ? 320 : 280;\n\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\n\nexport function Drawer({\n  // Reanimated 2 is not configured\n  // @ts-expect-error: the type definitions are incomplete\n  useLegacyImplementation = !Reanimated.isConfigured?.(),\n  layout: customLayout,\n  drawerType = Platform.select({ ios: 'slide', default: 'front' }),\n  drawerPosition = I18nManager.getConstants().isRTL ? 'right' : 'left',\n  drawerStyle,\n  swipeEnabled = Platform.OS !== 'web' &&\n    Platform.OS !== 'windows' &&\n    Platform.OS !== 'macos',\n  swipeEdgeWidth = 32,\n  swipeMinDistance = SWIPE_MIN_DISTANCE,\n  swipeMinVelocity = SWIPE_MIN_VELOCITY,\n  keyboardDismissMode = 'on-drag',\n  hideStatusBarOnOpen = false,\n  statusBarAnimation = 'slide',\n  style,\n  ...rest\n}: Props) {\n  // Reanimated v3 dropped legacy v1 API\n  const legacyImplemenationNotAvailable =\n    require('react-native-reanimated').abs === undefined;\n\n  if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n    throw new Error(\n      'The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.'\n    );\n  }\n\n  const Drawer: typeof import('./modern/Drawer').Drawer =\n    useLegacyImplementation\n      ? require('./legacy/Drawer').Drawer\n      : require('./modern/Drawer').Drawer;\n\n  const windowDimensions = useWindowDimensions();\n  const layout = customLayout ?? windowDimensions;\n\n  return (\n    <GestureHandlerRootView style={[styles.container, style]}>\n      <Drawer\n        {...rest}\n        layout={layout}\n        drawerType={drawerType}\n        drawerPosition={drawerPosition}\n        drawerStyle={[\n          { width: getDefaultDrawerWidth(layout) },\n          styles.drawer,\n          drawerStyle,\n        ]}\n        swipeEnabled={swipeEnabled}\n        swipeEdgeWidth={swipeEdgeWidth}\n        swipeMinDistance={swipeMinDistance}\n        swipeMinVelocity={swipeMinVelocity}\n        keyboardDismissMode={keyboardDismissMode}\n        hideStatusBarOnOpen={hideStatusBarOnOpen}\n        statusBarAnimation={statusBarAnimation}\n      />\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  drawer: {\n    backgroundColor: 'white',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}