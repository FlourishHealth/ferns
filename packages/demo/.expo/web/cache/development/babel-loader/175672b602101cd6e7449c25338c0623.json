{"ast":null,"code":"'use strict';\n\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createAnimatedComponent } from '../../createAnimatedComponent';\nexport var AnimatedImage = createAnimatedComponent(Image);","map":{"version":3,"sources":["Image.ts"],"names":["createAnimatedComponent","AnimatedImage","Image"],"mappings":"AAAA,YAAY;;AAAA,OAAA,KAAA;AAEZ,SAASA,uBAAuB,QAAQ,+BAA+B;AAQvE,OAAO,IAAMC,aAAa,GAAGD,uBAAuB,CAACE,KAAK,CAAC","sourcesContent":["'use strict';\nimport { Image } from 'react-native';\nimport { createAnimatedComponent } from '../../createAnimatedComponent';\n\n// Since createAnimatedComponent return type is ComponentClass that has the props of the argument,\n// but not things like NativeMethods, etc. we need to add them manually by extending the type.\ninterface AnimatedImageComplement extends Image {\n  getNode(): Image;\n}\n\nexport const AnimatedImage = createAnimatedComponent(Image);\n\nexport type AnimatedImage = typeof AnimatedImage & AnimatedImageComplement;\n"]},"metadata":{},"sourceType":"module"}