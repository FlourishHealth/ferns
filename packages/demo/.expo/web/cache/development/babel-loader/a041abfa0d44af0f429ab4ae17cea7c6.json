{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../reanimated2/ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../reanimated2/UpdateProps';\nimport { stopMapper, startMapper } from '../reanimated2/mappers';\nimport { isSharedValue } from '../reanimated2/isSharedValue';\nimport { shouldBeUseWeb } from '../reanimated2/PlatformChecker';\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nfunction isInlineStyleTransform(transform) {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n  return false;\n}\nvar _worklet_9755239701942_init_data = {\n  code: \"function getInlinePropsUpdate(inlineProps){const getInlinePropsUpdate=this._recur;const{isSharedValue}=this.__closure;const update={};for(const[key,styleValue]of Object.entries(inlineProps)){if(isSharedValue(styleValue)){update[key]=styleValue.value;}else if(Array.isArray(styleValue)){update[key]=styleValue.map(function(item){return getInlinePropsUpdate(item);});}else if(typeof styleValue==='object'){update[key]=getInlinePropsUpdate(styleValue);}else{update[key]=styleValue;}}return update;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getInlinePropsUpdate\\\",\\\"inlineProps\\\",\\\"_recur\\\",\\\"isSharedValue\\\",\\\"__closure\\\",\\\"update\\\",\\\"key\\\",\\\"styleValue\\\",\\\"Object\\\",\\\"entries\\\",\\\"value\\\",\\\"Array\\\",\\\"isArray\\\",\\\"map\\\",\\\"item\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\\\"],\\\"mappings\\\":\\\"AA4BA,SAAAA,oBAASA,CAAqBC,WAAA,CAAW,OAAAD,oBAAA,MAAAE,MAAA,OAAAC,aAAA,OAAAC,SAAA,CAGvC,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CACjB,IAAK,KAAM,CAACC,GAAG,CAAEC,UAAU,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,CAAE,CAC3D,GAAIE,aAAa,CAACI,UAAU,CAAC,CAAE,CAC7BF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACG,KAAK,CAChC,CAAC,IAAM,IAAIC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,CAAE,CACpCF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACM,GAAG,CAAC,SAAAC,IAAI,CAAI,CACnC,MAAO,CAAAd,oBAAoB,CAACc,IAAI,CAAC,CACnC,CAAC,CAAC,CACJ,CAAC,IAAM,IAAI,MAAO,CAAAP,UAAU,GAAK,QAAQ,CAAE,CACzCF,MAAM,CAACC,GAAG,CAAC,CAAGN,oBAAoB,CAACO,UAAU,CAAC,CAChD,CAAC,IAAM,CACLF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAC1B,CACF,CACA,MAAO,CAAAF,MAAM,CACf\\\"}\",\n  version: \"3.6.3\"\n};\nvar getInlinePropsUpdate = function () {\n  var _e = [new global.Error(), -2, -27];\n  var getInlinePropsUpdate = function getInlinePropsUpdate(inlineProps) {\n    var update = {};\n    for (var _ref of Object.entries(inlineProps)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n      var key = _ref2[0];\n      var styleValue = _ref2[1];\n      if (isSharedValue(styleValue)) {\n        update[key] = styleValue.value;\n      } else if (Array.isArray(styleValue)) {\n        update[key] = styleValue.map(function (item) {\n          return getInlinePropsUpdate(item);\n        });\n      } else if (typeof styleValue === 'object') {\n        update[key] = getInlinePropsUpdate(styleValue);\n      } else {\n        update[key] = styleValue;\n      }\n    }\n    return update;\n  };\n  getInlinePropsUpdate.__closure = {\n    isSharedValue: isSharedValue\n  };\n  getInlinePropsUpdate.__workletHash = 9755239701942;\n  getInlinePropsUpdate.__initData = _worklet_9755239701942_init_data;\n  getInlinePropsUpdate.__stackDetails = _e;\n  return getInlinePropsUpdate;\n}();\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref3 of Object.entries(style)) {\n          var _ref4 = _slicedToArray(_ref3, 2);\n          var _key = _ref4[0];\n          var styleValue = _ref4[1];\n          if (isSharedValue(styleValue)) {\n            inlineProps[_key] = styleValue;\n          } else if (_key === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nexport function hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nexport function getInlineStyle(style, isFirstRender) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  var newStyle = {};\n  for (var _ref5 of Object.entries(style)) {\n    var _ref6 = _slicedToArray(_ref5, 2);\n    var key = _ref6[0];\n    var styleValue = _ref6[1];\n    if (!isSharedValue(styleValue) && !(key === 'transform' && isInlineStyleTransform(styleValue))) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\nvar _worklet_11406519397301_init_data = {\n  code: \"function anonymous(){const{getInlinePropsUpdate,newInlineProps,updateProps,shareableViewDescriptors,maybeViewRef}=this.__closure;const update=getInlinePropsUpdate(newInlineProps);updateProps(shareableViewDescriptors,update,maybeViewRef);}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"getInlinePropsUpdate\\\",\\\"newInlineProps\\\",\\\"updateProps\\\",\\\"shareableViewDescriptors\\\",\\\"maybeViewRef\\\",\\\"__closure\\\",\\\"update\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\\\"],\\\"mappings\\\":\\\"AA+H8B,SAAAA,SAAMA,CAAA,QAAAC,oBAAA,CAAAC,cAAA,CAAAC,WAAA,CAAAC,wBAAA,CAAAC,YAAA,OAAAC,SAAA,CAG5B,KAAM,CAAAC,MAAM,CAAGN,oBAAoB,CAACC,cAAc,CAAC,CACnDC,WAAW,CAACC,wBAAwB,CAAEG,MAAM,CAAEF,YAAY,CAAC,CAC7D\\\"}\",\n  version: \"3.6.3\"\n};\nexport var InlinePropManager = function () {\n  function InlinePropManager() {\n    _classCallCheck(this, InlinePropManager);\n    _defineProperty(this, \"_inlinePropsViewDescriptors\", null);\n    _defineProperty(this, \"_inlinePropsMapperId\", null);\n    _defineProperty(this, \"_inlineProps\", {});\n  }\n  _createClass(InlinePropManager, [{\n    key: \"attachInlineProps\",\n    value: function attachInlineProps(animatedComponent, viewInfo) {\n      var newInlineProps = extractSharedValuesMapFromProps(animatedComponent.props);\n      var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n          var viewTag = viewInfo.viewTag,\n            viewName = viewInfo.viewName,\n            shadowNodeWrapper = viewInfo.shadowNodeWrapper,\n            viewConfig = viewInfo.viewConfig;\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n          this._inlinePropsViewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n        var shareableViewDescriptors = this._inlinePropsViewDescriptors.shareableViewDescriptors;\n        var maybeViewRef = SHOULD_BE_USE_WEB ? {\n          items: new Set([animatedComponent])\n        } : undefined;\n        var updaterFunction = function () {\n          var _e = [new global.Error(), -6, -27];\n          var anonymous = function anonymous() {\n            var update = getInlinePropsUpdate(newInlineProps);\n            updateProps(shareableViewDescriptors, update, maybeViewRef);\n          };\n          anonymous.__closure = {\n            getInlinePropsUpdate: getInlinePropsUpdate,\n            newInlineProps: newInlineProps,\n            updateProps: updateProps,\n            shareableViewDescriptors: shareableViewDescriptors,\n            maybeViewRef: maybeViewRef\n          };\n          anonymous.__workletHash = 11406519397301;\n          anonymous.__initData = _worklet_11406519397301_init_data;\n          anonymous.__stackDetails = _e;\n          return anonymous;\n        }();\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n        }\n      }\n    }\n  }, {\n    key: \"detachInlineProps\",\n    value: function detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n  }]);\n  return InlinePropManager;\n}();","map":{"version":3,"sources":["InlinePropManager.ts"],"names":["flattenArray","makeViewDescriptorsSet","adaptViewConfig","updateProps","stopMapper","startMapper","isSharedValue","shouldBeUseWeb","SHOULD_BE_USE_WEB","isInlineStyleTransform","transform","Array","isArray","some","t","hasInlineStyles","inlinePropsHasChanged","styles1","styles2","Object","keys","length","key","getInlinePropsUpdate","inlineProps","update","styleValue","entries","value","map","item","extractSharedValuesMapFromProps","props","styles","style","forEach","getInlineStyle","isFirstRender","newStyle","InlinePropManager","constructor","_defineProperty","attachInlineProps","animatedComponent","viewInfo","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","viewTag","viewName","shadowNodeWrapper","viewConfig","add","tag","name","shareableViewDescriptors","maybeViewRef","items","Set","undefined","updaterFunction","_inlinePropsMapperId","values","detachInlineProps"],"mappings":"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","sourcesContent":["'use strict';\nimport type { StyleProps } from '../reanimated2';\nimport type {\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  IInlinePropManager,\n  ViewInfo,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../reanimated2/ViewDescriptorsSet';\nimport type {\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from '../reanimated2/ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../reanimated2/UpdateProps';\nimport { stopMapper, startMapper } from '../reanimated2/mappers';\nimport { isSharedValue } from '../reanimated2/isSharedValue';\nimport { shouldBeUseWeb } from '../reanimated2/PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nfunction isInlineStyleTransform(transform: unknown): boolean {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n\n  return transform.some((t: Record<string, unknown>) => hasInlineStyles(t));\n}\n\nfunction inlinePropsHasChanged(\n  styles1: StyleProps,\n  styles2: StyleProps\n): boolean {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, unknown>) {\n  'worklet';\n  const update: Record<string, unknown> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else if (Array.isArray(styleValue)) {\n      update[key] = styleValue.map((item) => {\n        return getInlinePropsUpdate(item);\n      });\n    } else if (typeof styleValue === 'object') {\n      update[key] = getInlinePropsUpdate(styleValue as Record<string, unknown>);\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<\n    Record<string, unknown> /* Initial component props */\n  >\n): Record<string, unknown> {\n  const inlineProps: Record<string, unknown> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nexport function hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nexport function getInlineStyle(\n  style: Record<string, unknown>,\n  isFirstRender: boolean\n) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  const newStyle: StyleProps = {};\n  for (const [key, styleValue] of Object.entries(style)) {\n    if (\n      !isSharedValue(styleValue) &&\n      !(key === 'transform' && isInlineStyleTransform(styleValue))\n    ) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\n\nexport class InlinePropManager implements IInlinePropManager {\n  _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n  _inlinePropsMapperId: number | null = null;\n  _inlineProps: StyleProps = {};\n\n  public attachInlineProps(\n    animatedComponent: React.Component<unknown, unknown> &\n      IAnimatedComponentInternal,\n    viewInfo: ViewInfo\n  ) {\n    const newInlineProps: Record<string, unknown> =\n      extractSharedValuesMapFromProps(animatedComponent.props);\n    const hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n\n    if (hasChanged) {\n      if (!this._inlinePropsViewDescriptors) {\n        this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n        const { viewTag, viewName, shadowNodeWrapper, viewConfig } = viewInfo;\n\n        if (Object.keys(newInlineProps).length && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n\n        this._inlinePropsViewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag as number,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n      const shareableViewDescriptors =\n        this._inlinePropsViewDescriptors.shareableViewDescriptors;\n\n      const maybeViewRef = SHOULD_BE_USE_WEB\n        ? ({ items: new Set([animatedComponent]) } as ViewRefSet<unknown>) // see makeViewsRefSet\n        : undefined;\n      const updaterFunction = () => {\n        'worklet';\n        const update = getInlinePropsUpdate(newInlineProps);\n        updateProps(shareableViewDescriptors, update, maybeViewRef);\n      };\n      this._inlineProps = newInlineProps;\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n      this._inlinePropsMapperId = null;\n      if (Object.keys(newInlineProps).length) {\n        this._inlinePropsMapperId = startMapper(\n          updaterFunction,\n          Object.values(newInlineProps)\n        );\n      }\n    }\n  }\n\n  public detachInlineProps() {\n    if (this._inlinePropsMapperId) {\n      stopMapper(this._inlinePropsMapperId);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}