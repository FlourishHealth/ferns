{"ast":null,"code":"'use strict';\n\nimport { addWhitelistedNativeProps } from '../ConfigHelper';\nexport var createAnimatedPropAdapter = function createAnimatedPropAdapter(adapter, nativeProps) {\n  var nativePropsToAdd = {};\n  nativeProps === null || nativeProps === void 0 ? void 0 : nativeProps.forEach(function (prop) {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n};","map":{"version":3,"sources":["PropAdapters.ts"],"names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop"],"mappings":"AAAA,YAAY;;AACZ,SAASA,yBAAyB,QAAQ,iBAAiB;AAU3D,OAAO,IAAMC,yBAAyB,GAAIA,SAA7BA,yBAAyB,CACpCC,OAAiC,EACjCC,WAAsB,EACO;EAC7B,IAAMC,gBAA4C,GAAG,CAAC,CAAC;EAEvDD,WAAW,KAAA,IAAA,IAAXA,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAXA,WAAW,CAAEE,OAAO,CAAEC,UAAAA,IAAI,EAAK;IAC7BF,gBAAgB,CAACE,IAAI,CAAC,GAAG,IAAI;EAC/B,CAAC,CAAC;EACFN,yBAAyB,CAACI,gBAAgB,CAAC;EAC3C,OAAOF,OAAO;AAChB,CAAmC","sourcesContent":["'use strict';\nimport { addWhitelistedNativeProps } from '../ConfigHelper';\nimport type { __AdapterWorkletFunction } from './commonTypes';\nimport type { AnimatedPropsAdapterFunction } from './helperTypes';\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype createAnimatedPropAdapterType = (\n  adapter: AnimatedPropsAdapterFunction,\n  nativeProps?: string[]\n) => AnimatedPropsAdapterFunction;\n\nexport const createAnimatedPropAdapter = ((\n  adapter: __AdapterWorkletFunction,\n  nativeProps?: string[]\n): __AdapterWorkletFunction => {\n  const nativePropsToAdd: { [key: string]: boolean } = {};\n  // eslint-disable-next-line no-unused-expressions\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}) as createAnimatedPropAdapterType;\n"]},"metadata":{},"sourceType":"module"}