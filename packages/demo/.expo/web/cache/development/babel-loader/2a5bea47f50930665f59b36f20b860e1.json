{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nvar Dummy = function Dummy(_ref) {\n  var children = _ref.children;\n  return React.createElement(React.Fragment, null, children);\n};\nexport var PanGestureHandler = Dummy;\nexport var TapGestureHandler = Dummy;\nexport var GestureHandlerRootView = View;\nexport var GestureState;\n(function (GestureState) {\n  GestureState[GestureState[\"UNDETERMINED\"] = 0] = \"UNDETERMINED\";\n  GestureState[GestureState[\"FAILED\"] = 1] = \"FAILED\";\n  GestureState[GestureState[\"BEGAN\"] = 2] = \"BEGAN\";\n  GestureState[GestureState[\"CANCELLED\"] = 3] = \"CANCELLED\";\n  GestureState[GestureState[\"ACTIVE\"] = 4] = \"ACTIVE\";\n  GestureState[GestureState[\"END\"] = 5] = \"END\";\n})(GestureState || (GestureState = {}));","map":{"version":3,"sources":["views/GestureHandler.tsx"],"names":["React","Dummy","children","PanGestureHandler","TapGestureHandler","GestureHandlerRootView","View","GestureState"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,IAAA;AAO9B,IAAMC,KAAU,GAAG,SAAbA,KAAU,CAAG,IAAA,EAAA;EAAA,IAAGC,QAAAA,GAAyC,IAAA,CAAzCA,QAAAA;EAAyC,OAC7D,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAGA,QAAQ,CAAI;AAAA,CAChB;AAED,OAAO,IAAMC,iBAAiB,GAC5BF,KAAyD;AAE3D,OAAO,IAAMG,iBAAiB,GAC5BH,KAAyD;AAE3D,OAAO,IAAMI,sBAAsB,GAAGC,IAAI;AAE1C,OAAA,IAAkBC,YAAY;AAO7B,CAAA,UAPiBA,YAAY,EAAA;EAAZA,YAAY,CAAZA,YAAY,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA;EAAZA,YAAY,CAAZA,YAAY,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;EAAZA,YAAY,CAAZA,YAAY,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;EAAZA,YAAY,CAAZA,YAAY,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;EAAZA,YAAY,CAAZA,YAAY,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;EAAZA,YAAY,CAAZA,YAAY,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AAAA,CAAA,EAAZA,YAAY,KAAZA,YAAY,GAAA,CAAA,CAAA,CAAA,CAAA","sourceRoot":"../../../src","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nconst Dummy = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\nexport const PanGestureHandler = Dummy;\nexport const TapGestureHandler = Dummy;\nexport const GestureHandlerRootView = View;\nexport let GestureState;\n(function (GestureState) {\n  GestureState[GestureState[\"UNDETERMINED\"] = 0] = \"UNDETERMINED\";\n  GestureState[GestureState[\"FAILED\"] = 1] = \"FAILED\";\n  GestureState[GestureState[\"BEGAN\"] = 2] = \"BEGAN\";\n  GestureState[GestureState[\"CANCELLED\"] = 3] = \"CANCELLED\";\n  GestureState[GestureState[\"ACTIVE\"] = 4] = \"ACTIVE\";\n  GestureState[GestureState[\"END\"] = 5] = \"END\";\n})(GestureState || (GestureState = {}));\n//# sourceMappingURL=GestureHandler.js.map"]},"metadata":{},"sourceType":"module"}