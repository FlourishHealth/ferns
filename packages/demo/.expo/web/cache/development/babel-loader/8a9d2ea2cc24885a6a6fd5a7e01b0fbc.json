{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport function useDimensions() {\n  var _useState = useState(Dimensions.get(\"window\")),\n    _useState2 = _slicedToArray(_useState, 2),\n    dimensions = _useState2[0],\n    setDimensions = _useState2[1];\n  var onChange = function onChange(_ref) {\n    var window = _ref.window;\n    setDimensions(window);\n  };\n  useEffect(function () {\n    var subscription = Dimensions.addEventListener(\"change\", onChange);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === \"function\") {\n        subscription.remove();\n      } else {\n        Dimensions.removeEventListener(\"change\", onChange);\n      }\n    };\n  }, []);\n  return dimensions;\n}","map":{"version":3,"sources":["useDimensions.ts"],"names":["useEffect","useState","useDimensions","dimensions","setDimensions","Dimensions","get","onChange","window","subscription","addEventListener","remove","removeEventListener"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAAA,OAAA,UAAA;AAGA,OAAO,SAASC,aAAT,CAAA,EAAyB;EAC9B,IAAA,SAAA,GAAoCD,QAAQ,CAACI,UAAU,CAACC,GAAXD,CAAe,QAAfA,CAAD,CAA5C;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA;IAAOF,UAAD,GAAA,UAAA;IAAaC,aAAb,GAAA,UAAA;EAEN,IAAMG,QAAQ,GAAG,SAAXA,QAAQ,CAAA,IAAA,EAA2C;IAAA,IAArCC,MAAAA,GAAAA,IAAAA,CAAAA,MAAAA;IAClBJ,aAAa,CAACI,MAAD,CAAbJ;EACD,CAFD;EAIAJ,SAAS,CAAC,YAAM;IACd,IAAMS,YAAY,GAAGJ,UAAU,CAACK,gBAAXL,CAA4B,QAA5BA,EAAsCE,QAAtCF,CAArB;IAEA,OAAO,YAAM;MAEX,IAAI,QAAOI,YAAP,KAAA,IAAA,IAAOA,YAAP,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,YAAY,CAAEE,MAArB,CAAA,KAAgC,UAApC,EAAgD;QAE9CF,YAAY,CAACE,MAAbF,CAAAA,CAAAA;MACD,CAHD,MAGO;QAELJ,UAAU,CAACO,mBAAXP,CAA+B,QAA/BA,EAAyCE,QAAzCF,CAAAA;MACD;IACF,CATD;EAUD,CAbQ,EAaN,EAbM,CAATL;EAeA,OAAOG,UAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Dimensions, ScaledSize } from \"react-native\";\r\n\r\nexport function useDimensions() {\r\n  const [dimensions, setDimensions] = useState(Dimensions.get(\"window\"));\r\n\r\n  const onChange = ({ window }: { window: ScaledSize }) => {\r\n    setDimensions(window);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener(\"change\", onChange);\r\n\r\n    return () => {\r\n      // @ts-expect-error - React Native >= 0.65\r\n      if (typeof subscription?.remove === \"function\") {\r\n        // @ts-expect-error\r\n        subscription.remove();\r\n      } else {\r\n        // React Native < 0.65\r\n        Dimensions.removeEventListener(\"change\", onChange);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return dimensions;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}