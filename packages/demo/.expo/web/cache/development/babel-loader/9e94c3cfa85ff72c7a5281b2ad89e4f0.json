{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { useEffect } from 'react';\nimport { startMapper, stopMapper } from '../core';\nimport { useSharedValue } from './useSharedValue';\nimport { shouldBeUseWeb } from '../PlatformChecker';\nvar _worklet_3805047105816_init_data = {\n  code: \"function anonymous(){const{prepare,react,previous}=this.__closure;const input=prepare();react(input,previous.value);previous.value=input;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedReaction.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"prepare\\\",\\\"react\\\",\\\"previous\\\",\\\"__closure\\\",\\\"input\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedReaction.js\\\"],\\\"mappings\\\":\\\"AAgCgB,SAAAA,SAAMA,CAAA,QAAAC,OAAA,CAAAC,KAAA,CAAAC,QAAA,OAAAC,SAAA,CAGhB,KAAM,CAAAC,KAAK,CAAGJ,OAAO,CAAC,CAAC,CACvBC,KAAK,CAACG,KAAK,CAAEF,QAAQ,CAACG,KAAK,CAAC,CAC5BH,QAAQ,CAACG,KAAK,CAAGD,KAAK,CACxB\\\"}\",\n  version: \"3.6.3\"\n};\nexport function useAnimatedReaction(prepare, react, dependencies) {\n  var _prepare$__closure;\n  var previous = useSharedValue(null, true);\n  var inputs = Object.values((_prepare$__closure = prepare.__closure) != null ? _prepare$__closure : {});\n  if (shouldBeUseWeb()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n  }\n  if (dependencies === undefined) {\n    var _prepare$__closure2, _react$__closure;\n    dependencies = [].concat(_toConsumableArray(Object.values((_prepare$__closure2 = prepare.__closure) != null ? _prepare$__closure2 : {})), _toConsumableArray(Object.values((_react$__closure = react.__closure) != null ? _react$__closure : {})), [prepare.__workletHash, react.__workletHash]);\n  } else {\n    dependencies.push(prepare.__workletHash, react.__workletHash);\n  }\n  useEffect(function () {\n    var fun = function () {\n      var _e = [new global.Error(), -4, -27];\n      var anonymous = function anonymous() {\n        var input = prepare();\n        react(input, previous.value);\n        previous.value = input;\n      };\n      anonymous.__closure = {\n        prepare: prepare,\n        react: react,\n        previous: previous\n      };\n      anonymous.__workletHash = 3805047105816;\n      anonymous.__initData = _worklet_3805047105816_init_data;\n      anonymous.__stackDetails = _e;\n      return anonymous;\n    }();\n    var mapperId = startMapper(fun, inputs, []);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n}","map":{"version":3,"sources":["useAnimatedReaction.ts"],"names":["useEffect","startMapper","stopMapper","useSharedValue","shouldBeUseWeb","useAnimatedReaction","prepare","react","dependencies","previous","inputs","Object","values","__closure","length","undefined","__workletHash","push","fun","input","value","mapperId"],"mappings":"AAAA,YAAY;;AAAA,OAAA,kBAAA;AACZ,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,WAAW,EAAEC,UAAU,QAAQ,SAAS;AAEjD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,oBAAoB;AAAA,IAAA,gCAAA;EAAA,IAAA;EAAA,QAAA;EAAA,SAAA;EAAA,OAAA;AAAA;AAiBnD,OAAO,SAASC,mBAAmBA,CACjCC,OAA4C,EAC5CC,KAGC,EACDC,YAA6B,EAC7B;EAAA,IAAA,kBAAA;EACA,IAAMC,QAAQ,GAAGN,cAAc,CAAwB,IAAI,EAAE,IAAI,CAAC;EAElE,IAAIO,MAAM,GAAGC,MAAM,CAACC,MAAM,EAAA,kBAAA,GAACN,OAAO,CAACO,SAAS,YAAA,kBAAA,GAAI,CAAC,CAAC,CAAC;EAEnD,IAAIT,cAAc,CAAA,CAAE,EAAE;IAAA,IAAA,aAAA;IACpB,IAAI,CAACM,MAAM,CAACI,MAAM,IAAA,CAAA,aAAA,GAAIN,YAAY,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,IAAZA,aAAAA,CAAcM,MAAM,EAAE;MAE1CJ,MAAM,GAAGF,YAAY;IACvB;EACF;EAEA,IAAIA,YAAY,KAAKO,SAAS,EAAE;IAAA,IAAA,mBAAA,EAAA,gBAAA;IAC9BP,YAAY,MAAA,MAAA,CAAA,kBAAA,CACPG,MAAM,CAACC,MAAM,EAAA,mBAAA,GAACN,OAAO,CAACO,SAAS,YAAA,mBAAA,GAAI,CAAC,CAAC,CAAC,GAAA,kBAAA,CACtCF,MAAM,CAACC,MAAM,EAAA,gBAAA,GAACL,KAAK,CAACM,SAAS,YAAA,gBAAA,GAAI,CAAC,CAAC,CAAC,IACvCP,OAAO,CAACU,aAAa,EACrBT,KAAK,CAACS,aAAa,EACpB;EACH,CAAC,MAAM;IACLR,YAAY,CAACS,IAAI,CAACX,OAAO,CAACU,aAAa,EAAET,KAAK,CAACS,aAAa,CAAC;EAC/D;EAEAhB,SAAS,CAAC,YAAM;IACd,IAAMkB,GAAG,GAAGA;MAAAA,IAAAA,EAAAA,QAAAA,MAAAA,CAAAA,KAAAA;MAAAA,IAAAA,SAAAA,YAAAA,UAAAA,EAAM;QAEhB,IAAMC,KAAK,GAAGb,OAAO,CAAA,CAAE;QACvBC,KAAK,CAACY,KAAK,EAAEV,QAAQ,CAACW,KAAK,CAAC;QAC5BX,QAAQ,CAACW,KAAK,GAAGD,KAAK;MACxB,CAAC;MAAA,SAAA,CAAA,SAAA;QAAA,OAAA,EAHeb,OAAO;QAAA,KAAA,EACrBC,KAAK;QAAA,QAAA,EAAQE;MAAQ;MAAA,SAAA,CAAA,aAAA;MAAA,SAAA,CAAA,UAAA,GAAA,gCAAA;MAAA,SAAA,CAAA,cAAA,GAAA,EAAA;MAAA,OAAA,SAAA;IAAA,CAHXS,EAKX;IACD,IAAMG,QAAQ,GAAGpB,WAAW,CAACiB,GAAG,EAAER,MAAM,EAAE,EAAE,CAAC;IAC7C,OAAO,YAAM;MACXR,UAAU,CAACmB,QAAQ,CAAC;IACtB,CAAC;EACH,CAAC,EAAEb,YAAY,CAAC;AAClB","sourcesContent":["'use strict';\nimport { useEffect } from 'react';\nimport type { WorkletFunction } from '../commonTypes';\nimport { startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { useSharedValue } from './useSharedValue';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\n/**\n * Lets you to respond to changes in a [shared value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value). It's especially useful when comparing values previously stored in the shared value with the current one.\n *\n * @param prepare - A function that should return a value to which you'd like to react.\n * @param react - A function that reacts to changes in the value returned by the `prepare` function.\n * @param dependencies - an optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useAnimatedReaction\n */\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: () => PreparedResult,\n  react: (prepared: PreparedResult, previous: PreparedResult | null) => void,\n  dependencies?: DependencyList\n): void;\n\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: WorkletFunction<[], PreparedResult>,\n  react: WorkletFunction<\n    [prepare: PreparedResult, previous: PreparedResult | null],\n    void\n  >,\n  dependencies?: DependencyList\n) {\n  const previous = useSharedValue<PreparedResult | null>(null, true);\n\n  let inputs = Object.values(prepare.__closure ?? {});\n\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Reanimated Babel plugin\n      inputs = dependencies;\n    }\n  }\n\n  if (dependencies === undefined) {\n    dependencies = [\n      ...Object.values(prepare.__closure ?? {}),\n      ...Object.values(react.__closure ?? {}),\n      prepare.__workletHash,\n      react.__workletHash,\n    ];\n  } else {\n    dependencies.push(prepare.__workletHash, react.__workletHash);\n  }\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      const input = prepare();\n      react(input, previous.value);\n      previous.value = input;\n    };\n    const mapperId = startMapper(fun, inputs, []);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n}\n"]},"metadata":{},"sourceType":"module"}