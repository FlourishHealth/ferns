{"ast":null,"code":"'use strict';\n\nimport { useRef } from 'react';\nimport { makeMutable } from './core';\nvar _worklet_4365650429626_init_data = {\n  code: \"function anonymous(descriptors){const{item}=this.__closure;const index=descriptors.findIndex(function(descriptor){return descriptor.tag===item.tag;});if(index!==-1){descriptors[index]=item;}else{descriptors.push(item);}return descriptors;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"descriptors\\\",\\\"item\\\",\\\"__closure\\\",\\\"index\\\",\\\"findIndex\\\",\\\"descriptor\\\",\\\"tag\\\",\\\"push\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\\\"],\\\"mappings\\\":\\\"AASsC,SAAAA,UAAAC,WAAe,QAAAC,IAAA,OAAAC,SAAA,CAG7C,KAAM,CAAAC,KAAK,CAAGH,WAAW,CAACI,SAAS,CAAC,SAAAC,UAAU,QAAI,CAAAA,UAAU,CAACC,GAAG,GAAKL,IAAI,CAACK,GAAG,GAAC,CAC9E,GAAIH,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBH,WAAW,CAACG,KAAK,CAAC,CAAGF,IAAI,CAC3B,CAAC,IAAM,CACLD,WAAW,CAACO,IAAI,CAACN,IAAI,CAAC,CACxB,CACA,MAAO,CAAAD,WAAW,CACpB\\\"}\",\n  version: \"3.6.3\"\n};\nvar _worklet_6739515972732_init_data = {\n  code: \"function anonymous(descriptors){const{viewTag}=this.__closure;const index=descriptors.findIndex(function(descriptor){return descriptor.tag===viewTag;});if(index!==-1){descriptors.splice(index,1);}return descriptors;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"descriptors\\\",\\\"viewTag\\\",\\\"__closure\\\",\\\"index\\\",\\\"findIndex\\\",\\\"descriptor\\\",\\\"tag\\\",\\\"splice\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\\\"],\\\"mappings\\\":\\\"AAsBsC,SAAAA,UAAAC,WAAe,QAAAC,OAAA,OAAAC,SAAA,CAG7C,KAAM,CAAAC,KAAK,CAAGH,WAAW,CAACI,SAAS,CAAC,SAAAC,UAAU,QAAI,CAAAA,UAAU,CAACC,GAAG,GAAKL,OAAO,GAAC,CAC7E,GAAIE,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBH,WAAW,CAACO,MAAM,CAACJ,KAAK,CAAE,CAAC,CAAC,CAC9B,CACA,MAAO,CAAAH,WAAW,CACpB\\\"}\",\n  version: \"3.6.3\"\n};\nexport function makeViewDescriptorsSet() {\n  var shareableViewDescriptors = makeMutable([]);\n  var data = {\n    shareableViewDescriptors: shareableViewDescriptors,\n    add: function add(item) {\n      shareableViewDescriptors.modify(function () {\n        var _e = [new global.Error(), -2, -27];\n        var anonymous = function anonymous(descriptors) {\n          var index = descriptors.findIndex(function (descriptor) {\n            return descriptor.tag === item.tag;\n          });\n          if (index !== -1) {\n            descriptors[index] = item;\n          } else {\n            descriptors.push(item);\n          }\n          return descriptors;\n        };\n        anonymous.__closure = {\n          item: item\n        };\n        anonymous.__workletHash = 4365650429626;\n        anonymous.__initData = _worklet_4365650429626_init_data;\n        anonymous.__stackDetails = _e;\n        return anonymous;\n      }(), false);\n    },\n    remove: function remove(viewTag) {\n      shareableViewDescriptors.modify(function () {\n        var _e = [new global.Error(), -2, -27];\n        var anonymous = function anonymous(descriptors) {\n          var index = descriptors.findIndex(function (descriptor) {\n            return descriptor.tag === viewTag;\n          });\n          if (index !== -1) {\n            descriptors.splice(index, 1);\n          }\n          return descriptors;\n        };\n        anonymous.__closure = {\n          viewTag: viewTag\n        };\n        anonymous.__workletHash = 6739515972732;\n        anonymous.__initData = _worklet_6739515972732_init_data;\n        anonymous.__stackDetails = _e;\n        return anonymous;\n      }(), false);\n    }\n  };\n  return data;\n}\nexport function useViewRefSet() {\n  var ref = useRef(null);\n  if (ref.current === null) {\n    var data = {\n      items: new Set(),\n      add: function add(item) {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n      remove: function remove(item) {\n        data.items.delete(item);\n      }\n    };\n    ref.current = data;\n  }\n  return ref.current;\n}","map":{"version":3,"sources":["ViewDescriptorsSet.ts"],"names":["useRef","makeMutable","makeViewDescriptorsSet","shareableViewDescriptors","data","add","item","modify","descriptors","index","findIndex","descriptor","tag","push","remove","viewTag","splice","useViewRefSet","ref","current","items","Set","has","delete"],"mappings":"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","sourcesContent":["'use strict';\nimport { useRef } from 'react';\nimport { makeMutable } from './core';\nimport type { SharedValue } from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\n\nexport interface ViewRefSet<T> {\n  items: Set<T>;\n  add: (item: T) => void;\n  remove: (item: T) => void;\n}\n\nexport interface ViewDescriptorsSet {\n  shareableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const shareableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    shareableViewDescriptors,\n    add: (item: Descriptor) => {\n      shareableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      }, false);\n    },\n\n    remove: (viewTag: number) => {\n      shareableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      }, false);\n    },\n  };\n  return data;\n}\n\nexport function useViewRefSet<T>(): ViewRefSet<T> {\n  const ref = useRef<ViewRefSet<T> | null>(null);\n  if (ref.current === null) {\n    const data: ViewRefSet<T> = {\n      items: new Set(),\n\n      add: (item: T) => {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n\n      remove: (item: T) => {\n        data.items.delete(item);\n      },\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module"}