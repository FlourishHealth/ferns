{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport WorkletEventHandler from \"./reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport \"./reanimated2/layoutReanimation/animationsManager\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"./ConfigHelper\";\nimport { RNRenderer } from \"./reanimated2/platform-specific/RNRenderer\";\nimport { configureLayoutAnimations, enableLayoutAnimations, runOnUI, startMapper, stopMapper } from \"./reanimated2/core\";\nimport { isJest, isChromeDebugger, shouldBeUseWeb } from \"./reanimated2/PlatformChecker\";\nimport { initialUpdaterRun } from \"./reanimated2/animation\";\nimport { DefaultSharedTransition, LayoutAnimationType } from \"./reanimated2/layoutReanimation\";\nimport { makeViewDescriptorsSet } from \"./reanimated2/ViewDescriptorsSet\";\nimport { getShadowNodeWrapperFromRef } from \"./reanimated2/fabricUtils\";\nimport updateProps from \"./reanimated2/UpdateProps\";\nimport NativeReanimatedModule from \"./reanimated2/NativeReanimated\";\nimport { isSharedValue } from \"./reanimated2\";\nfunction dummyListener() {}\nfunction maybeBuild(layoutAnimationOrBuilder) {\n  var isAnimationBuilder = function isAnimationBuilder(value) {\n    return 'build' in layoutAnimationOrBuilder && typeof layoutAnimationOrBuilder.build === 'function';\n  };\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  var resultArr = [];\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\nfunction isInlineStyleTransform(transform) {\n  if (!transform) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref of Object.entries(style)) {\n          var _ref2 = _slicedToArray(_ref, 2);\n          var _key = _ref2[0];\n          var styleValue = _ref2[1];\n          if (isSharedValue(styleValue)) {\n            inlineProps[_key] = styleValue;\n          } else if (_key === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n  return false;\n}\nvar _worklet_10214432427375_init_data = {\n  code: \"function getInlinePropsUpdate(inlineProps) {\\n  const getInlinePropsUpdate = this._recur;\\n  const {\\n    isSharedValue\\n  } = this._closure;\\n  const update = {};\\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\\n    if (key === 'transform') {\\n      update[key] = styleValue.map(function (transform) {\\n        return getInlinePropsUpdate(transform);\\n      });\\n    } else if (isSharedValue(styleValue)) {\\n      update[key] = styleValue.value;\\n    } else {\\n      update[key] = styleValue;\\n    }\\n  }\\n  return update;\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getInlinePropsUpdate\\\",\\\"inlineProps\\\",\\\"_recur\\\",\\\"isSharedValue\\\",\\\"_closure\\\",\\\"update\\\",\\\"key\\\",\\\"styleValue\\\",\\\"Object\\\",\\\"entries\\\",\\\"map\\\",\\\"transform\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAqHA,SAAAA,oBAASA,CAAqBC,WAAA,EAAW;EAAA,MAAAD,oBAAA,QAAAE,MAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvC,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,MAAM,CAACC,GAAG,EAAEC,UAAU,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,EAAE;IAC3D,IAAIK,GAAG,KAAK,WAAW,EAAE;MACvBD,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU,CAACG,GAAG,CAAC,UAAAC,SAAS,EAAI;QACxC,OAAOX,oBAAoB,CAACW,SAAS,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIR,aAAa,CAACI,UAAU,CAAC,EAAE;MACpCF,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU,CAACK,KAAK;IAChC,CAAC,MAAM;MACLP,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU;IAC1B;EACF;EACA,OAAOF,MAAM;AACf\\\"}\"\n};\nvar getInlinePropsUpdate = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(inlineProps) {\n    var update = {};\n    for (var _ref3 of Object.entries(inlineProps)) {\n      var _ref4 = _slicedToArray(_ref3, 2);\n      var key = _ref4[0];\n      var styleValue = _ref4[1];\n      if (key === 'transform') {\n        update[key] = styleValue.map(function (transform) {\n          return getInlinePropsUpdate(transform);\n        });\n      } else if (isSharedValue(styleValue)) {\n        update[key] = styleValue.value;\n      } else {\n        update[key] = styleValue;\n      }\n    }\n    return update;\n  };\n  _f._closure = {\n    isSharedValue: isSharedValue\n  };\n  _f.__initData = _worklet_10214432427375_init_data;\n  _f.__workletHash = 10214432427375;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_13635933857374_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    viewTag\\n  } = this._closure;\\n  _removeShadowNodeFromRegistry(viewTag);\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"viewTag\\\",\\\"_closure\\\",\\\"_removeShadowNodeFromRegistry\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAsPkB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACZC,6BAA6B,CAACF,OAAO,CAAC;AACxC\\\"}\"\n};\nvar _worklet_3330813578186_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    getInlinePropsUpdate,\\n    newInlineProps,\\n    updateProps,\\n    sharableViewDescriptors,\\n    maybeViewRef\\n  } = this._closure;\\n  const update = getInlinePropsUpdate(newInlineProps);\\n  updateProps(sharableViewDescriptors, update, maybeViewRef);\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"getInlinePropsUpdate\\\",\\\"newInlineProps\\\",\\\"updateProps\\\",\\\"sharableViewDescriptors\\\",\\\"maybeViewRef\\\",\\\"_closure\\\",\\\"update\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAwagC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,oBAAA;IAAAC,cAAA;IAAAC,WAAA;IAAAC,uBAAA;IAAAC;EAAA,SAAAC,QAAA;EAG5B,MAAMC,MAAM,GAAGN,oBAAoB,CAACC,cAAc,CAAC;EACnDC,WAAW,CAACC,uBAAuB,EAAEG,MAAM,EAAEF,YAAY,CAAC;AAC5D\\\"}\"\n};\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _defineProperty(_assertThisInitialized(_this), \"_styles\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_animatedProps\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"_viewTag\", -1);\n      _defineProperty(_assertThisInitialized(_this), \"_isFirstRender\", true);\n      _defineProperty(_assertThisInitialized(_this), \"animatedStyle\", {\n        value: {}\n      });\n      _defineProperty(_assertThisInitialized(_this), \"initialStyle\", {});\n      _defineProperty(_assertThisInitialized(_this), \"_component\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsViewDescriptors\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsMapperId\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlineProps\", {});\n      _defineProperty(_assertThisInitialized(_this), \"_setComponentRef\", setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = findNodeHandle(ref);\n          var _this$props = _this.props,\n            layout = _this$props.layout,\n            entering = _this$props.entering,\n            exiting = _this$props.exiting,\n            sharedTransitionTag = _this$props.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            if (!shouldBeUseWeb()) {\n              enableLayoutAnimations(true, false);\n            }\n            if (layout) {\n              configureLayoutAnimations(tag, LayoutAnimationType.LAYOUT, maybeBuild(layout));\n            }\n            if (entering) {\n              configureLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering));\n            }\n            if (exiting) {\n              configureLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting));\n            }\n            if (sharedTransitionTag) {\n              var _this$props$sharedTra;\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : DefaultSharedTransition;\n              configureLayoutAnimations(tag, LayoutAnimationType.SHARED_ELEMENT_TRANSITION, maybeBuild(sharedElementTransition), sharedTransitionTag);\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if (isJest()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachNativeEvents();\n        this._detachStyles();\n        this._detachInlineProps();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component;\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = null;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === null) {\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style !== null && style !== void 0 && style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (global._IS_FABRIC) {\n            var viewTag = this._viewTag;\n            runOnUI(function () {\n              var _e = [new global.Error(), -2, -27];\n              var _f = function _f() {\n                _removeShadowNodeFromRegistry(viewTag);\n              };\n              _f._closure = {\n                viewTag: viewTag\n              };\n              _f.__initData = _worklet_13635933857374_init_data;\n              _f.__workletHash = 13635933857374;\n              _f.__stackDetails = _e;\n              _f.__version = \"3.3.0\";\n              return _f;\n            }())();\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n        var viewTag = null;\n        for (var _key2 in this.props) {\n          var _prop = this.props[_key2];\n          if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            _prop.current.registerForEvents(viewTag, _key2);\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 ? void 0 : (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 ? void 0 : _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3;\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? this._component.getAnimatableRef() : this;\n        if (Platform.OS === 'web') {\n          viewTag = findNodeHandle(component);\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance === null || hostInstance === void 0 ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) === null || _hostInstance$viewCon === void 0 ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig;\n          if (global._IS_FABRIC) {\n            shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n          }\n        }\n        return {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (isJest()) {\n            _this2.animatedStyle.value = _objectSpread(_objectSpread({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"_attachInlineProps\",\n      value: function _attachInlineProps() {\n        var newInlineProps = extractSharedValuesMapFromProps(this.props);\n        var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n        if (hasChanged) {\n          if (!this._inlinePropsViewDescriptors) {\n            this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n            var _this$_getViewInfo2 = this._getViewInfo(),\n              viewTag = _this$_getViewInfo2.viewTag,\n              viewName = _this$_getViewInfo2.viewName,\n              shadowNodeWrapper = _this$_getViewInfo2.shadowNodeWrapper,\n              viewConfig = _this$_getViewInfo2.viewConfig;\n            if (Object.keys(newInlineProps).length && viewConfig) {\n              adaptViewConfig(viewConfig);\n            }\n            this._inlinePropsViewDescriptors.add({\n              tag: viewTag,\n              name: viewName,\n              shadowNodeWrapper: shadowNodeWrapper\n            });\n          }\n          var sharableViewDescriptors = this._inlinePropsViewDescriptors.sharableViewDescriptors;\n          var maybeViewRef = NativeReanimatedModule.native ? undefined : {\n            items: new Set([this])\n          };\n          var updaterFunction = function () {\n            var _e = [new global.Error(), -6, -27];\n            var _f = function _f() {\n              var update = getInlinePropsUpdate(newInlineProps);\n              updateProps(sharableViewDescriptors, update, maybeViewRef);\n            };\n            _f._closure = {\n              getInlinePropsUpdate: getInlinePropsUpdate,\n              newInlineProps: newInlineProps,\n              updateProps: updateProps,\n              sharableViewDescriptors: sharableViewDescriptors,\n              maybeViewRef: maybeViewRef\n            };\n            _f.__initData = _worklet_3330813578186_init_data;\n            _f.__workletHash = 3330813578186;\n            _f.__stackDetails = _e;\n            _f.__version = \"3.3.0\";\n            return _f;\n          }();\n          this._inlineProps = newInlineProps;\n          if (this._inlinePropsMapperId) {\n            stopMapper(this._inlinePropsMapperId);\n          }\n          this._inlinePropsMapperId = null;\n          if (Object.keys(newInlineProps).length) {\n            this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n          }\n        }\n      }\n    }, {\n      key: \"_detachInlineProps\",\n      value: function _detachInlineProps() {\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._reattachNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp != null ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = _objectSpread(_objectSpread({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                }\n                return _this3.initialStyle;\n              } else if (hasInlineStyles(style)) {\n                if (_this3._isFirstRender) {\n                  return getInlinePropsUpdate(style);\n                }\n                var newStyle = {};\n                for (var _ref5 of Object.entries(style)) {\n                  var _ref6 = _slicedToArray(_ref5, 2);\n                  var _key3 = _ref6[0];\n                  var styleValue = _ref6[1];\n                  if (!isSharedValue(styleValue) && !(_key3 === 'transform' && isInlineStyleTransform(styleValue))) {\n                    newStyle[_key3] = styleValue;\n                  }\n                }\n                return newStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = StyleSheet.flatten(processedStyle);\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _animatedProp$initial, _animatedProp$viewsRe;\n                props[key] = (_animatedProp$initial = animatedProp.initial) === null || _animatedProp$initial === void 0 ? void 0 : _animatedProp$initial.value[key];\n                (_animatedProp$viewsRe = animatedProp.viewsRef) === null || _animatedProp$viewsRe === void 0 ? void 0 : _animatedProp$viewsRe.add(_this3);\n              });\n            }\n          } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (isSharedValue(value)) {\n            if (_this3._isFirstRender) {\n              props[key] = value.value;\n            }\n          } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n            props[key] = value;\n          }\n        };\n        for (var key in inputProps) {\n          _loop2();\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if (isJest()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return React.createElement(Component, _extends({}, props, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"sources":["createAnimatedComponent.tsx"],"names":["React","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","configureLayoutAnimations","enableLayoutAnimations","runOnUI","startMapper","stopMapper","isJest","isChromeDebugger","shouldBeUseWeb","initialUpdaterRun","DefaultSharedTransition","LayoutAnimationType","makeViewDescriptorsSet","getShadowNodeWrapperFromRef","updateProps","NativeReanimatedModule","isSharedValue","dummyListener","maybeBuild","layoutAnimationOrBuilder","isAnimationBuilder","value","build","flattenArray","array","Array","isArray","resultArr","_flattenArray","arr","forEach","item","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","key","x","undefined","isInlineStyleTransform","transform","some","t","hasInlineStyles","Object","keys","styleValue","extractSharedValuesMapFromProps","props","inlineProps","entries","inlinePropsHasChanged","styles1","styles2","length","getInlinePropsUpdate","update","map","createAnimatedComponent","Component","options","prototype","isReactComponent","name","AnimatedComponent","_defineProperty","constructor","animatedStyle","componentWillUnmount","_detachNativeEvents","_detachStyles","_detachInlineProps","componentDidMount","_attachNativeEvents","_attachAnimatedStyles","_attachInlineProps","_getEventViewRef","_component","getScrollableNode","node","viewTag","prop","current","findNodeHandle","setNativeProps","registerForEvents","unregisterFromEvents","Platform","OS","_styles","remove","_viewTag","animatedProps","global","_IS_FABRIC","_removeShadowNodeFromRegistry","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_getViewInfo","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","prevStyles","prevAnimatedProps","_animatedProps","hasReanimated2Props","hasOneSameStyle","prevStyle","isPresent","add","tag","initial","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","sharableViewDescriptors","maybeViewRef","native","items","Set","updaterFunction","_inlinePropsMapperId","values","componentDidUpdate","getForwardedRef","forwardedRef","setLocalRef","ref","layout","entering","exiting","sharedTransitionTag","LAYOUT","ENTERING","EXITING","sharedElementTransition","sharedTransitionStyle","SHARED_ELEMENT_TRANSITION","_filterNonAnimatedProps","inputProps","styleProp","processedStyle","_isFirstRender","initialStyle","updater","newStyle","StyleSheet","flatten","animatedProp","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","_setComponentRef","displayName","forwardRef"],"mappings":"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","sourcesContent":["import React, { Component, ComponentType, MutableRefObject, Ref } from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n  runOnUI,\n  startMapper,\n  stopMapper,\n} from './reanimated2/core';\nimport {\n  isJest,\n  isChromeDebugger,\n  shouldBeUseWeb,\n} from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nimport {\n  BaseAnimationBuilder,\n  DefaultSharedTransition,\n  EntryExitAnimationFunction,\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './reanimated2/layoutReanimation';\nimport {\n  SharedValue,\n  StyleProps,\n  ShadowNodeWrapper,\n} from './reanimated2/commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from './reanimated2/ViewDescriptorsSet';\nimport { getShadowNodeWrapperFromRef } from './reanimated2/fabricUtils';\nimport updateProps from './reanimated2/UpdateProps';\nimport NativeReanimatedModule from './reanimated2/NativeReanimated';\nimport { isSharedValue } from './reanimated2';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n\ntype NestedArray<T> = T | NestedArray<T>[];\nfunction flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]) {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\nconst has = <K extends string>(\n  key: K,\n  x: unknown\n): x is { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n\nfunction isInlineStyleTransform(transform: any): boolean {\n  if (!transform) {\n    return false;\n  }\n  return transform.some((t: Record<string, any>) => hasInlineStyles(t));\n}\n\nfunction hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<InitialComponentProps>\n): Record<string, any> {\n  const inlineProps: Record<string, any> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1: StyleProps, styles2: StyleProps) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, any>) {\n  'worklet';\n  const update: Record<string, any> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (key === 'transform') {\n      update[key] = styleValue.map((transform: Record<string, any>) => {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\ninterface AnimatedProps extends Record<string, unknown> {\n  viewDescriptors?: ViewDescriptorsSet;\n  viewsRef?: ViewRefSet<unknown>;\n  initial?: SharedValue<StyleProps>;\n}\n\nexport type AnimatedComponentProps<P extends Record<string, unknown>> = P & {\n  forwardedRef?: Ref<Component>;\n  style?: NestedArray<StyleProps>;\n  animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n  animatedStyle?: StyleProps;\n  layout?:\n    | BaseAnimationBuilder\n    | ILayoutAnimationBuilder\n    | typeof BaseAnimationBuilder;\n  entering?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  exiting?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  sharedTransitionTag?: string;\n  sharedTransitionStyle?: ILayoutAnimationBuilder;\n};\n\ntype Options<P> = {\n  setNativeProps: (ref: ComponentRef, props: P) => void;\n};\n\ninterface ComponentRef extends Component {\n  setNativeProps?: (props: Record<string, unknown>) => void;\n  getScrollableNode?: () => ComponentRef;\n  getAnimatableRef?: () => ComponentRef;\n}\n\nexport interface InitialComponentProps extends Record<string, unknown> {\n  ref?: Ref<Component>;\n  collapsable?: boolean;\n}\n\nexport default function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): ComponentType<AnimatedComponentProps<InitialComponentProps>> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent extends React.Component<\n    AnimatedComponentProps<InitialComponentProps>\n  > {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    initialStyle = {};\n    _component: ComponentRef | null = null;\n    _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n    _inlinePropsMapperId: number | null = null;\n    _inlineProps: StyleProps = {};\n    static displayName: string;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._detachStyles();\n      this._detachInlineProps();\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (Platform.OS === 'web' && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (global._IS_FABRIC) {\n          const viewTag = this._viewTag;\n          runOnUI(() => {\n            _removeShadowNodeFromRegistry!(viewTag);\n          })();\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef();\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component!, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        this._component?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo() {\n      let viewTag: number | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = this._component?.getAnimatableRef\n        ? this._component.getAnimatableRef()\n        : this;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(component);\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (global._IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      return { viewTag, viewName, shadowNodeWrapper, viewConfig };\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    _attachInlineProps() {\n      const newInlineProps: Record<string, any> =\n        extractSharedValuesMapFromProps(this.props);\n      const hasChanged = inlinePropsHasChanged(\n        newInlineProps,\n        this._inlineProps\n      );\n\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n          const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n            this._getViewInfo();\n\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n\n          this._inlinePropsViewDescriptors.add({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tag: viewTag!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            name: viewName!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            shadowNodeWrapper: shadowNodeWrapper!,\n          });\n        }\n        const sharableViewDescriptors =\n          this._inlinePropsViewDescriptors.sharableViewDescriptors;\n\n        const maybeViewRef = NativeReanimatedModule.native\n          ? undefined\n          : ({ items: new Set([this]) } as ViewRefSet<any>); // see makeViewsRefSet\n\n        const updaterFunction = () => {\n          'worklet';\n          const update = getInlinePropsUpdate(newInlineProps);\n          updateProps(sharableViewDescriptors, update, maybeViewRef);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(\n            updaterFunction,\n            Object.values(newInlineProps)\n          );\n        }\n      }\n    }\n\n    _detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _setComponentRef = setAndForwardRef<Component>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n        const tag = findNodeHandle(ref);\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(layout)\n            );\n          }\n          if (entering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(entering)\n            );\n          }\n          if (exiting) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.EXITING,\n              maybeBuild(exiting)\n            );\n          }\n          if (sharedTransitionTag) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? DefaultSharedTransition;\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.SHARED_ELEMENT_TRANSITION,\n              maybeBuild(sharedElementTransition),\n              sharedTransitionTag\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    _filterNonAnimatedProps(\n      inputProps: AnimatedComponentProps<InitialComponentProps>\n    ): Record<string, unknown> {\n      const props: Record<string, unknown> = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray<StyleProps>(styleProp ?? []);\n          const processedStyle: StyleProps = styles.map((style) => {\n            if (style && style.viewDescriptors) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = {\n                  ...style.initial.value,\n                  ...initialUpdaterRun<StyleProps>(style.initial.updater),\n                };\n              }\n              return this.initialStyle;\n            } else if (hasInlineStyles(style)) {\n              if (this._isFirstRender) {\n                return getInlinePropsUpdate(style);\n              }\n              const newStyle: StyleProps = {};\n              for (const [key, styleValue] of Object.entries(style)) {\n                if (\n                  !isSharedValue(styleValue) &&\n                  !(key === 'transform' && isInlineStyleTransform(styleValue))\n                ) {\n                  newStyle[key] = styleValue;\n                }\n              }\n              return newStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps as Partial<\n            AnimatedComponentProps<AnimatedProps>\n          >;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach((key) => {\n              props[key] = animatedProp.initial?.value[key];\n              animatedProp.viewsRef?.add(this);\n            });\n          }\n        } else if (\n          has('current', value) &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = has('listeners', value.current)\n                ? (value.current.listeners as Record<string, unknown>)[\n                    eventName\n                  ]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (this._isFirstRender) {\n            props[key] = (value as SharedValue<any>).value;\n          }\n        } else if (\n          key !== 'onGestureHandlerStateChange' ||\n          !isChromeDebugger()\n        ) {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n      return (\n        <Component {...props} ref={this._setComponentRef} {...platformProps} />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"]},"metadata":{},"sourceType":"module"}