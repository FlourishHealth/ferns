{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { ContinousBaseGesture } from './gesture';\nvar _worklet_15046825215399_init_data = {\n  code: \"function changeEventCalculator(current,_previous){return current;}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/manualGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator\\\",\\\"current\\\",\\\"_previous\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/manualGesture.js\\\"],\\\"mappings\\\":\\\"AAEA,SAAAA,qBAASA,CAAsBC,OAAA,CAAOC,SAAE,CAAS,CAG/C,MAAO,CAAAD,OAAO,CAChB\\\"}\",\n  version: \"3.6.3\"\n};\nvar changeEventCalculator = function () {\n  var _e = [new global.Error(), 1, -27];\n  var changeEventCalculator = function changeEventCalculator(current, _previous) {\n    return current;\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 15046825215399;\n  changeEventCalculator.__initData = _worklet_15046825215399_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport var ManualGesture = function (_ContinousBaseGesture) {\n  _inherits(ManualGesture, _ContinousBaseGesture);\n  var _super = _createSuper(ManualGesture);\n  function ManualGesture() {\n    var _this;\n    _classCallCheck(this, ManualGesture);\n    _this = _super.call(this);\n    _this.handlerName = 'ManualGestureHandler';\n    return _this;\n  }\n  _createClass(ManualGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(ManualGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return ManualGesture;\n}(ContinousBaseGesture);","map":{"version":3,"sources":["manualGesture.ts"],"names":["ContinousBaseGesture","changeEventCalculator","current","_previous","ManualGesture","constructor","handlerName","onChange","callback","handlers"],"mappings":";;;;;;;;AACA,SAASA,oBAAT,QAAqC,WAArC;AAAA,IAAA,iCAAA;EAAA,IAAA;EAAA,QAAA;EAAA,SAAA;EAAA,OAAA;AAAA;AAAA,IAESC,qBAAT,GAAA;EAAA,IAAA,EAAA,QAAA,MAAA,CAAA,KAAA;EAAA,IAAA,qBAAA,YAAA,sBACEC,OADF,EAEEC,SAFF,EAGE;IAEA,OAAOD,OAAP;EACD,CAAA;EAAA,qBAAA,CAAA,SAAA;EAAA,qBAAA,CAAA,aAAA;EAAA,qBAAA,CAAA,UAAA,GAAA,iCAAA;EAAA,qBAAA,CAAA,cAAA,GAAA,EAAA;EAAA,OAAA,qBAAA;AAAA,CAND;AAQA,WAAaE,aAAN,aAAA,qBAAA;EAAA,SAAA,CAAA,aAAA,EAAA,qBAAA;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,aAAA;EAILC,SAAAA,cAAAA,EAAc;IAAA,IAAA,KAAA;IAAA,eAAA,OAAA,aAAA;IACZ,KAAA,GAAA,MAAA,CAAA,IAAA;IAEA,KAAA,CAAKC,WAAL,GAAmB,sBAAnB;IAAA,OAAA,KAAA;EACD;EAAA,YAAA,CAAA,aAAA;IAAA,GAAA;IAAA,KAAA,EAEDC,SAAAA,SACEC,QADM,EAEN;MAEA,IAAA,CAAKC,QAAL,CAAcR,qBAAd,GAAsCA,qBAAtC;MACA,OAAA,IAAA,CAAA,eAAA,CAAA,aAAA,CAAA,SAAA,qBAAA,IAAA,OAAsBO,QAAtB;IACD;EAAA;EAAA,OAAA,aAAA;AAAA,EAhBgCR,oBAA5B","sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"]},"metadata":{},"sourceType":"module"}