{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Children, useRef } from \"react\";\nimport { Box } from \"./Box\";\nimport { IconButton } from \"./IconButton\";\nimport { useTableContext } from \"./tableContext\";\nexport var TableRow = function TableRow(_ref) {\n  var children = _ref.children,\n    _ref$headerRow = _ref.headerRow,\n    headerRow = _ref$headerRow === void 0 ? false : _ref$headerRow,\n    expanded = _ref.expanded,\n    drawerContents = _ref.drawerContents,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? \"white\" : _ref$color;\n  var _React$useState = React.useState(expanded || false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isExpanded = _React$useState2[0],\n    setIsExpanded = _React$useState2[1];\n  var _useTableContext = useTableContext(),\n    columns = _useTableContext.columns,\n    hasDrawerContents = _useTableContext.hasDrawerContents;\n  var rowRef = useRef(null);\n  var renderCellWithColumnIndex = function renderCellWithColumnIndex(child, index) {\n    if (!columns[index]) {\n      console.warn(`No width defined for column ${index} in TableRow`);\n      return null;\n    }\n    return React.createElement(Box, {\n      paddingX: 2,\n      width: columns[index]\n    }, child);\n  };\n  var border = {\n    __style: {\n      borderBottom: `${headerRow ? 2 : 1}px solid #e0e0e0`\n    }\n  };\n  return React.createElement(Box, {\n    ref: rowRef,\n    color: color,\n    dangerouslySetInlineStyle: border,\n    width: \"100%\"\n  }, React.createElement(Box, {\n    direction: \"row\",\n    paddingY: 1,\n    width: \"100%\"\n  }, Boolean(drawerContents) && (React.createElement(Box, {\n    width: 30\n  }, React.createElement(IconButton, {\n    accessibilityLabel: \"expand\",\n    bgColor: \"white\",\n    icon: isExpanded ? \"chevron-up\" : \"chevron-down\",\n    iconColor: \"darkGray\",\n    size: \"sm\",\n    onClick: function onClick() {\n      setIsExpanded(!isExpanded);\n    }\n  }))), Boolean(hasDrawerContents && !drawerContents) && React.createElement(Box, {\n    width: 30\n  }), Children.map(children, renderCellWithColumnIndex)), Boolean(isExpanded) && (React.createElement(Box, {\n    paddingX: 2,\n    width: \"100%\"\n  }, drawerContents)));\n};","map":{"version":3,"sources":["../src/TableRow.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,IAAG,QAAQ,EAAE,MAAM,QAAO,OAAO;AAE7C,SAAQ,GAAG,QAAO,OAAO;AAEzB,SAAQ,UAAU,QAAO,cAAc;AACvC,SAAQ,eAAe,QAAO,gBAAgB;AAK9C,OAAO,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAA,IAAA,EAMmB;EAAA,IALtC,QAAQ,GAAA,IAAA,CAAR,QAAQ;IAAA,cAAA,GAAA,IAAA,CACR,SAAS;IAAT,SAAS,GAAA,cAAA,cAAG,KAAK,GAAA,cAAA;IACjB,QAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,cAAc,GAAA,IAAA,CAAd,cAAc;IAAA,UAAA,GAAA,IAAA,CACd,KAAK;IAAL,KAAK,GAAA,UAAA,cAAG,OAAO,GAAA,UAAA;EAEf,IAAA,eAAA,GAAoC,KAAK,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAK,CAAC;IAAA,gBAAA,GAAA,cAAA,CAAA,eAAA;IAA9D,UAAU,GAAA,gBAAA;IAAE,aAAa,GAAA,gBAAA;EAChC,IAAA,gBAAA,GAAqC,eAAe,CAAA,CAAE;IAA/C,OAAO,GAAA,gBAAA,CAAP,OAAO;IAAE,iBAAiB,GAAA,gBAAA,CAAjB,iBAAiB;EACjC,IAAM,MAAM,GAAG,MAAM,CAAa,IAAI,CAAC;EAEvC,IAAM,yBAAyB,GAAG,SAA5B,yBAAyB,CAAI,KAAsB,EAAE,KAAa,EAAI;IAC1E,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;MACnB,OAAO,CAAC,IAAI,CAAC,+BAA+B,KAAK,cAAc,CAAC;MAChE,OAAO,IAAI;IACb;IACA,OACE,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;MAAC,QAAQ,EAAE,CAAC;MAAE,KAAK,EAAE,OAAO,CAAC,KAAK;IAAC,CAAA,EACpC,KAAK,CACF;EAEV,CAAC;EAED,IAAM,MAAM,GAAG;IAAC,OAAO,EAAE;MAAC,YAAY,EAAE,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC;IAAkB;EAAC,CAAC;EAEhF,OACE,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,GAAG,EAAE,MAAM;IAAE,KAAK,EAAE,KAAK;IAAE,yBAAyB,EAAE,MAAM;IAAE,KAAK,EAAC;EAAM,CAAA,EAC7E,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,SAAS,EAAC,KAAK;IAAC,QAAQ,EAAE,CAAC;IAAE,KAAK,EAAC;EAAM,CAAA,EAC3C,OAAO,CAAC,cAAc,CAAC,KACtB,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,KAAK,EAAE;EAAE,CAAA,EACZ,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,kBAAkB,EAAC,QAAQ;IAC3B,OAAO,EAAC,OAAO;IACf,IAAI,EAAE,UAAU,GAAG,YAAY,GAAG,cAAc;IAChD,SAAS,EAAC,UAAU;IACpB,IAAI,EAAC,IAAI;IACT,OAAO,EAAE,SAAA,QAAA,EAAK;MACZ,aAAa,CAAC,CAAC,UAAU,CAAC;IAC5B;EAAC,CAAA,CACD,CACE,CACP,EAEA,OAAO,CAAC,iBAAiB,IAAI,CAAC,cAAc,CAAC,IAAI,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,KAAK,EAAE;EAAE,CAAA,CAAI,EACnE,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,yBAAyB,CAAC,CAC9C,EACL,OAAO,CAAC,UAAU,CAAC,KAClB,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IAAC,QAAQ,EAAE,CAAC;IAAE,KAAK,EAAC;EAAM,CAAA,EAC3B,cAAc,CACX,CACP,CACG;AAEV,CAAC","sourceRoot":"","sourcesContent":["import React, { Children, useRef } from \"react\";\nimport { Box } from \"./Box\";\nimport { IconButton } from \"./IconButton\";\nimport { useTableContext } from \"./tableContext\";\n/**\n * Use TableRow to define a row in Table.\n */\nexport const TableRow = ({ children, headerRow = false, expanded, drawerContents, color = \"white\", }) => {\n    const [isExpanded, setIsExpanded] = React.useState(expanded || false);\n    const { columns, hasDrawerContents } = useTableContext();\n    const rowRef = useRef(null);\n    const renderCellWithColumnIndex = (child, index) => {\n        if (!columns[index]) {\n            console.warn(`No width defined for column ${index} in TableRow`);\n            return null;\n        }\n        return (React.createElement(Box, { paddingX: 2, width: columns[index] }, child));\n    };\n    const border = { __style: { borderBottom: `${headerRow ? 2 : 1}px solid #e0e0e0` } };\n    return (React.createElement(Box, { ref: rowRef, color: color, dangerouslySetInlineStyle: border, width: \"100%\" },\n        React.createElement(Box, { direction: \"row\", paddingY: 1, width: \"100%\" },\n            Boolean(drawerContents) && (React.createElement(Box, { width: 30 },\n                React.createElement(IconButton, { accessibilityLabel: \"expand\", bgColor: \"white\", icon: isExpanded ? \"chevron-up\" : \"chevron-down\", iconColor: \"darkGray\", size: \"sm\", onClick: () => {\n                        setIsExpanded(!isExpanded);\n                    } }))),\n            Boolean(hasDrawerContents && !drawerContents) && React.createElement(Box, { width: 30 }),\n            Children.map(children, renderCellWithColumnIndex)),\n        Boolean(isExpanded) && (React.createElement(Box, { paddingX: 2, width: \"100%\" }, drawerContents))));\n};\n//# sourceMappingURL=TableRow.js.map"]},"metadata":{},"sourceType":"module"}