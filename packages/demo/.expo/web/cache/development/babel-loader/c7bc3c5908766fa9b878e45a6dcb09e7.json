{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { withStyleAnimation } from \"../animation/styleAnimation\";\nimport { makeUIMutable } from \"../mutables\";\nimport { LayoutAnimationType } from \"./animationBuilder\";\nimport { runOnUIImmediately } from \"../threads\";\nvar TAG_OFFSET = 1e9;\nvar _worklet_15506333783207_init_data = {\n  code: \"function startObservingProgress(tag, sharedValue, animationType) {\\n  const {\\n    LayoutAnimationType,\\n    TAG_OFFSET\\n  } = this._closure;\\n  const isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\\n  sharedValue.addListener(tag + TAG_OFFSET, function () {\\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\\n  });\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"startObservingProgress\\\",\\\"tag\\\",\\\"sharedValue\\\",\\\"animationType\\\",\\\"LayoutAnimationType\\\",\\\"TAG_OFFSET\\\",\\\"_closure\\\",\\\"isSharedTransition\\\",\\\"SHARED_ELEMENT_TRANSITION\\\",\\\"addListener\\\",\\\"_notifyAboutProgress\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"],\\\"mappings\\\":\\\"AAKA,SAAAA,sBAASA,CAAuBC,GAAA,EAAGC,WAAE,EAAWC,aAAE,EAAa;EAAA;IAAAC,mBAAA;IAAAC;EAAA,SAAAC,QAAA;EAG7D,MAAMC,kBAAkB,GAAGJ,aAAa,KAAKC,mBAAmB,CAACI,yBAAyB;EAC1FN,WAAW,CAACO,WAAW,CAACR,GAAG,GAAGI,UAAU,EAAE,YAAM;IAC9CK,oBAAoB,CAACT,GAAG,EAAEC,WAAW,CAACS,KAAK,EAAEJ,kBAAkB,CAAC;EAClE,CAAC,CAAC;AACJ\\\"}\"\n};\nvar startObservingProgress = function () {\n  var _e = [new global.Error(), -3, -27];\n  var _f = function _f(tag, sharedValue, animationType) {\n    var isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n    sharedValue.addListener(tag + TAG_OFFSET, function () {\n      _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n    });\n  };\n  _f._closure = {\n    LayoutAnimationType: LayoutAnimationType,\n    TAG_OFFSET: TAG_OFFSET\n  };\n  _f.__initData = _worklet_15506333783207_init_data;\n  _f.__workletHash = 15506333783207;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_15203130483910_init_data = {\n  code: \"function stopObservingProgress(tag, sharedValue, cancelled, removeView) {\\n  const {\\n    TAG_OFFSET\\n  } = this._closure;\\n  sharedValue.removeListener(tag + TAG_OFFSET);\\n  _notifyAboutEnd(tag, cancelled, removeView);\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"stopObservingProgress\\\",\\\"tag\\\",\\\"sharedValue\\\",\\\"cancelled\\\",\\\"removeView\\\",\\\"TAG_OFFSET\\\",\\\"_closure\\\",\\\"removeListener\\\",\\\"_notifyAboutEnd\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"],\\\"mappings\\\":\\\"AAaA,SAAAA,qBAASA,CAAsBC,GAAA,EAAGC,WAAE,EAAWC,SAAE,EAASC,UAAE,EAAU;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpEJ,WAAW,CAACK,cAAc,CAACN,GAAG,GAAGI,UAAU,CAAC;EAC5CG,eAAe,CAACP,GAAG,EAAEE,SAAS,EAAEC,UAAU,CAAC;AAC7C\\\"}\"\n};\nvar stopObservingProgress = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(tag, sharedValue, cancelled, removeView) {\n    sharedValue.removeListener(tag + TAG_OFFSET);\n    _notifyAboutEnd(tag, cancelled, removeView);\n  };\n  _f._closure = {\n    TAG_OFFSET: TAG_OFFSET\n  };\n  _f.__initData = _worklet_15203130483910_init_data;\n  _f.__workletHash = 15203130483910;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_14187014265590_init_data = {\n  code: \"function createLayoutAnimationManager() {\\n  const {\\n    LayoutAnimationType,\\n    makeUIMutable,\\n    stopObservingProgress,\\n    withStyleAnimation,\\n    startObservingProgress\\n  } = this._closure;\\n  const enteringAnimationForTag = new Map();\\n  const mutableValuesForTag = new Map();\\n  return {\\n    start: function (tag, type, yogaValues, config) {\\n      const style = config(yogaValues);\\n      let currentAnimation = style.animations;\\n      if (type === LayoutAnimationType.ENTERING) {\\n        enteringAnimationForTag.set(tag, currentAnimation);\\n      } else if (type === LayoutAnimationType.LAYOUT) {\\n        const enteringAnimation = enteringAnimationForTag.get(tag);\\n        if (enteringAnimation) {\\n          currentAnimation = {\\n            ...enteringAnimation,\\n            ...style.animations\\n          };\\n        }\\n      }\\n      let value = mutableValuesForTag.get(tag);\\n      if (value === undefined) {\\n        value = makeUIMutable(style.initialValues);\\n        mutableValuesForTag.set(tag, value);\\n      } else {\\n        stopObservingProgress(tag, value, false, false);\\n        value._value = style.initialValues;\\n      }\\n      const animation = withStyleAnimation(currentAnimation);\\n      animation.callback = function (finished) {\\n        if (finished) {\\n          enteringAnimationForTag.delete(tag);\\n          mutableValuesForTag.delete(tag);\\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\\n          stopObservingProgress(tag, value, finished, shouldRemoveView);\\n        }\\n        style.callback && style.callback(finished === undefined ? false : finished);\\n      };\\n      startObservingProgress(tag, value, type);\\n      value.value = animation;\\n    },\\n    stop: function (tag) {\\n      const value = mutableValuesForTag.get(tag);\\n      if (!value) {\\n        return;\\n      }\\n      stopObservingProgress(tag, value, true, true);\\n    }\\n  };\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createLayoutAnimationManager\\\",\\\"LayoutAnimationType\\\",\\\"makeUIMutable\\\",\\\"stopObservingProgress\\\",\\\"withStyleAnimation\\\",\\\"startObservingProgress\\\",\\\"_closure\\\",\\\"enteringAnimationForTag\\\",\\\"Map\\\",\\\"mutableValuesForTag\\\",\\\"start\\\",\\\"tag\\\",\\\"type\\\",\\\"yogaValues\\\",\\\"config\\\",\\\"style\\\",\\\"currentAnimation\\\",\\\"animations\\\",\\\"ENTERING\\\",\\\"set\\\",\\\"LAYOUT\\\",\\\"enteringAnimation\\\",\\\"get\\\",\\\"value\\\",\\\"undefined\\\",\\\"initialValues\\\",\\\"_value\\\",\\\"animation\\\",\\\"callback\\\",\\\"finished\\\",\\\"delete\\\",\\\"shouldRemoveView\\\",\\\"EXITING\\\",\\\"stop\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"],\\\"mappings\\\":\\\"AAmBA,SAAAA,4BAASA,CAAA,EAA4B;EAAA;IAAAC,mBAAA;IAAAC,aAAA;IAAAC,qBAAA;IAAAC,kBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnC,MAAMC,uBAAuB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzC,MAAMC,mBAAmB,GAAG,IAAID,GAAG,CAAC,CAAC;EACrC,OAAO;IACLE,KAAK,WAAAA,CAACC,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAE;MACnC,MAAMC,KAAK,GAAGD,MAAM,CAACD,UAAU,CAAC;MAChC,IAAIG,gBAAgB,GAAGD,KAAK,CAACE,UAAU;MACvC,IAAIL,IAAI,KAAKX,mBAAmB,CAACiB,QAAQ,EAAE;QACzCX,uBAAuB,CAACY,GAAG,CAACR,GAAG,EAAEK,gBAAgB,CAAC;MACpD,CAAC,MAAM,IAAIJ,IAAI,KAAKX,mBAAmB,CAACmB,MAAM,EAAE;QAG9C,MAAMC,iBAAiB,GAAGd,uBAAuB,CAACe,GAAG,CAACX,GAAG,CAAC;QAC1D,IAAIU,iBAAiB,EAAE;UACrBL,gBAAgB,GAAG;YACjB,GAAGK,iBAAiB;YACpB,GAAGN,KAAK,CAACE;UACX,CAAC;QACH;MACF;MACA,IAAIM,KAAK,GAAGd,mBAAmB,CAACa,GAAG,CAACX,GAAG,CAAC;MACxC,IAAIY,KAAK,KAAKC,SAAS,EAAE;QACvBD,KAAK,GAAGrB,aAAa,CAACa,KAAK,CAACU,aAAa,CAAC;QAC1ChB,mBAAmB,CAACU,GAAG,CAACR,GAAG,EAAEY,KAAK,CAAC;MACrC,CAAC,MAAM;QACLpB,qBAAqB,CAACQ,GAAG,EAAEY,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAC/CA,KAAK,CAACG,MAAM,GAAGX,KAAK,CAACU,aAAa;MACpC;MAGA,MAAME,SAAS,GAAGvB,kBAAkB,CAACY,gBAAgB,CAAC;MACtDW,SAAS,CAACC,QAAQ,GAAG,UAAAC,QAAQ,EAAI;QAC/B,IAAIA,QAAQ,EAAE;UACZtB,uBAAuB,CAACuB,MAAM,CAACnB,GAAG,CAAC;UACnCF,mBAAmB,CAACqB,MAAM,CAACnB,GAAG,CAAC;UAC/B,MAAMoB,gBAAgB,GAAGnB,IAAI,KAAKX,mBAAmB,CAAC+B,OAAO;UAC7D7B,qBAAqB,CAACQ,GAAG,EAAEY,KAAK,EAAEM,QAAQ,EAAEE,gBAAgB,CAAC;QAC/D;QACAhB,KAAK,CAACa,QAAQ,IAAIb,KAAK,CAACa,QAAQ,CAACC,QAAQ,KAAKL,SAAS,GAAG,KAAK,GAAGK,QAAQ,CAAC;MAC7E,CAAC;MACDxB,sBAAsB,CAACM,GAAG,EAAEY,KAAK,EAAEX,IAAI,CAAC;MACxCW,KAAK,CAACA,KAAK,GAAGI,SAAS;IACzB,CAAC;IACDM,IAAI,WAAAA,CAACtB,GAAG,EAAE;MACR,MAAMY,KAAK,GAAGd,mBAAmB,CAACa,GAAG,CAACX,GAAG,CAAC;MAC1C,IAAI,CAACY,KAAK,EAAE;QACV;MACF;MACApB,qBAAqB,CAACQ,GAAG,EAAEY,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/C;EACF,CAAC;AACH\\\"}\"\n};\nvar createLayoutAnimationManager = function () {\n  var _e = [new global.Error(), -6, -27];\n  var _f = function _f() {\n    var enteringAnimationForTag = new Map();\n    var mutableValuesForTag = new Map();\n    return {\n      start: function start(tag, type, yogaValues, config) {\n        var style = config(yogaValues);\n        var currentAnimation = style.animations;\n        if (type === LayoutAnimationType.ENTERING) {\n          enteringAnimationForTag.set(tag, currentAnimation);\n        } else if (type === LayoutAnimationType.LAYOUT) {\n          var enteringAnimation = enteringAnimationForTag.get(tag);\n          if (enteringAnimation) {\n            currentAnimation = _objectSpread(_objectSpread({}, enteringAnimation), style.animations);\n          }\n        }\n        var value = mutableValuesForTag.get(tag);\n        if (value === undefined) {\n          value = makeUIMutable(style.initialValues);\n          mutableValuesForTag.set(tag, value);\n        } else {\n          stopObservingProgress(tag, value, false, false);\n          value._value = style.initialValues;\n        }\n        var animation = withStyleAnimation(currentAnimation);\n        animation.callback = function (finished) {\n          if (finished) {\n            enteringAnimationForTag.delete(tag);\n            mutableValuesForTag.delete(tag);\n            var shouldRemoveView = type === LayoutAnimationType.EXITING;\n            stopObservingProgress(tag, value, finished, shouldRemoveView);\n          }\n          style.callback && style.callback(finished === undefined ? false : finished);\n        };\n        startObservingProgress(tag, value, type);\n        value.value = animation;\n      },\n      stop: function stop(tag) {\n        var value = mutableValuesForTag.get(tag);\n        if (!value) {\n          return;\n        }\n        stopObservingProgress(tag, value, true, true);\n      }\n    };\n  };\n  _f._closure = {\n    LayoutAnimationType: LayoutAnimationType,\n    makeUIMutable: makeUIMutable,\n    stopObservingProgress: stopObservingProgress,\n    withStyleAnimation: withStyleAnimation,\n    startObservingProgress: startObservingProgress\n  };\n  _f.__initData = _worklet_14187014265590_init_data;\n  _f.__workletHash = 14187014265590;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_14784208921142_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    createLayoutAnimationManager\\n  } = this._closure;\\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\\n}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"createLayoutAnimationManager\\\",\\\"_closure\\\",\\\"global\\\",\\\"LayoutAnimationsManager\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"],\\\"mappings\\\":\\\"AAyEmB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvBC,MAAM,CAACC,uBAAuB,GAAGH,4BAA4B,CAAC,CAAC;AACjE\\\"}\"\n};\nrunOnUIImmediately(function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f() {\n    global.LayoutAnimationsManager = createLayoutAnimationManager();\n  };\n  _f._closure = {\n    createLayoutAnimationManager: createLayoutAnimationManager\n  };\n  _f.__initData = _worklet_14784208921142_init_data;\n  _f.__workletHash = 14784208921142;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}())();","map":{"version":3,"sources":["animationsManager.ts"],"names":["withStyleAnimation","makeUIMutable","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","_notifyAboutProgress","value","stopObservingProgress","cancelled","removeView","removeListener","_notifyAboutEnd","createLayoutAnimationManager","enteringAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","style","currentAnimation","animations","ENTERING","set","LAYOUT","enteringAnimation","get","undefined","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","global","LayoutAnimationsManager"],"mappings":"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","sourcesContent":["import { withStyleAnimation } from '../animation/styleAnimation';\nimport { SharedValue } from '../commonTypes';\nimport { makeUIMutable } from '../mutables';\nimport {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n  LayoutAnimationsValues,\n} from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  cancelled: boolean,\n  removeView: boolean\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, cancelled, removeView);\n}\n\nfunction createLayoutAnimationManager() {\n  'worklet';\n  const enteringAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      yogaValues: LayoutAnimationsValues,\n      config: LayoutAnimationFunction\n    ) {\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      if (type === LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === LayoutAnimationType.LAYOUT) {\n        // When layout animation is requested, but entering is still running, we merge\n        // new layout animation targets into the ongoing animation\n        const enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = { ...enteringAnimation, ...style.animations };\n        }\n      }\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value, false, false);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method – don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, finished, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value, true, true);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n"]},"metadata":{},"sourceType":"module"}