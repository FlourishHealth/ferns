{"ast":null,"code":"import React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Drawer } from \"react-native-drawer-layout\";\nimport { isMobileDevice } from \"./MediaQuery\";\nvar DEFAULT_STYLES = {\n  width: Platform.OS === \"web\" ? \"40%\" : \"95%\",\n  backgroundColor: \"lightgray\",\n  borderWidth: 1,\n  borderColor: \"gray\",\n  overflow: isMobileDevice() ? undefined : \"scroll\"\n};\nexport var SideDrawer = function SideDrawer(_ref) {\n  var _ref$position = _ref.position,\n    position = _ref$position === void 0 ? \"left\" : _ref$position,\n    isOpen = _ref.isOpen,\n    renderContent = _ref.renderContent,\n    _ref$onClose = _ref.onClose,\n    onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n    _ref$onOpen = _ref.onOpen,\n    onOpen = _ref$onOpen === void 0 ? function () {} : _ref$onOpen,\n    _ref$drawerType = _ref.drawerType,\n    drawerType = _ref$drawerType === void 0 ? \"front\" : _ref$drawerType,\n    children = _ref.children,\n    _ref$drawerStyles = _ref.drawerStyles,\n    drawerStyles = _ref$drawerStyles === void 0 ? {} : _ref$drawerStyles;\n  var renderDrawerContent = function renderDrawerContent() {\n    return React.createElement(SafeAreaView, null, renderContent());\n  };\n  return React.createElement(Drawer, {\n    drawerPosition: position,\n    drawerStyle: [DEFAULT_STYLES, drawerStyles, {\n      display: Platform.OS === \"web\" && !isOpen ? \"none\" : \"flex\",\n      right: position === \"right\" ? 0 : undefined,\n      left: position === \"left\" ? 0 : undefined\n    }],\n    drawerType: drawerType,\n    open: isOpen,\n    renderDrawerContent: renderDrawerContent,\n    onClose: onClose,\n    onOpen: onOpen\n  }, children);\n};","map":{"version":3,"sources":["../src/SideDrawer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAqB,MAAM,OAAO;AAAC,OAAA,QAAA;AAAA,OAAA,YAAA;AAE1C,SAAQ,MAAM,QAAO,4BAA4B;AAGjD,SAAQ,cAAc,QAAO,cAAc;AAE3C,IAAM,cAAc,GAAyB;EAC3C,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;EAC5C,eAAe,EAAE,WAAW;EAC5B,WAAW,EAAE,CAAC;EACd,WAAW,EAAE,MAAM;EACnB,QAAQ,EAAE,cAAc,CAAA,CAAE,GAAG,SAAS,GAAG;CAC1C;AAED,OAAO,IAAM,UAAU,GAAG,SAAb,UAAU,CAAA,IAAA,EASa;EAAA,IAAA,aAAA,GAAA,IAAA,CARlC,QAAQ;IAAR,QAAQ,GAAA,aAAA,cAAG,MAAM,GAAA,aAAA;IACjB,MAAM,GAAA,IAAA,CAAN,MAAM;IACN,aAAa,GAAA,IAAA,CAAb,aAAa;IAAA,YAAA,GAAA,IAAA,CACb,OAAO;IAAP,OAAO,GAAA,YAAA,cAAG,YAAK,CAAE,CAAC,GAAA,YAAA;IAAA,WAAA,GAAA,IAAA,CAClB,MAAM;IAAN,MAAM,GAAA,WAAA,cAAG,YAAK,CAAE,CAAC,GAAA,WAAA;IAAA,eAAA,GAAA,IAAA,CACjB,UAAU;IAAV,UAAU,GAAA,eAAA,cAAG,OAAO,GAAA,eAAA;IACpB,QAAQ,GAAA,IAAA,CAAR,QAAQ;IAAA,iBAAA,GAAA,IAAA,CACR,YAAY;IAAZ,YAAY,GAAA,iBAAA,cAAG,CAAA,CAAE,GAAA,iBAAA;EAEjB,IAAM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAA,EAAsB;IAC7C,OAAO,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA,IAAA,EAAE,aAAa,CAAA,CAAE,CAAgB;EACvD,CAAC;EAED,OACE,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA;IACL,cAAc,EAAE,QAAQ;IACxB,WAAW,EAAE,CACX,cAAc,EACd,YAAY,EACZ;MACE,OAAO,EAAE,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM;MAC3D,KAAK,EAAE,QAAQ,KAAK,OAAO,GAAG,CAAC,GAAG,SAAS;MAC3C,IAAI,EAAE,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAG;KACjC,CACF;IACD,UAAU,EAAE,UAAU;IACtB,IAAI,EAAE,MAAM;IACZ,mBAAmB,EAAE,mBAAmB;IACxC,OAAO,EAAE,OAAO;IAChB,MAAM,EAAE;EAAM,CAAA,EAEb,QAAQ,CACF;AAEb,CAAC","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Platform, SafeAreaView } from \"react-native\";\nimport { Drawer } from \"react-native-drawer-layout\";\nimport { isMobileDevice } from \"./MediaQuery\";\nconst DEFAULT_STYLES = {\n    width: Platform.OS === \"web\" ? \"40%\" : \"95%\",\n    backgroundColor: \"lightgray\",\n    borderWidth: 1,\n    borderColor: \"gray\",\n    overflow: isMobileDevice() ? undefined : \"scroll\",\n};\nexport const SideDrawer = ({ position = \"left\", isOpen, renderContent, onClose = () => { }, onOpen = () => { }, drawerType = \"front\", children, drawerStyles = {}, }) => {\n    const renderDrawerContent = () => {\n        return React.createElement(SafeAreaView, null, renderContent());\n    };\n    return (React.createElement(Drawer, { drawerPosition: position, drawerStyle: [\n            DEFAULT_STYLES,\n            drawerStyles,\n            {\n                display: Platform.OS === \"web\" && !isOpen ? \"none\" : \"flex\",\n                right: position === \"right\" ? 0 : undefined,\n                left: position === \"left\" ? 0 : undefined,\n            },\n        ], drawerType: drawerType, open: isOpen, renderDrawerContent: renderDrawerContent, onClose: onClose, onOpen: onOpen }, children));\n};\n//# sourceMappingURL=SideDrawer.js.map"]},"metadata":{},"sourceType":"module"}