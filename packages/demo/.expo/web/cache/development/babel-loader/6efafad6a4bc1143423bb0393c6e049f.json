{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport { shouldBeUseWeb } from '../PlatformChecker';\nvar _worklet_4899742148771_init_data = {\n  code: \"function anonymous(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useDerivedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"sharedValue\\\",\\\"updater\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useDerivedValue.js\\\"],\\\"mappings\\\":\\\"AAuCgB,SAAAA,SAAMA,CAAA,QAAAC,WAAA,CAAAC,OAAA,OAAAC,SAAA,CAGhBF,WAAW,CAACG,KAAK,CAAGF,OAAO,CAAC,CAAC,CAC/B\\\"}\",\n  version: \"3.6.3\"\n};\nexport function useDerivedValue(updater, dependencies) {\n  var _updater$__closure;\n  var initRef = useRef(null);\n  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});\n  if (shouldBeUseWeb()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n  }\n  if (dependencies === undefined) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n  var sharedValue = initRef.current;\n  useEffect(function () {\n    var fun = function () {\n      var _e = [new global.Error(), -3, -27];\n      var anonymous = function anonymous() {\n        sharedValue.value = updater();\n      };\n      anonymous.__closure = {\n        sharedValue: sharedValue,\n        updater: updater\n      };\n      anonymous.__workletHash = 4899742148771;\n      anonymous.__initData = _worklet_4899742148771_init_data;\n      anonymous.__stackDetails = _e;\n      return anonymous;\n    }();\n    var mapperId = startMapper(fun, inputs, [sharedValue]);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    return function () {\n      initRef.current = null;\n    };\n  }, []);\n  return sharedValue;\n}","map":{"version":3,"sources":["useDerivedValue.ts"],"names":["useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","shouldBeUseWeb","useDerivedValue","updater","dependencies","initRef","inputs","Object","values","__closure","length","undefined","__workletHash","push","current","sharedValue","fun","value","mapperId"],"mappings":"AAAA,YAAY;;AAAA,OAAA,kBAAA;AACZ,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,SAASC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,SAAS;AAE9D,SAASC,cAAc,QAAQ,oBAAoB;AAAA,IAAA,gCAAA;EAAA,IAAA;EAAA,QAAA;EAAA,SAAA;EAAA,OAAA;AAAA;AAkBnD,OAAO,SAASC,eAAeA,CAC7BC,OAAmC,EACnCC,YAA6B,EACR;EAAA,IAAA,kBAAA;EACrB,IAAMC,OAAO,GAAGT,MAAM,CAA4B,IAAI,CAAC;EACvD,IAAIU,MAAM,GAAGC,MAAM,CAACC,MAAM,EAAA,kBAAA,GAACL,OAAO,CAACM,SAAS,YAAA,kBAAA,GAAI,CAAC,CAAC,CAAC;EACnD,IAAIR,cAAc,CAAA,CAAE,EAAE;IAAA,IAAA,aAAA;IACpB,IAAI,CAACK,MAAM,CAACI,MAAM,IAAA,CAAA,aAAA,GAAIN,YAAY,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,IAAZA,aAAAA,CAAcM,MAAM,EAAE;MAE1CJ,MAAM,GAAGF,YAAY;IACvB;EACF;EAGA,IAAIA,YAAY,KAAKO,SAAS,EAAE;IAC9BP,YAAY,MAAA,MAAA,CAAA,kBAAA,CAAOE,MAAM,IAAEH,OAAO,CAACS,aAAa,EAAC;EACnD,CAAC,MAAM;IACLR,YAAY,CAACS,IAAI,CAACV,OAAO,CAACS,aAAa,CAAC;EAC1C;EAEA,IAAIP,OAAO,CAACS,OAAO,KAAK,IAAI,EAAE;IAC5BT,OAAO,CAACS,OAAO,GAAGhB,WAAW,CAACD,iBAAiB,CAACM,OAAO,CAAC,CAAC;EAC3D;EAGA,IAAMY,WAA+B,GAAGV,OAAO,CAACS,OAAQ;EAExDnB,SAAS,CAAC,YAAM;IACd,IAAMqB,GAAG,GAAGA;MAAAA,IAAAA,EAAAA,QAAAA,MAAAA,CAAAA,KAAAA;MAAAA,IAAAA,SAAAA,YAAAA,UAAAA,EAAM;QAEhBD,WAAW,CAACE,KAAK,GAAGd,OAAO,CAAA,CAAE;MAC/B,CAAC;MAAA,SAAA,CAAA,SAAA;QAAA,WAAA,EADCY,WAAW;QAAA,OAAA,EAASZ;MAAO;MAAA,SAAA,CAAA,aAAA;MAAA,SAAA,CAAA,UAAA,GAAA,gCAAA;MAAA,SAAA,CAAA,cAAA,GAAA,EAAA;MAAA,OAAA,SAAA;IAAA,CAFjBa,EAGX;IACD,IAAME,QAAQ,GAAGnB,WAAW,CAACiB,GAAG,EAAEV,MAAM,EAAE,CAACS,WAAW,CAAC,CAAC;IACxD,OAAO,YAAM;MACXf,UAAU,CAACkB,QAAQ,CAAC;IACtB,CAAC;EACH,CAAC,EAAEd,YAAY,CAAC;EAEhBT,SAAS,CAAC,YAAM;IACd,OAAO,YAAM;MACXU,OAAO,CAACS,OAAO,GAAG,IAAI;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOC,WAAW;AACpB","sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\nexport type DerivedValue<Value> = Readonly<SharedValue<Value>>;\n\n/**\n * Lets you create new shared values based on existing ones while keeping them reactive.\n *\n * @param updater - A function called whenever at least one of the shared values or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const sharedValue: SharedValue<Value> = initRef.current!;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  return sharedValue;\n}\n"]},"metadata":{},"sourceType":"module"}