{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Box, Button, FlatList, Heading, SideDrawer, Text } from \"ferns-ui\";\nimport React, { useState } from \"react\";\nimport { StorybookContainer } from \"./StorybookContainer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DrawerStory = function DrawerStory(_ref) {\n  var position = _ref.position;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  var users = Array.from(Array(100).keys()).map(function (i) {\n    return {\n      name: `user${i}`,\n      id: i\n    };\n  });\n  return _jsx(SideDrawer, {\n    isOpen: open,\n    position: position,\n    renderContent: function renderContent() {\n      return _jsxs(Box, {\n        height: \"100%\",\n        children: [_jsx(Box, {\n          children: _jsx(Heading, {\n            children: \"Drawer Heading\"\n          })\n        }), _jsx(FlatList, {\n          data: users,\n          renderItem: function renderItem(item) {\n            return _jsx(Box, {\n              children: _jsx(Text, {\n                children: item.item.name\n              })\n            });\n          }\n        })]\n      });\n    },\n    onClose: function onClose() {\n      return setOpen(false);\n    },\n    onOpen: function onOpen() {\n      return setOpen(true);\n    },\n    children: _jsx(StorybookContainer, {\n      children: _jsx(Button, {\n        text: \"Open drawer\",\n        onClick: function onClick() {\n          setOpen(function (prevOpen) {\n            return !prevOpen;\n          });\n        }\n      })\n    })\n  });\n};\nexport var SideDrawerStories = {\n  title: \"SideDrawer\",\n  component: SideDrawer,\n  stories: {\n    SideDrawerFromLeft: function SideDrawerFromLeft() {\n      return _jsx(DrawerStory, {\n        position: \"left\"\n      });\n    },\n    SideDrawerFromRight: function SideDrawerFromRight() {\n      return _jsx(DrawerStory, {\n        position: \"right\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["Box","Button","FlatList","Heading","SideDrawer","Text","React","useState","StorybookContainer","jsx","_jsx","jsxs","_jsxs","DrawerStory","_ref","position","_useState","_useState2","_slicedToArray","open","setOpen","users","Array","from","keys","map","i","name","id","isOpen","renderContent","height","children","data","renderItem","item","onClose","onOpen","text","onClick","prevOpen","SideDrawerStories","title","component","stories","SideDrawerFromLeft","SideDrawerFromRight"],"sources":["/Users/josh/src/ui/packages/ui-demo/src/SideDrawer.stories.tsx"],"sourcesContent":["import {Box, Button, FlatList, Heading, SideDrawer, Text} from \"ferns-ui\";\nimport React, {useState} from \"react\";\n\nimport {StorybookContainer} from \"./StorybookContainer\";\n\ninterface DrawerStoryProps {\n  position: \"right\" | \"left\";\n}\n\nconst DrawerStory = ({position}: DrawerStoryProps) => {\n  const [open, setOpen] = useState(false);\n\n  const users = Array.from(Array(100).keys()).map((i) => ({\n    name: `user${i}`,\n    id: i,\n  }));\n\n  return (\n    <SideDrawer\n      isOpen={open}\n      position={position}\n      renderContent={() => (\n        <Box height=\"100%\">\n          <Box>\n            <Heading>Drawer Heading</Heading>\n          </Box>\n          <FlatList\n            data={users}\n            renderItem={(item) => (\n              <Box>\n                <Text>{item.item.name}</Text>\n              </Box>\n            )}\n          />\n        </Box>\n      )}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <StorybookContainer>\n        <Button\n          text=\"Open drawer\"\n          onClick={() => {\n            setOpen((prevOpen) => !prevOpen);\n          }}\n        />\n      </StorybookContainer>\n    </SideDrawer>\n  );\n};\n\nexport const SideDrawerStories = {\n  title: \"SideDrawer\",\n  component: SideDrawer,\n  stories: {\n    SideDrawerFromLeft() {\n      return <DrawerStory position=\"left\" />;\n    },\n    SideDrawerFromRight() {\n      return <DrawerStory position=\"right\" />;\n    },\n  },\n};\n"],"mappings":";AAAA,SAAQA,GAAG,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,EAAEC,IAAI,QAAO,UAAU;AACzE,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,SAAQC,kBAAkB;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMxD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAqC;EAAA,IAAhCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC5B,IAAAC,SAAA,GAAwBT,QAAQ,CAAC,KAAK,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,UAACC,CAAC;IAAA,OAAM;MACtDC,IAAI,EAAG,OAAMD,CAAE,EAAC;MAChBE,EAAE,EAAEF;IACN,CAAC;EAAA,CAAC,CAAC;EAEH,OACEhB,IAAA,CAACN,UAAU;IACTyB,MAAM,EAAEV,IAAK;IACbJ,QAAQ,EAAEA,QAAS;IACnBe,aAAa,EAAE,SAAAA,cAAA;MAAA,OACblB,KAAA,CAACZ,GAAG;QAAC+B,MAAM,EAAC,MAAM;QAAAC,QAAA,GAChBtB,IAAA,CAACV,GAAG;UAAAgC,QAAA,EACFtB,IAAA,CAACP,OAAO;YAAA6B,QAAA,EAAC;UAAc,CAAS;QAAC,CAC9B,CAAC,EACNtB,IAAA,CAACR,QAAQ;UACP+B,IAAI,EAAEZ,KAAM;UACZa,UAAU,EAAE,SAAAA,WAACC,IAAI;YAAA,OACfzB,IAAA,CAACV,GAAG;cAAAgC,QAAA,EACFtB,IAAA,CAACL,IAAI;gBAAA2B,QAAA,EAAEG,IAAI,CAACA,IAAI,CAACR;cAAI,CAAO;YAAC,CAC1B,CAAC;UAAA;QACN,CACH,CAAC;MAAA,CACC,CAAC;IAAA,CACN;IACFS,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMhB,OAAO,CAAC,KAAK,CAAC;IAAA,CAAC;IAC9BiB,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMjB,OAAO,CAAC,IAAI,CAAC;IAAA,CAAC;IAAAY,QAAA,EAE5BtB,IAAA,CAACF,kBAAkB;MAAAwB,QAAA,EACjBtB,IAAA,CAACT,MAAM;QACLqC,IAAI,EAAC,aAAa;QAClBC,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbnB,OAAO,CAAC,UAACoB,QAAQ;YAAA,OAAK,CAACA,QAAQ;UAAA,EAAC;QAClC;MAAE,CACH;IAAC,CACgB;EAAC,CACX,CAAC;AAEjB,CAAC;AAED,OAAO,IAAMC,iBAAiB,GAAG;EAC/BC,KAAK,EAAE,YAAY;EACnBC,SAAS,EAAEvC,UAAU;EACrBwC,OAAO,EAAE;IACPC,kBAAkB,WAAAA,mBAAA,EAAG;MACnB,OAAOnC,IAAA,CAACG,WAAW;QAACE,QAAQ,EAAC;MAAM,CAAE,CAAC;IACxC,CAAC;IACD+B,mBAAmB,WAAAA,oBAAA,EAAG;MACpB,OAAOpC,IAAA,CAACG,WAAW;QAACE,QAAQ,EAAC;MAAO,CAAE,CAAC;IACzC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}