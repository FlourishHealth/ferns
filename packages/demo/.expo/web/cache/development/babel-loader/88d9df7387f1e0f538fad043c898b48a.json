{"ast":null,"code":"import React, { useMemo } from \"react\";\nimport { isMobileDevice } from \"./MediaQuery\";\nimport { MobileAddressAutocomplete } from \"./MobileAddressAutoComplete\";\nimport { TextField } from \"./TextField\";\nimport { isNative, isValidGoogleApiKey } from \"./Utilities\";\nimport { WebAddressAutocomplete } from \"./WebAddressAutocomplete\";\nexport var UnifiedAddressAutoCompleteField = function UnifiedAddressAutoCompleteField(_ref) {\n  var disabled = _ref.disabled,\n    googleMapsApiKey = _ref.googleMapsApiKey,\n    googlePlacesMobileStyles = _ref.googlePlacesMobileStyles,\n    includeCounty = _ref.includeCounty,\n    inputValue = _ref.inputValue,\n    handleAddressChange = _ref.handleAddressChange,\n    handleAutoCompleteChange = _ref.handleAutoCompleteChange,\n    testID = _ref.testID;\n  var isWeb = typeof document !== \"undefined\";\n  var isValidatedGoogleApiKey = useMemo(function () {\n    return googleMapsApiKey ? isValidGoogleApiKey(googleMapsApiKey) : false;\n  }, [googleMapsApiKey]);\n  if (isWeb && isValidatedGoogleApiKey) {\n    return React.createElement(WebAddressAutocomplete, {\n      disabled: disabled,\n      googleMapsApiKey: googleMapsApiKey,\n      handleAddressChange: handleAddressChange,\n      handleAutoCompleteChange: handleAutoCompleteChange,\n      includeCounty: includeCounty,\n      inputValue: inputValue,\n      testID: testID\n    });\n  } else if (isMobileDevice() && isNative() && isValidatedGoogleApiKey) {\n    return React.createElement(MobileAddressAutocomplete, {\n      disabled: disabled,\n      googleMapsApiKey: googleMapsApiKey,\n      handleAddressChange: handleAddressChange,\n      handleAutoCompleteChange: handleAutoCompleteChange,\n      includeCounty: includeCounty,\n      inputValue: inputValue,\n      styles: googlePlacesMobileStyles,\n      testID: testID\n    });\n  } else {\n    return React.createElement(TextField, {\n      disabled: disabled,\n      label: \"Street Address\",\n      placeholder: \"Enter an address\",\n      testID: testID,\n      type: \"text\",\n      value: inputValue,\n      onChange: function onChange(_ref2) {\n        var value = _ref2.value;\n        handleAddressChange({\n          value: value\n        });\n      }\n    });\n  }\n};","map":{"version":3,"sources":["../src/UnifiedAddressAutoComplete.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAG,OAAO,QAAO,OAAO;AAGpC,SAAQ,cAAc;AACtB,SAAQ,yBAAyB;AACjC,SAAQ,SAAS;AACjB,SAAQ,QAAQ,EAAE,mBAAmB;AACrC,SAAQ,sBAAsB;AAE9B,OAAO,IAAM,+BAA+B,GAAG,SAAlC,+BAA+B,CAAA,IAAA,EASb;EAAA,IAR7B,QAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,gBAAgB,GAAA,IAAA,CAAhB,gBAAgB;IAChB,wBAAwB,GAAA,IAAA,CAAxB,wBAAwB;IACxB,aAAa,GAAA,IAAA,CAAb,aAAa;IACb,UAAU,GAAA,IAAA,CAAV,UAAU;IACV,mBAAmB,GAAA,IAAA,CAAnB,mBAAmB;IACnB,wBAAwB,GAAA,IAAA,CAAxB,wBAAwB;IACxB,MAAM,GAAA,IAAA,CAAN,MAAM;EAEN,IAAM,KAAK,GAAG,OAAO,QAAQ,KAAK,WAAW;EAC7C,IAAM,uBAAuB,GAAG,OAAO,CACrC;IAAA,OAAO,gBAAgB,GAAG,mBAAmB,CAAC,gBAAgB,CAAC,GAAG,KAAK;EAAA,CAAC,EACxE,CAAC,gBAAgB,CAAC,CACnB;EAED,IAAI,KAAK,IAAI,uBAAuB,EAAE;IACpC,OACE,KAAA,CAAA,aAAA,CAAC,sBAAsB,EAAA;MACrB,QAAQ,EAAE,QAAQ;MAClB,gBAAgB,EAAE,gBAAgB;MAClC,mBAAmB,EAAE,mBAAmB;MACxC,wBAAwB,EAAE,wBAAwB;MAClD,aAAa,EAAE,aAAa;MAC5B,UAAU,EAAE,UAAU;MACtB,MAAM,EAAE;IAAM,CAAA,CACd;EAEN,CAAC,MAAM,IAAI,cAAc,CAAA,CAAE,IAAI,QAAQ,CAAA,CAAE,IAAI,uBAAuB,EAAE;IACpE,OACE,KAAA,CAAA,aAAA,CAAC,yBAAyB,EAAA;MACxB,QAAQ,EAAE,QAAQ;MAClB,gBAAgB,EAAE,gBAAgB;MAClC,mBAAmB,EAAE,mBAAmB;MACxC,wBAAwB,EAAE,wBAAwB;MAClD,aAAa,EAAE,aAAa;MAC5B,UAAU,EAAE,UAAU;MACtB,MAAM,EAAE,wBAAwB;MAChC,MAAM,EAAE;IAAM,CAAA,CACd;EAEN,CAAC,MAAM;IACL,OACE,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA;MACR,QAAQ,EAAE,QAAQ;MAClB,KAAK,EAAC,gBAAgB;MACtB,WAAW,EAAC,kBAAkB;MAC9B,MAAM,EAAE,MAAM;MACd,IAAI,EAAC,MAAM;MACX,KAAK,EAAE,UAAU;MACjB,QAAQ,EAAE,SAAA,SAAA,KAAA,EAAkB;QAAA,IAAhB,KAAK,GAAA,KAAA,CAAL,KAAK;QACf,mBAAmB,CAAC;UAAC,KAAK,EAAL;QAAK,CAAC,CAAC;MAC9B;IAAC,CAAA,CACD;EAEN;AACF,CAAC","sourceRoot":"","sourcesContent":["import React, { useMemo } from \"react\";\nimport { isMobileDevice } from \"./MediaQuery\";\nimport { MobileAddressAutocomplete } from \"./MobileAddressAutoComplete\";\nimport { TextField } from \"./TextField\";\nimport { isNative, isValidGoogleApiKey } from \"./Utilities\";\nimport { WebAddressAutocomplete } from \"./WebAddressAutocomplete\";\nexport const UnifiedAddressAutoCompleteField = ({ disabled, googleMapsApiKey, googlePlacesMobileStyles, includeCounty, inputValue, handleAddressChange, handleAutoCompleteChange, testID, }) => {\n    const isWeb = typeof document !== \"undefined\";\n    const isValidatedGoogleApiKey = useMemo(() => (googleMapsApiKey ? isValidGoogleApiKey(googleMapsApiKey) : false), [googleMapsApiKey]);\n    if (isWeb && isValidatedGoogleApiKey) {\n        return (React.createElement(WebAddressAutocomplete, { disabled: disabled, googleMapsApiKey: googleMapsApiKey, handleAddressChange: handleAddressChange, handleAutoCompleteChange: handleAutoCompleteChange, includeCounty: includeCounty, inputValue: inputValue, testID: testID }));\n    }\n    else if (isMobileDevice() && isNative() && isValidatedGoogleApiKey) {\n        return (React.createElement(MobileAddressAutocomplete, { disabled: disabled, googleMapsApiKey: googleMapsApiKey, handleAddressChange: handleAddressChange, handleAutoCompleteChange: handleAutoCompleteChange, includeCounty: includeCounty, inputValue: inputValue, styles: googlePlacesMobileStyles, testID: testID }));\n    }\n    else {\n        return (React.createElement(TextField, { disabled: disabled, label: \"Street Address\", placeholder: \"Enter an address\", testID: testID, type: \"text\", value: inputValue, onChange: ({ value }) => {\n                handleAddressChange({ value });\n            } }));\n    }\n};\n//# sourceMappingURL=UnifiedAddressAutoComplete.js.map"]},"metadata":{},"sourceType":"module"}