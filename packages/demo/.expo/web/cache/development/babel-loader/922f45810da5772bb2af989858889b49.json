{"ast":null,"code":"'use strict';\n\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { isSharedValue } from '../reanimated2';\nimport { isChromeDebugger } from '../reanimated2/PlatformChecker';\nimport WorkletEventHandler from '../reanimated2/WorkletEventHandler';\nimport { initialUpdaterRun } from '../reanimated2/animation';\nimport { hasInlineStyles, getInlineStyle } from './InlinePropManager';\nimport { flattenArray, has } from './utils';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nfunction dummyListener() {}\nexport var PropsFilter = function () {\n  function PropsFilter() {\n    _classCallCheck(this, PropsFilter);\n    _defineProperty(this, \"_initialStyle\", {});\n  }\n  _createClass(PropsFilter, [{\n    key: \"filterNonAnimatedProps\",\n    value: function filterNonAnimatedProps(component) {\n      var _this = this;\n      var inputProps = component.props;\n      var props = {};\n      var _loop = function _loop() {\n        var value = inputProps[key];\n        if (key === 'style') {\n          var styleProp = inputProps.style;\n          var styles = flattenArray(styleProp != null ? styleProp : []);\n          var processedStyle = styles.map(function (style) {\n            if (style && style.viewDescriptors) {\n              style.viewsRef.add(component);\n              if (component._isFirstRender) {\n                _this._initialStyle = _objectSpread(_objectSpread(_objectSpread({}, style.initial.value), _this._initialStyle), initialUpdaterRun(style.initial.updater));\n              }\n              return _this._initialStyle;\n            } else if (hasInlineStyles(style)) {\n              return getInlineStyle(style, component._isFirstRender);\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          var animatedProp = inputProps.animatedProps;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach(function (key) {\n              var _animatedProp$initial, _animatedProp$viewsRe;\n              props[key] = (_animatedProp$initial = animatedProp.initial) === null || _animatedProp$initial === void 0 ? void 0 : _animatedProp$initial.value[key];\n              (_animatedProp$viewsRe = animatedProp.viewsRef) === null || _animatedProp$viewsRe === void 0 ? void 0 : _animatedProp$viewsRe.add(component);\n            });\n          }\n        } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach(function (eventName) {\n              props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (component._isFirstRender) {\n            props[key] = value.value;\n          }\n        } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n          props[key] = value;\n        }\n      };\n      for (var key in inputProps) {\n        _loop();\n      }\n      return props;\n    }\n  }]);\n  return PropsFilter;\n}();","map":{"version":3,"sources":["PropsFilter.tsx"],"names":["isSharedValue","isChromeDebugger","WorkletEventHandler","initialUpdaterRun","hasInlineStyles","getInlineStyle","flattenArray","has","dummyListener","PropsFilter","constructor","filterNonAnimatedProps","component","inputProps","props","key","value","styleProp","style","styles","processedStyle","map","viewDescriptors","viewsRef","add","_isFirstRender","_initialStyle","initial","updater","StyleSheet","flatten","animatedProp","animatedProps","undefined","Object","keys","forEach","current","eventNames","length","eventName","listeners"],"mappings":"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","sourcesContent":["'use strict';\nimport type { StyleProps, SharedValue } from '../reanimated2';\nimport { isSharedValue } from '../reanimated2';\nimport { isChromeDebugger } from '../reanimated2/PlatformChecker';\nimport WorkletEventHandler from '../reanimated2/WorkletEventHandler';\nimport { initialUpdaterRun } from '../reanimated2/animation';\nimport { hasInlineStyles, getInlineStyle } from './InlinePropManager';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  IAnimatedComponentInternal,\n  IPropsFilter,\n} from './commonTypes';\nimport { flattenArray, has } from './utils';\nimport { StyleSheet } from 'react-native';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nexport class PropsFilter implements IPropsFilter {\n  private _initialStyle = {};\n\n  public filterNonAnimatedProps(\n    component: React.Component<unknown, unknown> & IAnimatedComponentInternal\n  ): Record<string, unknown> {\n    const inputProps =\n      component.props as AnimatedComponentProps<InitialComponentProps>;\n    const props: Record<string, unknown> = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray<StyleProps>(styleProp ?? []);\n        const processedStyle: StyleProps = styles.map((style) => {\n          if (style && style.viewDescriptors) {\n            // this is how we recognize styles returned by useAnimatedStyle\n            style.viewsRef.add(component);\n            if (component._isFirstRender) {\n              this._initialStyle = {\n                ...style.initial.value,\n                ...this._initialStyle,\n                ...initialUpdaterRun<StyleProps>(style.initial.updater),\n              };\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, component._isFirstRender);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps as Partial<\n          AnimatedComponentProps<AnimatedProps>\n        >;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach((key) => {\n            props[key] = animatedProp.initial?.value[key];\n            animatedProp.viewsRef?.add(component);\n          });\n        }\n      } else if (\n        has('current', value) &&\n        value.current instanceof WorkletEventHandler\n      ) {\n        if (value.current.eventNames.length > 0) {\n          value.current.eventNames.forEach((eventName) => {\n            props[eventName] = has('listeners', value.current)\n              ? (value.current.listeners as Record<string, unknown>)[eventName]\n              : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (component._isFirstRender) {\n          props[key] = (value as SharedValue<unknown>).value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}