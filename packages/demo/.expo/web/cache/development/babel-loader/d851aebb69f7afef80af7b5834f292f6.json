{"ast":null,"code":"'use strict';\n\nimport { hsvToColor, RGBtoHSV, rgbaColor, processColor, red, green, blue, opacity } from './Colors';\nimport { makeMutable } from './core';\nimport { Extrapolation, interpolate } from './interpolation';\nimport { useSharedValue } from './hook/useSharedValue';\nexport var Extrapolate = Extrapolation;\nvar _worklet_14693378975429_init_data = {\n  code: \"function anonymous(value,inputRange,colors,options){const{interpolate,Extrapolation,hsvToColor}=this.__closure;let h=0;const{useCorrectedHSVInterpolation=true}=options;if(useCorrectedHSVInterpolation){const correctedInputRange=[inputRange[0]];const originalH=colors.h;const correctedH=[originalH[0]];for(let i=1;i<originalH.length;++i){const d=originalH[i]-originalH[i-1];if(originalH[i]>originalH[i-1]&&d>0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]-1);correctedH.push(originalH[i]);}else if(originalH[i]<originalH[i-1]&&d<-0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]+1);correctedH.push(originalH[i]);}else{correctedInputRange.push(inputRange[i]);correctedH.push(originalH[i]);}}h=(interpolate(value,correctedInputRange,correctedH,Extrapolation.CLAMP)+1)%1;}else{h=interpolate(value,inputRange,colors.h,Extrapolation.CLAMP);}const s=interpolate(value,inputRange,colors.s,Extrapolation.CLAMP);const v=interpolate(value,inputRange,colors.v,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);return hsvToColor(h,s,v,a);}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"hsvToColor\\\",\\\"__closure\\\",\\\"h\\\",\\\"useCorrectedHSVInterpolation\\\",\\\"correctedInputRange\\\",\\\"originalH\\\",\\\"correctedH\\\",\\\"i\\\",\\\"length\\\",\\\"d\\\",\\\"push\\\",\\\"CLAMP\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"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\\\"}\",\n  version: \"3.6.3\"\n};\nvar interpolateColorsHSV = function () {\n  var _e = [new global.Error(), -4, -27];\n  var anonymous = function anonymous(value, inputRange, colors, options) {\n    var h = 0;\n    var _options$useCorrected = options.useCorrectedHSVInterpolation,\n      useCorrectedHSVInterpolation = _options$useCorrected === void 0 ? true : _options$useCorrected;\n    if (useCorrectedHSVInterpolation) {\n      var correctedInputRange = [inputRange[0]];\n      var originalH = colors.h;\n      var correctedH = [originalH[0]];\n      for (var i = 1; i < originalH.length; ++i) {\n        var d = originalH[i] - originalH[i - 1];\n        if (originalH[i] > originalH[i - 1] && d > 0.5) {\n          correctedInputRange.push(inputRange[i]);\n          correctedInputRange.push(inputRange[i] + 0.00001);\n          correctedH.push(originalH[i] - 1);\n          correctedH.push(originalH[i]);\n        } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n          correctedInputRange.push(inputRange[i]);\n          correctedInputRange.push(inputRange[i] + 0.00001);\n          correctedH.push(originalH[i] + 1);\n          correctedH.push(originalH[i]);\n        } else {\n          correctedInputRange.push(inputRange[i]);\n          correctedH.push(originalH[i]);\n        }\n      }\n      h = (interpolate(value, correctedInputRange, correctedH, Extrapolation.CLAMP) + 1) % 1;\n    } else {\n      h = interpolate(value, inputRange, colors.h, Extrapolation.CLAMP);\n    }\n    var s = interpolate(value, inputRange, colors.s, Extrapolation.CLAMP);\n    var v = interpolate(value, inputRange, colors.v, Extrapolation.CLAMP);\n    var a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n    return hsvToColor(h, s, v, a);\n  };\n  anonymous.__closure = {\n    interpolate: interpolate,\n    Extrapolation: Extrapolation,\n    hsvToColor: hsvToColor\n  };\n  anonymous.__workletHash = 14693378975429;\n  anonymous.__initData = _worklet_14693378975429_init_data;\n  anonymous.__stackDetails = _e;\n  return anonymous;\n}();\nvar _worklet_9548966570765_init_data = {\n  code: \"function anonymous(x,gamma){return x.map(function(v){return Math.pow(v/255,gamma);});}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"x\\\",\\\"gamma\\\",\\\"map\\\",\\\"v\\\",\\\"Math\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AA4DsB,QAAC,CAAAA,SAAGA,CAAKC,CAAA,CAAKC,KAAA,EAGlC,MAAO,CAAAD,CAAC,CAACE,GAAG,CAAC,SAAAC,CAAC,QAAI,CAAAC,IAAI,CAACC,GAAG,CAACF,CAAC,CAAG,GAAG,CAAEF,KAAK,CAAC,GAAC,CAC7C\\\"}\",\n  version: \"3.6.3\"\n};\nvar toLinearSpace = function () {\n  var _e = [new global.Error(), 1, -27];\n  var anonymous = function anonymous(x, gamma) {\n    return x.map(function (v) {\n      return Math.pow(v / 255, gamma);\n    });\n  };\n  anonymous.__closure = {};\n  anonymous.__workletHash = 9548966570765;\n  anonymous.__initData = _worklet_9548966570765_init_data;\n  anonymous.__stackDetails = _e;\n  return anonymous;\n}();\nvar _worklet_12849438514316_init_data = {\n  code: \"function anonymous(x,gamma){return Math.round(Math.pow(x,1/gamma)*255);}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"x\\\",\\\"gamma\\\",\\\"Math\\\",\\\"round\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAiEqB,QAAC,CAAAA,SAAGA,CAAKC,CAAA,CAAKC,KAAA,EAGjC,MAAO,CAAAC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,CAAE,CAAC,CAAGC,KAAK,CAAC,CAAG,GAAG,CAAC,CACjD\\\"}\",\n  version: \"3.6.3\"\n};\nvar toGammaSpace = function () {\n  var _e = [new global.Error(), 1, -27];\n  var anonymous = function anonymous(x, gamma) {\n    return Math.round(Math.pow(x, 1 / gamma) * 255);\n  };\n  anonymous.__closure = {};\n  anonymous.__workletHash = 12849438514316;\n  anonymous.__initData = _worklet_12849438514316_init_data;\n  anonymous.__stackDetails = _e;\n  return anonymous;\n}();\nvar _worklet_16236720403479_init_data = {\n  code: \"function anonymous(value,inputRange,colors,options){const{toLinearSpace,interpolate,Extrapolation,rgbaColor,toGammaSpace}=this.__closure;const{gamma=2.2}=options;let{r:outputR,g:outputG,b:outputB}=colors;if(gamma!==1){outputR=toLinearSpace(outputR,gamma);outputG=toLinearSpace(outputG,gamma);outputB=toLinearSpace(outputB,gamma);}const r=interpolate(value,inputRange,outputR,Extrapolation.CLAMP);const g=interpolate(value,inputRange,outputG,Extrapolation.CLAMP);const b=interpolate(value,inputRange,outputB,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);if(gamma===1){return rgbaColor(r,g,b,a);}return rgbaColor(toGammaSpace(r,gamma),toGammaSpace(g,gamma),toGammaSpace(b,gamma),a);}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"toLinearSpace\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"rgbaColor\\\",\\\"toGammaSpace\\\",\\\"__closure\\\",\\\"gamma\\\",\\\"r\\\",\\\"outputR\\\",\\\"g\\\",\\\"outputG\\\",\\\"b\\\",\\\"outputB\\\",\\\"CLAMP\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAsE6B,QAAC,CAAAA,SAAOA,CAAAC,KAAA,CAAAC,UAAkB,CAAEC,MAAA,CAAOC,OAAK,QAAAC,aAAA,CAAAC,WAAA,CAAAC,aAAA,CAAAC,SAAA,CAAAC,YAAA,OAAAC,SAAA,CAGnE,KAAM,CACJC,KAAK,CAAG,GACV,CAAC,CAAGP,OAAO,CACX,GAAI,CACFQ,CAAC,CAAEC,OAAO,CACVC,CAAC,CAAEC,OAAO,CACVC,CAAC,CAAEC,OACL,CAAC,CAAGd,MAAM,CACV,GAAIQ,KAAK,GAAK,CAAC,CAAE,CACfE,OAAO,CAAGR,aAAa,CAACQ,OAAO,CAAEF,KAAK,CAAC,CACvCI,OAAO,CAAGV,aAAa,CAACU,OAAO,CAAEJ,KAAK,CAAC,CACvCM,OAAO,CAAGZ,aAAa,CAACY,OAAO,CAAEN,KAAK,CAAC,CACzC,CACA,KAAM,CAAAC,CAAC,CAAGN,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEW,OAAO,CAAEN,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAJ,CAAC,CAAGR,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEa,OAAO,CAAER,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAF,CAAC,CAAGV,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEe,OAAO,CAAEV,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAC,CAAC,CAAGb,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACgB,CAAC,CAAEZ,aAAa,CAACW,KAAK,CAAC,CACvE,GAAIP,KAAK,GAAK,CAAC,CAAE,CACf,MAAO,CAAAH,SAAS,CAACI,CAAC,CAAEE,CAAC,CAAEE,CAAC,CAAEG,CAAC,CAAC,CAC9B,CACA,MAAO,CAAAX,SAAS,CAACC,YAAY,CAACG,CAAC,CAAED,KAAK,CAAC,CAAEF,YAAY,CAACK,CAAC,CAAEH,KAAK,CAAC,CAAEF,YAAY,CAACO,CAAC,CAAEL,KAAK,CAAC,CAAEQ,CAAC,CAAC,CAC7F\\\"}\",\n  version: \"3.6.3\"\n};\nvar interpolateColorsRGB = function () {\n  var _e = [new global.Error(), -6, -27];\n  var anonymous = function anonymous(value, inputRange, colors, options) {\n    var _options$gamma = options.gamma,\n      gamma = _options$gamma === void 0 ? 2.2 : _options$gamma;\n    var outputR = colors.r,\n      outputG = colors.g,\n      outputB = colors.b;\n    if (gamma !== 1) {\n      outputR = toLinearSpace(outputR, gamma);\n      outputG = toLinearSpace(outputG, gamma);\n      outputB = toLinearSpace(outputB, gamma);\n    }\n    var r = interpolate(value, inputRange, outputR, Extrapolation.CLAMP);\n    var g = interpolate(value, inputRange, outputG, Extrapolation.CLAMP);\n    var b = interpolate(value, inputRange, outputB, Extrapolation.CLAMP);\n    var a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n    if (gamma === 1) {\n      return rgbaColor(r, g, b, a);\n    }\n    return rgbaColor(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\n  };\n  anonymous.__closure = {\n    toLinearSpace: toLinearSpace,\n    interpolate: interpolate,\n    Extrapolation: Extrapolation,\n    rgbaColor: rgbaColor,\n    toGammaSpace: toGammaSpace\n  };\n  anonymous.__workletHash = 16236720403479;\n  anonymous.__initData = _worklet_16236720403479_init_data;\n  anonymous.__stackDetails = _e;\n  return anonymous;\n}();\nvar _worklet_8695722846819_init_data = {\n  code: \"function anonymous(colors){const{processColor,red,green,blue,opacity}=this.__closure;const r=[];const g=[];const b=[];const a=[];for(let i=0;i<colors.length;++i){const color=colors[i];const processedColor=processColor(color);if(processedColor!==null&&processedColor!==undefined){r.push(red(processedColor));g.push(green(processedColor));b.push(blue(processedColor));a.push(opacity(processedColor));}}return{r:r,g:g,b:b,a:a};}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"colors\\\",\\\"processColor\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"opacity\\\",\\\"__closure\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"a\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"undefined\\\",\\\"push\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AA+F0B,SAAAA,SAAMA,CAAIC,MAAA,QAAAC,YAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,OAAA,OAAAC,SAAA,CAGlC,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGX,MAAM,CAACY,MAAM,CAAE,EAAED,CAAC,CAAE,CACtC,KAAM,CAAAE,KAAK,CAAGb,MAAM,CAACW,CAAC,CAAC,CACvB,KAAM,CAAAG,cAAc,CAAGb,YAAY,CAACY,KAAK,CAAC,CAE1C,GAAIC,cAAc,GAAK,IAAI,EAAIA,cAAc,GAAKC,SAAS,CAAE,CAC3DR,CAAC,CAACS,IAAI,CAACd,GAAG,CAACY,cAAc,CAAC,CAAC,CAC3BN,CAAC,CAACQ,IAAI,CAACb,KAAK,CAACW,cAAc,CAAC,CAAC,CAC7BL,CAAC,CAACO,IAAI,CAACZ,IAAI,CAACU,cAAc,CAAC,CAAC,CAC5BJ,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC,CACjC,CACF,CACA,MAAO,CACLP,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,CACDC,CAAA,CAAAA,CACF,CAAC,CACH\\\"}\",\n  version: \"3.6.3\"\n};\nvar getInterpolateRGB = function () {\n  var _e = [new global.Error(), -6, -27];\n  var anonymous = function anonymous(colors) {\n    var r = [];\n    var g = [];\n    var b = [];\n    var a = [];\n    for (var i = 0; i < colors.length; ++i) {\n      var color = colors[i];\n      var processedColor = processColor(color);\n      if (processedColor !== null && processedColor !== undefined) {\n        r.push(red(processedColor));\n        g.push(green(processedColor));\n        b.push(blue(processedColor));\n        a.push(opacity(processedColor));\n      }\n    }\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  };\n  anonymous.__closure = {\n    processColor: processColor,\n    red: red,\n    green: green,\n    blue: blue,\n    opacity: opacity\n  };\n  anonymous.__workletHash = 8695722846819;\n  anonymous.__initData = _worklet_8695722846819_init_data;\n  anonymous.__stackDetails = _e;\n  return anonymous;\n}();\nvar _worklet_14757969761783_init_data = {\n  code: \"function anonymous(colors){const{processColor,RGBtoHSV,red,green,blue,opacity}=this.__closure;const h=[];const s=[];const v=[];const a=[];for(let i=0;i<colors.length;++i){const color=colors[i];const processedColor=processColor(color);if(typeof processedColor==='number'){const processedHSVColor=RGBtoHSV(red(processedColor),green(processedColor),blue(processedColor));h.push(processedHSVColor.h);s.push(processedHSVColor.s);v.push(processedHSVColor.v);a.push(opacity(processedColor));}}return{h:h,s:s,v:v,a:a};}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"colors\\\",\\\"processColor\\\",\\\"RGBtoHSV\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"opacity\\\",\\\"__closure\\\",\\\"h\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"processedHSVColor\\\",\\\"push\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAwH0B,SAAAA,SAAMA,CAAIC,MAAA,QAAAC,YAAA,CAAAC,QAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,OAAA,OAAAC,SAAA,CAGlC,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,MAAM,CAACa,MAAM,CAAE,EAAED,CAAC,CAAE,CACtC,KAAM,CAAAE,KAAK,CAAGd,MAAM,CAACY,CAAC,CAAC,CACvB,KAAM,CAAAG,cAAc,CAAGd,YAAY,CAACa,KAAK,CAAC,CAC1C,GAAI,MAAO,CAAAC,cAAc,GAAK,QAAQ,CAAE,CACtC,KAAM,CAAAC,iBAAiB,CAAGd,QAAQ,CAACC,GAAG,CAACY,cAAc,CAAC,CAAEX,KAAK,CAACW,cAAc,CAAC,CAAEV,IAAI,CAACU,cAAc,CAAC,CAAC,CACpGP,CAAC,CAACS,IAAI,CAACD,iBAAiB,CAACR,CAAC,CAAC,CAC3BC,CAAC,CAACQ,IAAI,CAACD,iBAAiB,CAACP,CAAC,CAAC,CAC3BC,CAAC,CAACO,IAAI,CAACD,iBAAiB,CAACN,CAAC,CAAC,CAC3BC,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC,CACjC,CACF,CACA,MAAO,CACLP,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,CACDC,CAAA,CAAAA,CACF,CAAC,CACH\\\"}\",\n  version: \"3.6.3\"\n};\nvar getInterpolateHSV = function () {\n  var _e = [new global.Error(), -7, -27];\n  var anonymous = function anonymous(colors) {\n    var h = [];\n    var s = [];\n    var v = [];\n    var a = [];\n    for (var i = 0; i < colors.length; ++i) {\n      var color = colors[i];\n      var processedColor = processColor(color);\n      if (typeof processedColor === 'number') {\n        var processedHSVColor = RGBtoHSV(red(processedColor), green(processedColor), blue(processedColor));\n        h.push(processedHSVColor.h);\n        s.push(processedHSVColor.s);\n        v.push(processedHSVColor.v);\n        a.push(opacity(processedColor));\n      }\n    }\n    return {\n      h: h,\n      s: s,\n      v: v,\n      a: a\n    };\n  };\n  anonymous.__closure = {\n    processColor: processColor,\n    RGBtoHSV: RGBtoHSV,\n    red: red,\n    green: green,\n    blue: blue,\n    opacity: opacity\n  };\n  anonymous.__workletHash = 14757969761783;\n  anonymous.__initData = _worklet_14757969761783_init_data;\n  anonymous.__stackDetails = _e;\n  return anonymous;\n}();\nvar _worklet_3691367513248_init_data = {\n  code: \"function interpolateColor(value,inputRange,outputRange){const{interpolateColorsHSV,getInterpolateHSV,interpolateColorsRGB,getInterpolateRGB}=this.__closure;let colorSpace=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'RGB';let options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};if(colorSpace==='HSV'){return interpolateColorsHSV(value,inputRange,getInterpolateHSV(outputRange),options);}else if(colorSpace==='RGB'){return interpolateColorsRGB(value,inputRange,getInterpolateRGB(outputRange),options);}throw new Error(\\\"[Reanimated] Invalid color space provided: \\\"+colorSpace+\\\". Supported values are: ['RGB', 'HSV'].\\\");}\",\n  location: \"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColor\\\",\\\"value\\\",\\\"inputRange\\\",\\\"outputRange\\\",\\\"interpolateColorsHSV\\\",\\\"getInterpolateHSV\\\",\\\"interpolateColorsRGB\\\",\\\"getInterpolateRGB\\\",\\\"__closure\\\",\\\"colorSpace\\\",\\\"arguments\\\",\\\"length\\\",\\\"undefined\\\",\\\"options\\\",\\\"Error\\\"],\\\"sources\\\":[\\\"/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AA8JO,SAAAA,gBAASA,CAAiBC,KAAA,CAAKC,UAAE,CAAUC,WAAE,CAAW,OAAAC,oBAAA,CAAAC,iBAAA,CAAAC,oBAAA,CAAAC,iBAAA,OAAAC,SAAA,CAG7D,GAAI,CAAAC,UAAU,CAAGC,SAAS,CAACC,MAAM,CAAG,CAAC,EAAID,SAAS,CAAC,CAAC,CAAC,GAAKE,SAAS,CAAGF,SAAS,CAAC,CAAC,CAAC,CAAG,KAAK,CAC1F,GAAI,CAAAG,OAAO,CAAGH,SAAS,CAACC,MAAM,CAAG,CAAC,EAAID,SAAS,CAAC,CAAC,CAAC,GAAKE,SAAS,CAAGF,SAAS,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,CACpF,GAAID,UAAU,GAAK,KAAK,CAAE,CACxB,MAAO,CAAAL,oBAAoB,CAACH,KAAK,CAAEC,UAAU,CAAEG,iBAAiB,CAACF,WAAW,CAAC,CAAEU,OAAO,CAAC,CACzF,CAAC,IAAM,IAAIJ,UAAU,GAAK,KAAK,CAAE,CAC/B,MAAO,CAAAH,oBAAoB,CAACL,KAAK,CAAEC,UAAU,CAAEK,iBAAiB,CAACJ,WAAW,CAAC,CAAEU,OAAO,CAAC,CACzF,CACA,KAAM,IAAI,CAAAC,KAAK,+CAA+CL,UAAW,0CAAwC,CAAC,CACpH\\\"}\",\n  version: \"3.6.3\"\n};\nexport var interpolateColor = function () {\n  var _e = [new global.Error(), -5, -27];\n  var interpolateColor = function interpolateColor(value, inputRange, outputRange) {\n    var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    if (colorSpace === 'HSV') {\n      return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\n    } else if (colorSpace === 'RGB') {\n      return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\n    }\n    throw new Error(`[Reanimated] Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV'].`);\n  };\n  interpolateColor.__closure = {\n    interpolateColorsHSV: interpolateColorsHSV,\n    getInterpolateHSV: getInterpolateHSV,\n    interpolateColorsRGB: interpolateColorsRGB,\n    getInterpolateRGB: getInterpolateRGB\n  };\n  interpolateColor.__workletHash = 3691367513248;\n  interpolateColor.__initData = _worklet_3691367513248_init_data;\n  interpolateColor.__stackDetails = _e;\n  return interpolateColor;\n}();\nexport var ColorSpace = function (ColorSpace) {\n  ColorSpace[ColorSpace[\"RGB\"] = 0] = \"RGB\";\n  ColorSpace[ColorSpace[\"HSV\"] = 1] = \"HSV\";\n  return ColorSpace;\n}({});\nexport function useInterpolateConfig(inputRange, outputRange) {\n  var colorSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ColorSpace.RGB;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return useSharedValue({\n    inputRange: inputRange,\n    outputRange: outputRange,\n    colorSpace: colorSpace,\n    cache: makeMutable(null),\n    options: options\n  });\n}","map":{"version":3,"sources":["interpolateColor.ts"],"names":["hsvToColor","RGBtoHSV","rgbaColor","processColor","red","green","blue","opacity","makeMutable","Extrapolation","interpolate","useSharedValue","Extrapolate","interpolateColorsHSV","value","inputRange","colors","options","h","useCorrectedHSVInterpolation","correctedInputRange","originalH","correctedH","i","length","d","push","CLAMP","s","v","a","toLinearSpace","x","gamma","map","Math","pow","toGammaSpace","round","interpolateColorsRGB","r","outputR","g","outputG","b","outputB","getInterpolateRGB","color","processedColor","undefined","getInterpolateHSV","processedHSVColor","interpolateColor","outputRange","colorSpace","Error","ColorSpace","useInterpolateConfig","RGB","cache"],"mappings":"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","sourcesContent":["'use strict';\nimport {\n  hsvToColor,\n  RGBtoHSV,\n  rgbaColor,\n  processColor,\n  red,\n  green,\n  blue,\n  opacity,\n} from './Colors';\nimport { makeMutable } from './core';\nimport { Extrapolation, interpolate } from './interpolation';\nimport type { SharedValue } from './commonTypes';\nimport { useSharedValue } from './hook/useSharedValue';\n\n/**\n * @deprecated Please use Extrapolation instead\n */\nexport const Extrapolate = Extrapolation;\n\n/**\n * Options for color interpolation.\n *\n * @param gamma - Gamma value used in gamma correction. Defaults to `2.2`.\n * @param useCorrectedHSVInterpolation - Whether to reduce the number of colors the interpolation has to go through. Defaults to `true`.\n */\nexport type InterpolationOptions = {\n  gamma?: number;\n  useCorrectedHSVInterpolation?: boolean;\n};\n\nconst interpolateColorsHSV = (\n  value: number,\n  inputRange: readonly number[],\n  colors: InterpolateHSV,\n  options: InterpolationOptions\n) => {\n  'worklet';\n  let h = 0;\n  const { useCorrectedHSVInterpolation = true } = options;\n  if (useCorrectedHSVInterpolation) {\n    // if the difference between hues in a range is > 180 deg\n    // then move the hue at the right end of the range +/- 360 deg\n    // and add the next point in the original place + 0.00001 with original hue\n    // to not break the next range\n    const correctedInputRange = [inputRange[0]];\n    const originalH = colors.h;\n    const correctedH = [originalH[0]];\n\n    for (let i = 1; i < originalH.length; ++i) {\n      const d = originalH[i] - originalH[i - 1];\n      if (originalH[i] > originalH[i - 1] && d > 0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] - 1);\n        correctedH.push(originalH[i]);\n      } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] + 1);\n        correctedH.push(originalH[i]);\n      } else {\n        correctedInputRange.push(inputRange[i]);\n        correctedH.push(originalH[i]);\n      }\n    }\n    h =\n      (interpolate(\n        value,\n        correctedInputRange,\n        correctedH,\n        Extrapolation.CLAMP\n      ) +\n        1) %\n      1;\n  } else {\n    h = interpolate(value, inputRange, colors.h, Extrapolation.CLAMP);\n  }\n  const s = interpolate(value, inputRange, colors.s, Extrapolation.CLAMP);\n  const v = interpolate(value, inputRange, colors.v, Extrapolation.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n  return hsvToColor(h, s, v, a);\n};\n\nconst toLinearSpace = (x: number[], gamma: number): number[] => {\n  'worklet';\n  return x.map((v) => Math.pow(v / 255, gamma));\n};\n\nconst toGammaSpace = (x: number, gamma: number): number => {\n  'worklet';\n  return Math.round(Math.pow(x, 1 / gamma) * 255);\n};\n\nconst interpolateColorsRGB = (\n  value: number,\n  inputRange: readonly number[],\n  colors: InterpolateRGB,\n  options: InterpolationOptions\n) => {\n  'worklet';\n  const { gamma = 2.2 } = options;\n  let { r: outputR, g: outputG, b: outputB } = colors;\n  if (gamma !== 1) {\n    outputR = toLinearSpace(outputR, gamma);\n    outputG = toLinearSpace(outputG, gamma);\n    outputB = toLinearSpace(outputB, gamma);\n  }\n  const r = interpolate(value, inputRange, outputR, Extrapolation.CLAMP);\n  const g = interpolate(value, inputRange, outputG, Extrapolation.CLAMP);\n  const b = interpolate(value, inputRange, outputB, Extrapolation.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n  if (gamma === 1) {\n    return rgbaColor(r, g, b, a);\n  }\n  return rgbaColor(\n    toGammaSpace(r, gamma),\n    toGammaSpace(g, gamma),\n    toGammaSpace(b, gamma),\n    a\n  );\n};\n\nexport interface InterpolateRGB {\n  r: number[];\n  g: number[];\n  b: number[];\n  a: number[];\n}\n\nconst getInterpolateRGB = (\n  colors: readonly (string | number)[]\n): InterpolateRGB => {\n  'worklet';\n\n  const r = [];\n  const g = [];\n  const b = [];\n  const a = [];\n  for (let i = 0; i < colors.length; ++i) {\n    const color = colors[i];\n    const processedColor = processColor(color);\n    // explicit check in case if processedColor is 0\n    if (processedColor !== null && processedColor !== undefined) {\n      r.push(red(processedColor));\n      g.push(green(processedColor));\n      b.push(blue(processedColor));\n      a.push(opacity(processedColor));\n    }\n  }\n  return { r, g, b, a };\n};\n\nexport interface InterpolateHSV {\n  h: number[];\n  s: number[];\n  v: number[];\n  a: number[];\n}\n\nconst getInterpolateHSV = (\n  colors: readonly (string | number)[]\n): InterpolateHSV => {\n  'worklet';\n  const h = [];\n  const s = [];\n  const v = [];\n  const a = [];\n  for (let i = 0; i < colors.length; ++i) {\n    const color = colors[i];\n    const processedColor = processColor(color) as any;\n    if (typeof processedColor === 'number') {\n      const processedHSVColor = RGBtoHSV(\n        red(processedColor),\n        green(processedColor),\n        blue(processedColor)\n      );\n\n      h.push(processedHSVColor.h);\n      s.push(processedHSVColor.s);\n      v.push(processedHSVColor.v);\n      a.push(opacity(processedColor));\n    }\n  }\n  return { h, s, v, a };\n};\n\n/**\n * Lets you map a value from a range of numbers to a range of colors using linear interpolation.\n *\n * @param value - A number from the `input` range that is going to be mapped to the color in the `output` range.\n * @param inputRange - An array of numbers specifying the input range of the interpolation.\n * @param outputRange - An array of output colors values (eg. \"red\", \"#00FFCC\", \"rgba(255, 0, 0, 0.5)\").\n * @param colorSpace - The color space to use for interpolation. Defaults to 'RGB'.\n * @param options - Additional options for interpolation - {@link InterpolationOptions}.\n * @returns The color after interpolation from within the output range in rgba(r, g, b, a) format.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/interpolateColor\n */\nexport function interpolateColor(\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly string[],\n  colorSpace?: 'RGB' | 'HSV',\n  options?: InterpolationOptions\n): string;\n\nexport function interpolateColor(\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly number[],\n  colorSpace?: 'RGB' | 'HSV',\n  options?: InterpolationOptions\n): number;\n\nexport function interpolateColor(\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly (string | number)[],\n  colorSpace: 'RGB' | 'HSV' = 'RGB',\n  options: InterpolationOptions = {}\n): string | number {\n  'worklet';\n  if (colorSpace === 'HSV') {\n    return interpolateColorsHSV(\n      value,\n      inputRange,\n      getInterpolateHSV(outputRange),\n      options\n    );\n  } else if (colorSpace === 'RGB') {\n    return interpolateColorsRGB(\n      value,\n      inputRange,\n      getInterpolateRGB(outputRange),\n      options\n    );\n  }\n  throw new Error(\n    `[Reanimated] Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV'].`\n  );\n}\n\nexport enum ColorSpace {\n  RGB = 0,\n  HSV = 1,\n}\n\nexport interface InterpolateConfig {\n  inputRange: readonly number[];\n  outputRange: readonly (string | number)[];\n  colorSpace: ColorSpace;\n  cache: SharedValue<InterpolateRGB | InterpolateHSV | null>;\n  options: InterpolationOptions;\n}\n\nexport function useInterpolateConfig(\n  inputRange: readonly number[],\n  outputRange: readonly (string | number)[],\n  colorSpace = ColorSpace.RGB,\n  options: InterpolationOptions = {}\n): SharedValue<InterpolateConfig> {\n  return useSharedValue<InterpolateConfig>({\n    inputRange,\n    outputRange,\n    colorSpace,\n    cache: makeMutable<InterpolateRGB | InterpolateHSV | null>(null),\n    options,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}