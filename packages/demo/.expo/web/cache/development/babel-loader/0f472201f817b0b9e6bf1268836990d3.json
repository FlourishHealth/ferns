{"ast":null,"code":"import React from \"react\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { Text } from \"./Text\";\nexport var Badge = function Badge(_ref) {\n  var title = _ref.title,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? \"middle\" : _ref$position,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? \"info\" : _ref$type,\n    color = _ref.color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? \"xs\" : _ref$size,\n    iconProps = _ref.iconProps,\n    _ref$fontColor = _ref.fontColor,\n    fontColor = _ref$fontColor === void 0 ? \"white\" : _ref$fontColor,\n    _ref$fontWeight = _ref.fontWeight,\n    fontWeight = _ref$fontWeight === void 0 ? \"bold\" : _ref$fontWeight,\n    _ref$rounding = _ref.rounding,\n    rounding = _ref$rounding === void 0 ? \"pill\" : _ref$rounding;\n  if (color && type !== \"custom\") {\n    console.warn('Badge color only supported when `type` is set to \"custom\".');\n  }\n  var badgeColor = type === \"custom\" ? color : type;\n  function renderIcon() {\n    if (iconProps && iconProps.name) {\n      return React.createElement(Box, {\n        marginRight: title ? 1 : 0\n      }, React.createElement(Icon, Object.assign({\n        color: (iconProps === null || iconProps === void 0 ? void 0 : iconProps.color) ? iconProps.color : fontColor\n      }, iconProps, {\n        size: size\n      })));\n    } else {\n      return null;\n    }\n  }\n  function renderLabel() {\n    if (!title) {\n      return null;\n    }\n    return React.createElement(Text, {\n      color: fontColor,\n      size: size,\n      weight: fontWeight\n    }, title);\n  }\n  return React.createElement(Box, {\n    alignItems: \"baseline\",\n    alignSelf: position === \"middle\" ? \"center\" : position === \"bottom\" ? \"end\" : \"start\",\n    color: badgeColor,\n    direction: \"row\",\n    height: \"min-content\",\n    justifyContent: \"center\",\n    marginLeft: 1,\n    marginTop: position === \"top\" ? -1 : 0,\n    paddingX: typeof rounding === \"number\" && rounding >= 4 || rounding === \"pill\" ? 2 : 1,\n    paddingY: 1,\n    rounding: rounding,\n    width: \"max-content\"\n  }, renderIcon(), renderLabel());\n};","map":{"version":3,"sources":["../src/Badge.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO;AAEzB,SAAQ,GAAG;AAEX,SAAQ,IAAI;AACZ,SAAQ,IAAI;AAEZ,OAAO,IAAM,KAAK,GAAG,SAAR,KAAK,CAAA,IAAA,EAUmB;EAAA,IATnC,KAAK,GAAA,IAAA,CAAL,KAAK;IAAA,aAAA,GAAA,IAAA,CACL,QAAQ;IAAR,QAAQ,GAAA,aAAA,cAAG,QAAQ,GAAA,aAAA;IAAA,SAAA,GAAA,IAAA,CACnB,IAAI;IAAJ,IAAI,GAAA,SAAA,cAAG,MAAM,GAAA,SAAA;IACb,KAAK,GAAA,IAAA,CAAL,KAAK;IAAA,SAAA,GAAA,IAAA,CACL,IAAI;IAAJ,IAAI,GAAA,SAAA,cAAG,IAAI,GAAA,SAAA;IACX,SAAS,GAAA,IAAA,CAAT,SAAS;IAAA,cAAA,GAAA,IAAA,CACT,SAAS;IAAT,SAAS,GAAA,cAAA,cAAG,OAAO,GAAA,cAAA;IAAA,eAAA,GAAA,IAAA,CACnB,UAAU;IAAV,UAAU,GAAA,eAAA,cAAG,MAAM,GAAA,eAAA;IAAA,aAAA,GAAA,IAAA,CACnB,QAAQ;IAAR,QAAQ,GAAA,aAAA,cAAG,MAAM,GAAA,aAAA;EAEjB,IAAI,KAAK,IAAI,IAAI,KAAK,QAAQ,EAAE;IAC9B,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC;EAC5E;EACA,IAAM,UAAU,GAAG,IAAI,KAAK,QAAQ,GAAG,KAAM,GAAG,IAAI;EAEpD,SAAS,UAAU,CAAA,EAAA;IACjB,IAAI,SAAS,IAAI,SAAS,CAAC,IAAI,EAAE;MAC/B,OACE,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;QAAC,WAAW,EAAE,KAAK,GAAG,CAAC,GAAG;MAAC,CAAA,EAC7B,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA;QAAC,KAAK,EAAE,CAAA,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,KAAK,IAAG,SAAS,CAAC,KAAK,GAAG;MAAS,CAAA,EAAM,SAAS,EAAA;QAAE,IAAI,EAAE;MAAI,CAAA,CAAA,CAAI,CACtF;IAEV,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EAEA,SAAS,WAAW,CAAA,EAAA;IAClB,IAAI,CAAC,KAAK,EAAE;MACV,OAAO,IAAI;IACb;IACA,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;MAAC,KAAK,EAAE,SAAS;MAAE,IAAI,EAAE,IAAI;MAAE,MAAM,EAAE;IAAU,CAAA,EACnD,KAAK,CACD;EAEX;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;IACF,UAAU,EAAC,UAAU;IACrB,SAAS,EAAE,QAAQ,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,OAAO;IACrF,KAAK,EAAE,UAAU;IACjB,SAAS,EAAC,KAAK;IACf,MAAM,EAAC,aAAa;IACpB,cAAc,EAAC,QAAQ;IACvB,UAAU,EAAE,CAAC;IACb,SAAS,EAAE,QAAQ,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;IACtC,QAAQ,EAAG,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,CAAC,IAAK,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC;IACxF,QAAQ,EAAE,CAAC;IACX,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAC;EAAa,CAAA,EAElB,UAAU,CAAA,CAAE,EACZ,WAAW,CAAA,CAAE,CACV;AAEV,CAAC","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { Text } from \"./Text\";\nexport const Badge = ({ title, position = \"middle\", type = \"info\", color, size = \"xs\", iconProps, fontColor = \"white\", fontWeight = \"bold\", rounding = \"pill\", }) => {\n    if (color && type !== \"custom\") {\n        console.warn('Badge color only supported when `type` is set to \"custom\".');\n    }\n    const badgeColor = type === \"custom\" ? color : type;\n    function renderIcon() {\n        if (iconProps && iconProps.name) {\n            return (React.createElement(Box, { marginRight: title ? 1 : 0 },\n                React.createElement(Icon, Object.assign({ color: (iconProps === null || iconProps === void 0 ? void 0 : iconProps.color) ? iconProps.color : fontColor }, iconProps, { size: size }))));\n        }\n        else {\n            return null;\n        }\n    }\n    function renderLabel() {\n        if (!title) {\n            return null;\n        }\n        return (React.createElement(Text, { color: fontColor, size: size, weight: fontWeight }, title));\n    }\n    return (React.createElement(Box, { alignItems: \"baseline\", alignSelf: position === \"middle\" ? \"center\" : position === \"bottom\" ? \"end\" : \"start\", color: badgeColor, direction: \"row\", height: \"min-content\", justifyContent: \"center\", marginLeft: 1, marginTop: position === \"top\" ? -1 : 0, paddingX: (typeof rounding === \"number\" && rounding >= 4) || rounding === \"pill\" ? 2 : 1, paddingY: 1, rounding: rounding, width: \"max-content\" },\n        renderIcon(),\n        renderLabel()));\n};\n//# sourceMappingURL=Badge.js.map"]},"metadata":{},"sourceType":"module"}