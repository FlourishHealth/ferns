{"ast":null,"code":"'use strict';import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _workletStackDetails=new Map();export function registerWorkletStackDetails(hash,stackDetails){_workletStackDetails.set(hash,stackDetails);}function getBundleOffset(error){var _error$stack,_error$stack$split;var frame=(_error$stack=error.stack)===null||_error$stack===void 0?void 0:(_error$stack$split=_error$stack.split('\\n'))===null||_error$stack$split===void 0?void 0:_error$stack$split[0];if(frame){var parsedFrame=/@([^@]+):(\\d+):(\\d+)/.exec(frame);if(parsedFrame){var _parsedFrame=_slicedToArray(parsedFrame,4),file=_parsedFrame[1],line=_parsedFrame[2],col=_parsedFrame[3];return[file,Number(line),Number(col)];}}return['unknown',0,0];}function processStack(stack){var workletStackEntries=stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);var result=stack;workletStackEntries===null||workletStackEntries===void 0?void 0:workletStackEntries.forEach(function(match){var _match$split$map=match.split(/:|_/).map(Number),_match$split$map2=_slicedToArray(_match$split$map,4),hash=_match$split$map2[1],origLine=_match$split$map2[2],origCol=_match$split$map2[3];var errorDetails=_workletStackDetails.get(hash);if(!errorDetails){return;}var _errorDetails=_slicedToArray(errorDetails,3),error=_errorDetails[0],lineOffset=_errorDetails[1],colOffset=_errorDetails[2];var _getBundleOffset=getBundleOffset(error),_getBundleOffset2=_slicedToArray(_getBundleOffset,3),bundleFile=_getBundleOffset2[0],bundleLine=_getBundleOffset2[1],bundleCol=_getBundleOffset2[2];var line=origLine+bundleLine+lineOffset;var col=origCol+bundleCol+colOffset;result=result.replace(match,`${bundleFile}:${line}:${col}`);});return result;}export function reportFatalErrorOnJS(_ref){var message=_ref.message,stack=_ref.stack;var error=new Error();error.message=message;error.stack=stack?processStack(stack):undefined;error.name='ReanimatedError';error.jsEngine='reanimated';global.ErrorUtils.reportFatalError(error);}","map":{"version":3,"sources":["errors.ts"],"names":["_workletStackDetails","Map","registerWorkletStackDetails","hash","stackDetails","set","getBundleOffset","error","frame","stack","split","parsedFrame","exec","file","line","col","Number","processStack","workletStackEntries","match","result","forEach","origLine","origCol","map","errorDetails","get","lineOffset","colOffset","bundleFile","bundleLine","bundleCol","replace","reportFatalErrorOnJS","message","Error","undefined","name","jsEngine","global","ErrorUtils","reportFatalError"],"mappings":"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","sourcesContent":["'use strict';\ntype StackDetails = [Error, number, number];\n\nconst _workletStackDetails = new Map<number, StackDetails>();\n\nexport function registerWorkletStackDetails(\n  hash: number,\n  stackDetails: StackDetails\n) {\n  _workletStackDetails.set(hash, stackDetails);\n}\n\nfunction getBundleOffset(error: Error): [string, number, number] {\n  const frame = error.stack?.split('\\n')?.[0];\n  if (frame) {\n    const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      const [, file, line, col] = parsedFrame;\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\n\nfunction processStack(stack: string): string {\n  const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  let result = stack;\n  workletStackEntries?.forEach((match) => {\n    const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n    const errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    const [error, lineOffset, colOffset] = errorDetails;\n    const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n    const line = origLine + bundleLine + lineOffset;\n    const col = origCol + bundleCol + colOffset;\n\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\n\nexport function reportFatalErrorOnJS({\n  message,\n  stack,\n}: {\n  message: string;\n  stack?: string;\n}) {\n  const error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  // @ts-ignore React Native's ErrorUtils implementation extends the Error type with jsEngine field\n  error.jsEngine = 'reanimated';\n  // @ts-ignore the reportFatalError method is an internal method of ErrorUtils not exposed in the type definitions\n  global.ErrorUtils.reportFatalError(error);\n}\n"]},"metadata":{},"sourceType":"module"}