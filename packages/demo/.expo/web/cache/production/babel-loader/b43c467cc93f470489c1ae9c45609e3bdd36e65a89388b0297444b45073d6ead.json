{"ast":null,"code":"'use strict';import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{Animations,AnimationsData,TransitionType}from'./config';import{convertAnimationObjectToKeyframes}from'./animationParser';import{LinearTransition}from'./transition/Linear.web';import{SequencedTransition}from'./transition/Sequenced.web';import{FadingTransition}from'./transition/Fading.web';import{insertWebAnimation}from'./domUtils';function addPxToTranslate(existingTransform){var newTransform=existingTransform.map(function(transformProp){var newTransformProp={};for(var _ref of Object.entries(transformProp)){var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var value=_ref2[1];if(key.includes('translate')){newTransformProp[key]=`${value}px`;}else{newTransformProp[key]=value;}}return newTransformProp;});return newTransform;}function addExistingTransform(newAnimationData,newTransform){for(var keyframeStepProperties of Object.values(newAnimationData.style)){if(!keyframeStepProperties.transform){keyframeStepProperties.transform=newTransform;}else{Array.prototype.unshift.apply(keyframeStepProperties.transform,newTransform);}}}export function createAnimationWithExistingTransform(animationName,existingTransform,layoutTransition){var newAnimationData;if(layoutTransition){newAnimationData=layoutTransition;}else{if(!(animationName in Animations)){return'';}newAnimationData=structuredClone(AnimationsData[animationName]);}var keyframeName=generateNextCustomKeyframeName();newAnimationData.name=keyframeName;var newTransform=addPxToTranslate(existingTransform);addExistingTransform(newAnimationData,newTransform);var keyframe=convertAnimationObjectToKeyframes(newAnimationData);insertWebAnimation(keyframeName,keyframe);return keyframeName;}var customKeyframeCounter=0;function generateNextCustomKeyframeName(){return`REA${customKeyframeCounter++}`;}export function TransitionGenerator(transitionType,transitionData,existingTransform){var transitionKeyframeName=generateNextCustomKeyframeName();var transitionObject;switch(transitionType){case TransitionType.LINEAR:transitionObject=LinearTransition(transitionKeyframeName,transitionData);break;case TransitionType.SEQUENCED:transitionObject=SequencedTransition(transitionKeyframeName,transitionData);break;case TransitionType.FADING:transitionObject=FadingTransition(transitionKeyframeName,transitionData);break;}if(existingTransform){return createAnimationWithExistingTransform('',existingTransform,transitionObject);}var transitionKeyframe=convertAnimationObjectToKeyframes(transitionObject);insertWebAnimation(transitionKeyframeName,transitionKeyframe);return transitionKeyframeName;}","map":{"version":3,"names":["_slicedToArray","Animations","AnimationsData","TransitionType","convertAnimationObjectToKeyframes","LinearTransition","SequencedTransition","FadingTransition","insertWebAnimation","addPxToTranslate","existingTransform","newTransform","map","transformProp","newTransformProp","_ref","Object","entries","_ref2","key","value","includes","addExistingTransform","newAnimationData","keyframeStepProperties","values","style","transform","Array","prototype","unshift","apply","createAnimationWithExistingTransform","animationName","layoutTransition","structuredClone","keyframeName","generateNextCustomKeyframeName","name","keyframe","customKeyframeCounter","TransitionGenerator","transitionType","transitionData","transitionKeyframeName","transitionObject","LINEAR","SEQUENCED","FADING","transitionKeyframe"],"sources":["/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/web/createAnimation.ts"],"sourcesContent":["'use strict';\n\nimport { Animations, AnimationsData, TransitionType } from './config';\nimport { convertAnimationObjectToKeyframes } from './animationParser';\nimport type {\n  AnimationData,\n  ReanimatedWebTransformProperties,\n  TransitionData,\n} from './animationParser';\nimport type { TransformsStyle } from 'react-native';\nimport { LinearTransition } from './transition/Linear.web';\nimport { SequencedTransition } from './transition/Sequenced.web';\nimport { FadingTransition } from './transition/Fading.web';\nimport { insertWebAnimation } from './domUtils';\n\n// Translate values are passed as numbers. However, if `translate` property receives number, it will not automatically\n// convert it to `px`. Therefore if we want to keep exisitng transform we have to add 'px' suffix to each of translate values\n// that are present inside transform.\nfunction addPxToTranslate(\n  existingTransform: NonNullable<TransformsStyle['transform']>\n) {\n  type RNTransformProp = (typeof existingTransform)[number];\n\n  // @ts-ignore `existingTransform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  const newTransform = existingTransform.map(\n    (transformProp: RNTransformProp) => {\n      const newTransformProp: ReanimatedWebTransformProperties = {};\n      for (const [key, value] of Object.entries(transformProp)) {\n        if (key.includes('translate')) {\n          // @ts-ignore After many trials we decided to ignore this error - it says that we cannot use 'key' to index this object.\n          // Sadly it doesn't go away after using cast `key as keyof TransformProperties`.\n          newTransformProp[key] = `${value}px`;\n        } else {\n          // @ts-ignore same as above.\n          newTransformProp[key] = value;\n        }\n      }\n      return newTransformProp;\n    }\n  );\n\n  return newTransform;\n}\n\n// In order to keep exisitng transform throughout animation, we have to add it to each of keyframe step.\nfunction addExistingTransform(\n  newAnimationData: AnimationData,\n  newTransform: ReanimatedWebTransformProperties[]\n) {\n  for (const keyframeStepProperties of Object.values(newAnimationData.style)) {\n    if (!keyframeStepProperties.transform) {\n      // If transform doesn't exist, we add only transform that already exists\n      keyframeStepProperties.transform = newTransform;\n    } else {\n      // We insert existing transformations before ours.\n      Array.prototype.unshift.apply(\n        keyframeStepProperties.transform,\n        newTransform\n      );\n    }\n  }\n}\n\n/**\n *  Modifies default animation by preserving transformations that given element already contains.\n *\n * @param animationName - Name of the animation to be modified (e.g. `FadeIn`).\n * @param existingTransform - Transform values that element already contains.\n * @returns Animation parsed to keyframe string.\n */\nexport function createAnimationWithExistingTransform(\n  animationName: string,\n  existingTransform: NonNullable<TransformsStyle['transform']>,\n  layoutTransition?: AnimationData\n) {\n  let newAnimationData;\n\n  if (layoutTransition) {\n    newAnimationData = layoutTransition;\n  } else {\n    if (!(animationName in Animations)) {\n      return '';\n    }\n    newAnimationData = structuredClone(AnimationsData[animationName]);\n  }\n\n  const keyframeName = generateNextCustomKeyframeName();\n\n  newAnimationData.name = keyframeName;\n\n  const newTransform = addPxToTranslate(existingTransform);\n\n  addExistingTransform(newAnimationData, newTransform);\n\n  const keyframe = convertAnimationObjectToKeyframes(newAnimationData);\n\n  insertWebAnimation(keyframeName, keyframe);\n\n  return keyframeName;\n}\n\nlet customKeyframeCounter = 0;\n\nfunction generateNextCustomKeyframeName() {\n  return `REA${customKeyframeCounter++}`;\n}\n\n/**\n * Creates transition of given type, appends it to stylesheet and returns keyframe name.\n *\n * @param transitionType - Type of transition (e.g. LINEAR).\n * @param transitionData - Object containing data for transforms (translateX, scaleX,...).\n * @returns Keyframe name that represents transition.\n */\nexport function TransitionGenerator(\n  transitionType: TransitionType,\n  transitionData: TransitionData,\n  existingTransform: TransformsStyle['transform'] | undefined\n) {\n  const transitionKeyframeName = generateNextCustomKeyframeName();\n  let transitionObject;\n\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n  }\n\n  if (existingTransform) {\n    return createAnimationWithExistingTransform(\n      '',\n      existingTransform,\n      transitionObject\n    );\n  }\n\n  const transitionKeyframe =\n    convertAnimationObjectToKeyframes(transitionObject);\n\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n\n  return transitionKeyframeName;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}