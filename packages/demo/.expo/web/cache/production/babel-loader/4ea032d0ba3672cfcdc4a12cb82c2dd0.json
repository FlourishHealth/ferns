{"ast":null,"code":"import React,{useContext}from\"react\";import View from\"react-native-web/dist/exports/View\";import{ThemeContext}from\"./Theme\";export var ProgressBar=function ProgressBar(_ref){var color=_ref.color,completed=_ref.completed;var _useContext=useContext(ThemeContext),theme=_useContext.theme;return React.createElement(View,{style:{width:\"100%\",height:6}},React.createElement(View,{style:{width:\"100%\",position:\"absolute\",top:0,left:0,height:6,borderRadius:6,borderWidth:1,borderColor:theme[color],backgroundColor:theme[color],opacity:0.3}}),React.createElement(View,{style:{width:`${Math.min(completed/100,1)*100}%`,position:\"absolute\",top:0,left:0,height:6,borderRadius:6,borderWidth:1,borderColor:theme[color],backgroundColor:theme[color],opacity:1}}));};","map":{"version":3,"sources":["../src/ProgressBar.tsx"],"names":[],"mappings":"AAAA,MAAO,CAAA,KAAK,EAAG,UAAU,KAAO,OAAO,CAAC,OAAA,IAAA,0CAIxC,OAAQ,YAAY,KAAO,SAAS,CAEpC,MAAO,IAAM,CAAA,WAAW,CAAG,QAAd,CAAA,WAAW,CAAA,IAAA,CAAgE,IAA3D,CAAA,KAAK,CAAA,IAAA,CAAL,KAAK,CAAE,SAAS,CAAA,IAAA,CAAT,SAAS,CAC3C,IAAA,WAAA,CAAgB,UAAU,CAAC,YAAY,CAAC,CAAjC,KAAK,CAAA,WAAA,CAAL,KAAK,CAEZ,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CACH,KAAK,CAAE,CACL,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,CACT,CAAA,CAAA,CAED,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CACH,KAAK,CAAE,CACL,KAAK,CAAE,MAAM,CACb,QAAQ,CAAE,UAAU,CACpB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,YAAY,CAAE,CAAC,CACf,WAAW,CAAE,CAAC,CACd,WAAW,CAAE,KAAK,CAAC,KAAK,CAAC,CACzB,eAAe,CAAE,KAAK,CAAC,KAAK,CAAC,CAC7B,OAAO,CAAE,GACV,CAAA,CAAA,CACD,CACF,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CACH,KAAK,CAAE,CACL,KAAK,CAAE,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAG,GAAG,CAAE,CAAC,CAAC,CAAG,GAAG,GAAG,CAC/C,QAAQ,CAAE,UAAU,CACpB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,YAAY,CAAE,CAAC,CACf,WAAW,CAAE,CAAC,CACd,WAAW,CAAE,KAAK,CAAC,KAAK,CAAC,CACzB,eAAe,CAAE,KAAK,CAAC,KAAK,CAAC,CAC7B,OAAO,CAAE,CACV,CAAA,CAAA,CACD,CACG,CAEX,CAAC","sourceRoot":"","sourcesContent":["import React, { useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { ThemeContext } from \"./Theme\";\nexport const ProgressBar = ({ color, completed }) => {\n    const { theme } = useContext(ThemeContext);\n    return (React.createElement(View, { style: {\n            width: \"100%\",\n            height: 6,\n        } },\n        React.createElement(View, { style: {\n                width: \"100%\",\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                height: 6,\n                borderRadius: 6,\n                borderWidth: 1,\n                borderColor: theme[color],\n                backgroundColor: theme[color],\n                opacity: 0.3,\n            } }),\n        React.createElement(View, { style: {\n                width: `${Math.min(completed / 100, 1) * 100}%`,\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                height: 6,\n                borderRadius: 6,\n                borderWidth: 1,\n                borderColor: theme[color],\n                backgroundColor: theme[color],\n                opacity: 1,\n            } })));\n};\n//# sourceMappingURL=ProgressBar.js.map"]},"metadata":{},"sourceType":"module"}