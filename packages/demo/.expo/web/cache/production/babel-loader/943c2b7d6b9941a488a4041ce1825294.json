{"ast":null,"code":"import React from\"react\";import{Box}from\"./Box\";import{Icon}from\"./Icon\";import{Text}from\"./Text\";export var CheckBox=function CheckBox(_ref){var color=_ref.color,checked=_ref.checked,size=_ref.size,radio=_ref.radio,label=_ref.label,labelColor=_ref.labelColor,subLabel=_ref.subLabel,disabled=_ref.disabled,onChange=_ref.onChange,onClick=_ref.onClick,indeterminate=_ref.indeterminate,testID=_ref.testID;if(checked&&indeterminate){console.error(\"CheckBox cannot be checked and indeterminate at the same time\");}var doOnClick=function doOnClick(){if(disabled){return;}if(!indeterminate){onChange({value:!checked});}onClick&&onClick();};var renderCheckBox=function renderCheckBox(){var bgColor;if(disabled){bgColor=\"gray\";}else if(checked){bgColor=color||\"darkGray\";}else{bgColor=\"white\";}return React.createElement(Box,{border:color||\"darkGray\",color:bgColor,height:size===\"sm\"?16:24,rounding:radio?\"circle\":size===\"sm\"?2:3,testID:testID,width:size===\"sm\"?16:24,onClick:doOnClick},React.createElement(Box,{alignItems:\"center\",direction:\"column\",display:\"flex\",height:\"100%\",justifyContent:\"center\",width:\"100%\"},checked&&(React.createElement(Icon,{color:\"white\",name:\"check\",prefix:\"fas\",size:size===\"sm\"?\"sm\":\"md\"})),indeterminate&&(React.createElement(Icon,{color:color||\"darkGray\",name:\"circle\",prefix:\"fas\",size:size===\"sm\"?\"sm\":\"md\"}))));};return React.createElement(Box,{alignItems:\"center\",direction:\"row\",display:\"flex\",maxHeight:60,paddingY:1,width:\"100%\"},React.createElement(Box,{display:\"flex\",justifyContent:\"center\",maxWidth:size===\"sm\"?14:20,width:size===\"sm\"?14:20},renderCheckBox()),React.createElement(Box,{direction:\"column\",display:\"flex\",height:\"100%\",justifyContent:\"center\",marginLeft:4,onClick:doOnClick},React.createElement(Text,{color:labelColor||\"darkGray\",numberOfLines:subLabel?1:2,size:size,weight:\"bold\"},label),Boolean(subLabel)&&(React.createElement(Text,{color:labelColor||\"darkGray\",size:\"sm\",weight:\"bold\"},subLabel))));};","map":{"version":3,"sources":["../src/CheckBox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { Text } from \"./Text\";\nexport const CheckBox = ({ color, checked, size, radio, label, labelColor, subLabel, disabled, onChange, onClick, indeterminate, testID, }) => {\n    if (checked && indeterminate) {\n        console.error(\"CheckBox cannot be checked and indeterminate at the same time\");\n    }\n    const doOnClick = () => {\n        if (disabled) {\n            return;\n        }\n        if (!indeterminate) {\n            onChange({ value: !checked });\n        }\n        onClick && onClick();\n    };\n    const renderCheckBox = () => {\n        let bgColor;\n        if (disabled) {\n            bgColor = \"gray\";\n        }\n        else if (checked) {\n            bgColor = color || \"darkGray\";\n        }\n        else {\n            bgColor = \"white\";\n        }\n        return (React.createElement(Box, { border: color || \"darkGray\", color: bgColor, height: size === \"sm\" ? 16 : 24, rounding: radio ? \"circle\" : size === \"sm\" ? 2 : 3, testID: testID, width: size === \"sm\" ? 16 : 24, onClick: doOnClick },\n            React.createElement(Box, { alignItems: \"center\", direction: \"column\", display: \"flex\", height: \"100%\", justifyContent: \"center\", width: \"100%\" },\n                checked && (React.createElement(Icon, { color: \"white\", name: \"check\", prefix: \"fas\", size: size === \"sm\" ? \"sm\" : \"md\" })),\n                indeterminate && (React.createElement(Icon, { color: color || \"darkGray\", name: \"circle\", prefix: \"fas\", size: size === \"sm\" ? \"sm\" : \"md\" })))));\n    };\n    return (React.createElement(Box, { alignItems: \"center\", direction: \"row\", display: \"flex\", maxHeight: 60, paddingY: 1, width: \"100%\" },\n        React.createElement(Box, { display: \"flex\", justifyContent: \"center\", maxWidth: size === \"sm\" ? 14 : 20, width: size === \"sm\" ? 14 : 20 }, renderCheckBox()),\n        React.createElement(Box, { direction: \"column\", display: \"flex\", height: \"100%\", justifyContent: \"center\", marginLeft: 4, onClick: doOnClick },\n            React.createElement(Text, { color: labelColor || \"darkGray\", numberOfLines: subLabel ? 1 : 2, size: size, weight: \"bold\" }, label),\n            Boolean(subLabel) && (React.createElement(Text, { color: labelColor || \"darkGray\", size: \"sm\", weight: \"bold\" }, subLabel)))));\n};\n//# sourceMappingURL=CheckBox.js.map"]},"metadata":{},"sourceType":"module"}