{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{Children,useCallback,useContext,useEffect,useState}from\"react\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import View from\"react-native-web/dist/exports/View\";import{SwiperFlatList}from\"react-native-swiper-flatlist\";import{Box}from\"./Box\";import{FlatList}from\"./FlatList\";import{IconButton}from\"./IconButton\";import{mediaQueryLargerThan}from\"./MediaQuery\";import{SegmentedControl}from\"./SegmentedControl\";import{Spinner}from\"./Spinner\";import{ThemeContext}from\"./Theme\";export var SplitPage=function SplitPage(_ref){var children=_ref.children,_ref$tabs=_ref.tabs,tabs=_ref$tabs===void 0?[]:_ref$tabs,_ref$loading=_ref.loading,loading=_ref$loading===void 0?false:_ref$loading,color=_ref.color,keyboardOffset=_ref.keyboardOffset,renderListViewItem=_ref.renderListViewItem,renderListViewHeader=_ref.renderListViewHeader,renderContent=_ref.renderContent,_ref$onSelectionChang=_ref.onSelectionChange,onSelectionChange=_ref$onSelectionChang===void 0?function(){}:_ref$onSelectionChang,listViewData=_ref.listViewData,listViewExtraData=_ref.listViewExtraData,listViewWidth=_ref.listViewWidth,bottomNavBarHeight=_ref.bottomNavBarHeight,showItemList=_ref.showItemList,selectLimit=_ref.selectLimit;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),selectedId=_useState2[0],setSelectedId=_useState2[1];var _useState3=useState([0,1]),_useState4=_slicedToArray(_useState3,2),activeTabs=_useState4[0],setActiveTabs=_useState4[1];var _Dimensions$get=Dimensions.get(\"window\"),width=_Dimensions$get.width;var isMobileDevice=!mediaQueryLargerThan(\"sm\");var elementArray=Children.toArray(children).filter(function(c){return c!==null;});var onItemSelect=useCallback(function(){var _ref2=_asyncToGenerator(function*(item){setSelectedId(item.index);yield onSelectionChange(item);});return function(_x){return _ref2.apply(this,arguments);};}(),[onSelectionChange]);var onItemDeselect=useCallback(_asyncToGenerator(function*(){setSelectedId(undefined);yield onSelectionChange(undefined);}),[onSelectionChange]);useEffect(function(){if(showItemList){void onItemDeselect();}},[showItemList,onItemDeselect]);if(!children&&!renderContent){console.warn(\"A child node is required\");return null;}if(elementArray.length>2&&elementArray.length!==tabs.length){console.warn(\"There must be a tab for each child\");return null;}var renderItem=function renderItem(itemInfo){return React.createElement(Box,{onClick:function(){var _onClick=_asyncToGenerator(function*(){yield onItemSelect(itemInfo);});function onClick(){return _onClick.apply(this,arguments);}return onClick;}()},renderListViewItem(itemInfo));};var renderList=function renderList(){return React.createElement(View,{style:{width:listViewWidth!==null&&listViewWidth!==void 0?listViewWidth:300,maxWidth:listViewWidth!==null&&listViewWidth!==void 0?listViewWidth:300,flexGrow:1,flexShrink:0,display:\"flex\",flexDirection:\"column\"}},renderListViewHeader&&renderListViewHeader(),React.createElement(FlatList,{data:listViewData,extraData:listViewExtraData,keyExtractor:function keyExtractor(item){return item.id;},renderItem:renderItem}));};var renderListContent=function renderListContent(){return React.createElement(Box,{flex:\"grow\",padding:2},renderContent&&renderContent(selectedId));};var renderChildrenContent=function renderChildrenContent(){if(Array.isArray(children)&&elementArray.length>2){return React.createElement(View,{style:{flex:1,width:\"100%\",height:\"100%\",alignItems:\"center\"}},React.createElement(Box,{marginBottom:4,paddingX:4,width:\"100%\"},React.createElement(SegmentedControl,{items:tabs,multiselect:true,selectLimit:selectLimit||tabs.length,selectedItemIndexes:activeTabs,onChange:function onChange(index){setActiveTabs(_toConsumableArray(index.activeIndex));}})),React.createElement(Box,{direction:\"row\",flex:\"grow\",height:\"100%\",paddingX:4,width:activeTabs.length>1?\"100%\":\"60%\"},activeTabs.map(function(tabIndex,i){return React.createElement(ScrollView,{key:tabIndex,contentContainerStyle:{flex:1},style:{flex:1,width:\"60%\",height:\"100%\",paddingRight:i?0:16,paddingLeft:i?16:0}},elementArray[tabIndex]);})));}else{return React.createElement(Box,{alignItems:\"center\",direction:\"row\",flex:\"grow\",justifyContent:\"center\",paddingX:2},elementArray.map(function(element,index){return React.createElement(ScrollView,{key:index,contentContainerStyle:{flex:1},style:{flex:1,width:\"60%\",height:\"100%\"}},element);}));}};var renderMobileList=function renderMobileList(){if(isMobileDevice&&selectedId!==undefined){return null;}return React.createElement(View,{style:{width:\"100%\",maxWidth:\"100%\",height:\"100%\",flexGrow:1,flexShrink:0,display:\"flex\",flexDirection:\"column\"}},renderListViewHeader&&renderListViewHeader(),React.createElement(FlatList,{data:listViewData,extraData:listViewExtraData,keyExtractor:function keyExtractor(item){return item.id;},nestedScrollEnabled:true,renderItem:renderItem}));};var renderMobileListContent=function renderMobileListContent(){if(isMobileDevice&&selectedId===undefined){return null;}return React.createElement(Box,{flex:\"grow\",padding:2},isMobileDevice&&(React.createElement(Box,{width:\"100%\"},React.createElement(IconButton,{accessibilityLabel:\"close\",icon:\"times\",iconColor:\"darkGray\",onClick:function onClick(){return onItemDeselect();}}))),renderContent&&renderContent(selectedId));};var renderMobileChildrenContent=function renderMobileChildrenContent(){if(selectedId===undefined){return null;}return React.createElement(SwiperFlatList,{nestedScrollEnabled:true,paginationStyle:{justifyContent:\"center\",width:\"95%\"},renderAll:true,showPagination:true,style:{width:\"100%\"}},elementArray.map(function(element,i){return React.createElement(View,{key:i,style:{width:width-8,padding:4,height:elementArray.length>1?\"90%\":\"100%\",paddingBottom:bottomNavBarHeight}},element);}));};var renderSplitPage=function renderSplitPage(){return React.createElement(React.Fragment,null,renderList(),renderContent?renderListContent():renderChildrenContent());};var renderMobileSplitPage=function renderMobileSplitPage(){var renderMainContent=renderContent?renderMobileListContent():renderMobileChildrenContent();return selectedId===undefined?renderMobileList():renderMainContent;};return React.createElement(Box,{avoidKeyboard:true,color:color||\"lightGray\",direction:\"row\",display:\"flex\",height:\"100%\",keyboardOffset:keyboardOffset,padding:2,width:\"100%\"},loading===true&&React.createElement(Spinner,{color:theme.darkGray,size:\"md\"}),Boolean(isMobileDevice)?renderMobileSplitPage():renderSplitPage());};","map":{"version":3,"sources":["../src/SplitPage.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { Children, useCallback, useContext, useEffect, useState } from \"react\";\nimport { Dimensions, ScrollView, View } from \"react-native\";\nimport { SwiperFlatList } from \"react-native-swiper-flatlist\";\nimport { Box } from \"./Box\";\nimport { FlatList } from \"./FlatList\";\nimport { IconButton } from \"./IconButton\";\nimport { mediaQueryLargerThan } from \"./MediaQuery\";\nimport { SegmentedControl } from \"./SegmentedControl\";\nimport { Spinner } from \"./Spinner\";\nimport { ThemeContext } from \"./Theme\";\n// A component for rendering a list on one side and a details view on the right for large screens,\n// and a scrollable list where clicking an item takes you the details view.\nexport const SplitPage = ({ children, tabs = [], loading = false, color, keyboardOffset, renderListViewItem, renderListViewHeader, renderContent, onSelectionChange = () => { }, listViewData, listViewExtraData, listViewWidth, bottomNavBarHeight, showItemList, selectLimit, }) => {\n    const { theme } = useContext(ThemeContext);\n    const [selectedId, setSelectedId] = useState(undefined);\n    const [activeTabs, setActiveTabs] = useState([0, 1]);\n    const { width } = Dimensions.get(\"window\");\n    const isMobileDevice = !mediaQueryLargerThan(\"sm\");\n    const elementArray = Children.toArray(children).filter((c) => c !== null);\n    const onItemSelect = useCallback(async (item) => {\n        setSelectedId(item.index);\n        await onSelectionChange(item);\n    }, [onSelectionChange]);\n    const onItemDeselect = useCallback(async () => {\n        setSelectedId(undefined);\n        await onSelectionChange(undefined);\n    }, [onSelectionChange]);\n    // If the list is showing, deselect the item.\n    useEffect(() => {\n        if (showItemList) {\n            void onItemDeselect();\n        }\n    }, [showItemList, onItemDeselect]);\n    if (!children && !renderContent) {\n        console.warn(\"A child node is required\");\n        return null;\n    }\n    if (elementArray.length > 2 && elementArray.length !== tabs.length) {\n        console.warn(\"There must be a tab for each child\");\n        return null;\n    }\n    const renderItem = (itemInfo) => {\n        return (React.createElement(Box, { onClick: async () => {\n                await onItemSelect(itemInfo);\n            } }, renderListViewItem(itemInfo)));\n    };\n    const renderList = () => {\n        return (React.createElement(View, { style: {\n                width: listViewWidth !== null && listViewWidth !== void 0 ? listViewWidth : 300,\n                maxWidth: listViewWidth !== null && listViewWidth !== void 0 ? listViewWidth : 300,\n                flexGrow: 1,\n                flexShrink: 0,\n                display: \"flex\",\n                flexDirection: \"column\",\n            } },\n            renderListViewHeader && renderListViewHeader(),\n            React.createElement(FlatList, { data: listViewData, extraData: listViewExtraData, keyExtractor: (item) => item.id, renderItem: renderItem })));\n    };\n    const renderListContent = () => {\n        return (React.createElement(Box, { flex: \"grow\", padding: 2 }, renderContent && renderContent(selectedId)));\n    };\n    const renderChildrenContent = () => {\n        if (Array.isArray(children) && elementArray.length > 2) {\n            return (React.createElement(View, { style: {\n                    flex: 1,\n                    width: \"100%\",\n                    height: \"100%\",\n                    alignItems: \"center\",\n                } },\n                React.createElement(Box, { marginBottom: 4, paddingX: 4, width: \"100%\" },\n                    React.createElement(SegmentedControl, { items: tabs, multiselect: true, selectLimit: selectLimit || tabs.length, selectedItemIndexes: activeTabs, onChange: (index) => {\n                            setActiveTabs([...index.activeIndex]);\n                        } })),\n                React.createElement(Box, { direction: \"row\", flex: \"grow\", height: \"100%\", paddingX: 4, width: activeTabs.length > 1 ? \"100%\" : \"60%\" }, activeTabs.map((tabIndex, i) => {\n                    return (React.createElement(ScrollView, { key: tabIndex, contentContainerStyle: {\n                            flex: 1,\n                        }, style: {\n                            flex: 1,\n                            width: \"60%\",\n                            height: \"100%\",\n                            paddingRight: i ? 0 : 16,\n                            paddingLeft: i ? 16 : 0,\n                        } }, elementArray[tabIndex]));\n                }))));\n        }\n        else {\n            return (React.createElement(Box, { alignItems: \"center\", direction: \"row\", flex: \"grow\", justifyContent: \"center\", paddingX: 2 }, elementArray.map((element, index) => {\n                return (React.createElement(ScrollView, { key: index, contentContainerStyle: {\n                        flex: 1,\n                    }, style: {\n                        flex: 1,\n                        width: \"60%\",\n                        height: \"100%\",\n                    } }, element));\n            })));\n        }\n    };\n    const renderMobileList = () => {\n        if (isMobileDevice && selectedId !== undefined) {\n            return null;\n        }\n        return (React.createElement(View, { style: {\n                width: \"100%\",\n                maxWidth: \"100%\",\n                height: \"100%\",\n                flexGrow: 1,\n                flexShrink: 0,\n                display: \"flex\",\n                flexDirection: \"column\",\n            } },\n            renderListViewHeader && renderListViewHeader(),\n            React.createElement(FlatList, { data: listViewData, extraData: listViewExtraData, keyExtractor: (item) => item.id, nestedScrollEnabled: true, renderItem: renderItem })));\n    };\n    const renderMobileListContent = () => {\n        if (isMobileDevice && selectedId === undefined) {\n            return null;\n        }\n        return (React.createElement(Box, { flex: \"grow\", padding: 2 },\n            isMobileDevice && (React.createElement(Box, { width: \"100%\" },\n                React.createElement(IconButton, { accessibilityLabel: \"close\", icon: \"times\", iconColor: \"darkGray\", onClick: () => onItemDeselect() }))),\n            renderContent && renderContent(selectedId)));\n    };\n    const renderMobileChildrenContent = () => {\n        if (selectedId === undefined) {\n            return null;\n        }\n        return (React.createElement(SwiperFlatList, { nestedScrollEnabled: true, paginationStyle: { justifyContent: \"center\", width: \"95%\" }, renderAll: true, showPagination: true, style: { width: \"100%\" } }, elementArray.map((element, i) => {\n            return (React.createElement(View, { key: i, style: {\n                    width: width - 8,\n                    padding: 4,\n                    height: elementArray.length > 1 ? \"90%\" : \"100%\",\n                    paddingBottom: bottomNavBarHeight,\n                } }, element));\n        })));\n    };\n    const renderSplitPage = () => {\n        return (React.createElement(React.Fragment, null,\n            renderList(),\n            renderContent ? renderListContent() : renderChildrenContent()));\n    };\n    const renderMobileSplitPage = () => {\n        const renderMainContent = renderContent\n            ? renderMobileListContent()\n            : renderMobileChildrenContent();\n        return selectedId === undefined ? renderMobileList() : renderMainContent;\n    };\n    return (React.createElement(Box, { avoidKeyboard: true, color: color || \"lightGray\", direction: \"row\", display: \"flex\", height: \"100%\", keyboardOffset: keyboardOffset, padding: 2, width: \"100%\" },\n        loading === true && React.createElement(Spinner, { color: theme.darkGray, size: \"md\" }),\n        Boolean(isMobileDevice) ? renderMobileSplitPage() : renderSplitPage()));\n};\n//# sourceMappingURL=SplitPage.js.map"]},"metadata":{},"sourceType":"module"}