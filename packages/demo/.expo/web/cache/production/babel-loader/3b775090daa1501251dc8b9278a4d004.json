{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"progress\",\"onPress\",\"style\",\"accessibilityLabel\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated,{useAnimatedProps,useAnimatedStyle}from'react-native-reanimated';var PROGRESS_EPSILON=0.05;var _worklet_3396128806637_init_data={code:\"function anonymous(){const{progress,PROGRESS_EPSILON}=this.__closure;return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}\"};var _worklet_1663201322870_init_data={code:\"function anonymous(){const{progress,PROGRESS_EPSILON}=this.__closure;const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}\"};export var Overlay=React.forwardRef(function Overlay(_ref,ref){var progress=_ref.progress,onPress=_ref.onPress,style=_ref.style,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?'Close drawer':_ref$accessibilityLab,props=_objectWithoutProperties(_ref,_excluded);var animatedStyle=useAnimatedStyle(function(){var anonymous=function anonymous(){return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};};anonymous.__closure={progress:progress,PROGRESS_EPSILON:PROGRESS_EPSILON};anonymous.__workletHash=3396128806637;anonymous.__initData=_worklet_3396128806637_init_data;return anonymous;}());var animatedProps=useAnimatedProps(function(){var anonymous=function anonymous(){var active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};};anonymous.__closure={progress:progress,PROGRESS_EPSILON:PROGRESS_EPSILON};anonymous.__workletHash=1663201322870;anonymous.__initData=_worklet_1663201322870_init_data;return anonymous;}());return React.createElement(Animated.View,_extends({},props,{ref:ref,style:[styles.overlay,overlayStyle,animatedStyle,style],animatedProps:animatedProps}),React.createElement(Pressable,{onPress:onPress,style:styles.pressable,accessibilityRole:\"button\",accessibilityLabel:accessibilityLabel}));});var overlayStyle={WebkitTapHighlightColor:'transparent'};var styles=StyleSheet.create({overlay:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{backgroundColor:'rgba(0, 0, 0, 0.5)'}),pressable:{flex:1,pointerEvents:'auto'}});","map":{"version":3,"sources":["views/modern/Overlay.tsx"],"names":["React","Animated","useAnimatedProps","useAnimatedStyle","PROGRESS_EPSILON","Overlay","forwardRef","progress","onPress","style","accessibilityLabel","props","ref","animatedStyle","opacity","value","zIndex","animatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","styles","overlay","overlayStyle","pressable","WebkitTapHighlightColor","StyleSheet","create","absoluteFillObject","backgroundColor","flex"],"mappings":"inCAAA,MAAO,GAAKA,CAAAA,KAAK,KAAM,OAAO,CAAA,OAAA,QAAA,qDAAA,SAAA,sDAAA,UAAA,gDAE9B,MAAOC,CAAAA,QAAQ,EACbC,gBAAgB,CAChBC,gBAAgB,KACX,yBAAyB,CAEhC,GAAMC,CAAAA,gBAAgB,CAAG,IAAI,CAAA,IAAA,gCAAA,EAAA,IAAA,0JAAA,gCAAA,EAAA,IAAA,qQAQ7B,MAAO,IAAMC,CAAAA,OAAO,CAAGL,KAAK,CAACM,UAAU,CAAC,QAASD,CAAAA,OAAO,CAAA,IAAA,CAQtDO,GAA6B,CAC7B,CARA,GACEL,CAAAA,QAAQ,CAKF,IAAA,CALNA,QAAQ,CACRC,OAAO,CAID,IAAA,CAJNA,OAAO,CACPC,KAAK,CAGC,IAAA,CAHNA,KAAK,CAAA,qBAAA,CAGC,IAAA,CAFNC,kBAAkB,CAAlBA,kBAAkB,CAAA,qBAAA,UAAG,cAAc,CAAA,qBAAA,CAChCC,KAAAA,CAAAA,wBAAAA,CACG,IAAA,CAAA,SAAA,EAGR,GAAME,CAAAA,aAAa,CAAGV,gBAAgB,CAAC,eAAA,SAAA,UAAA,UAAA,CAAM,CAC3C,MAAO,CACLW,OAAO,CAAEP,QAAQ,CAACQ,KAAK,CAGvBC,MAAM,CAAET,QAAQ,CAACQ,KAAK,CAAGX,gBAAgB,CAAG,CAAC,CAAG,CAAC,CACnD,CAAC,CACH,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,QAAA,CALYG,QAAQ,CAAA,gBAAA,CAGQH,gBAAgB,EAAA,SAAA,CAAA,aAAA,eAAA,SAAA,CAAA,UAAA,CAAA,gCAAA,QAAA,SAAA,EALN,EAOtC,CAAC,CAEF,GAAMa,CAAAA,aAAa,CAAGf,gBAAgB,CAAC,eAAA,SAAA,UAAA,UAAA,CAAM,CAC3C,GAAMgB,CAAAA,MAAM,CAAGX,QAAQ,CAACQ,KAAK,CAAGX,gBAAgB,CAEhD,MAAO,CACLe,aAAa,CAAED,MAAM,CAAG,MAAM,CAAG,MAAM,CACvCE,2BAA2B,CAAE,CAACF,MAAM,CACpCG,yBAAyB,CAAEH,MAAM,CAAG,MAAM,CAAG,qBAC/C,CAAC,CACH,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,QAAA,CAPgBX,QAAQ,CAAA,gBAAA,CAASH,gBAAgB,EAAA,SAAA,CAAA,aAAA,eAAA,SAAA,CAAA,UAAA,CAAA,gCAAA,QAAA,SAAA,EADX,EAQtC,CAAC,CAEF,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,QAAA,CAAA,CAAA,CAAA,CACRO,KAAK,CAAA,CACT,GAAG,CAAEC,GAAI,CACT,KAAK,CAAE,CAACU,MAAM,CAACC,OAAO,CAAEC,YAAY,CAAEX,aAAa,CAAEJ,KAAK,CAAE,CAC5D,aAAa,CAAEQ,aAAc,CAAA,CAAA,CAE7B,KAAA,CAAA,aAAA,CAAC,SAAS,CAAA,CACR,OAAO,CAAET,OAAQ,CACjB,KAAK,CAAEc,MAAM,CAACG,SAAU,CACxB,iBAAiB,CAAC,QAAQ,CAC1B,kBAAkB,CAAEf,kBAAmB,CAAA,CACvC,CACY,CAEpB,CAAC,CAAC,CAEF,GAAMc,CAAAA,YAAY,CACX,CAGHE,uBAAuB,CAAE,aAC3B,CAEA,CAEF,GAAMJ,CAAAA,MAAM,CAAGK,UAAU,CAACC,MAAM,CAAC,CAC/BL,OAAO,CAAA,aAAA,CAAA,aAAA,IACFI,UAAU,CAACE,kBAAkB,MAChCC,eAAe,CAAE,oBAAA,EAClB,CACDL,SAAS,CAAE,CACTM,IAAI,CAAE,CAAC,CACPZ,aAAa,CAAE,MACjB,CACF,CAAC,CAAC","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nconst PROGRESS_EPSILON = 0.05;\nexport const Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {\n  let {\n    progress,\n    onPress,\n    style,\n    accessibilityLabel = 'Close drawer',\n    ...props\n  } = _ref;\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n    };\n  });\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n    };\n  });\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), /*#__PURE__*/React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nconst overlayStyle = Platform.select({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  pressable: {\n    flex: 1,\n    pointerEvents: 'auto'\n  }\n});\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}