{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}var gestures={};export function getHandler(tag){if(tag in gestures){return gestures[tag];}throw new Error(`No handler for tag ${tag}`);}export function createGestureHandler(handlerTag,handler){if(handlerTag in gestures){throw new Error(`Handler with tag ${handlerTag} already exists`);}gestures[handlerTag]=handler;gestures[handlerTag].handlerTag=handlerTag;}export function dropGestureHandler(handlerTag){if(!(handlerTag in gestures)){return;}getHandler(handlerTag).destroy();delete gestures[handlerTag];}export function getNodes(){return _objectSpread({},gestures);}","map":{"version":3,"sources":["NodeManager.ts"],"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes"],"mappings":"+qBAGA,GAAMA,CAAAA,QAGL,CAAG,CAAA,CAHJ,CAKA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,GAApB,CAAiC,CACtC,GAAIA,GAAG,GAAIF,CAAAA,QAAX,CAAqB,CACnB,MAAOA,CAAAA,QAAQ,CAACE,GAAD,CAAf,CACD,CAED,KAAM,IAAIC,CAAAA,KAAJ,CAAW,sBAAqBD,GAAI,EAApC,CAAN,CACD,CAED,MAAO,SAASE,CAAAA,oBAAT,CACLC,UADK,CAELC,OAFK,CAGL,CACA,GAAID,UAAU,GAAIL,CAAAA,QAAlB,CAA4B,CAC1B,KAAM,IAAIG,CAAAA,KAAJ,CAAW,oBAAmBE,UAAW,iBAAzC,CAAN,CACD,CACDL,QAAQ,CAACK,UAAD,CAARL,CAAuBM,OAJvB,CAMAN,QAAQ,CAACK,UAAD,CAARL,CAAqBK,UAArBL,CAAkCK,UAAlCL,CACD,CAED,MAAO,SAASO,CAAAA,kBAAT,CAA4BF,UAA5B,CAAgD,CAGrD,GAAI,EAAEA,UAAU,GAAIL,CAAAA,QAAhB,CAAJ,CAA+B,CAC7B,OACD,CACDC,UAAU,CAACI,UAAD,CAAVJ,CAAuBO,OAAvBP,CAAAA,CANqD,CAQrD,MAAOD,CAAAA,QAAQ,CAACK,UAAD,CAAf,CACD,CAED,MAAO,SAASI,CAAAA,QAAT,CAAA,CAAoB,CACzB,OAAA,aAAA,IAAYT,QAAAA,EACb","sourcesContent":["import { ValueOf } from '../typeUtils';\nimport { HammerGestures } from '../RNGestureHandlerModule.web';\n\nconst gestures: Record<\n  number,\n  InstanceType<ValueOf<typeof HammerGestures>>\n> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(\n  handlerTag: number,\n  handler: InstanceType<ValueOf<typeof HammerGestures>>\n) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"]},"metadata":{},"sourceType":"module"}