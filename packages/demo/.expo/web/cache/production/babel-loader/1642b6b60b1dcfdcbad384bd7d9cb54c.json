{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useRef,useEffect,useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Text from\"react-native-web/dist/exports/Text\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Platform from\"react-native-web/dist/exports/Platform\";import{useDimensions}from\"./utils/useDimensions\";var Toast=function Toast(props){var id=props.id,onDestroy=props.onDestroy,icon=props.icon,_props$type=props.type,type=_props$type===void 0?\"normal\":_props$type,message=props.message,_props$duration=props.duration,duration=_props$duration===void 0?5000:_props$duration,style=props.style,textStyle=props.textStyle,_props$animationDurat=props.animationDuration,animationDuration=_props$animationDurat===void 0?250:_props$animationDurat,_props$animationType=props.animationType,animationType=_props$animationType===void 0?\"slide-in\":_props$animationType,successIcon=props.successIcon,dangerIcon=props.dangerIcon,warningIcon=props.warningIcon,successColor=props.successColor,dangerColor=props.dangerColor,warningColor=props.warningColor,normalColor=props.normalColor,placement=props.placement,swipeEnabled=props.swipeEnabled,_onPress=props.onPress;var containerRef=useRef(null);var _useState=useState(new Animated.Value(0)),_useState2=_slicedToArray(_useState,1),animation=_useState2[0];var panResponderRef=useRef();var panResponderAnimRef=useRef();var closeTimeoutRef=useRef(null);var dims=useDimensions();useEffect(function(){Animated.timing(animation,{toValue:1,useNativeDriver:\"web\"!==\"web\",duration:animationDuration}).start();if(duration!==0&&typeof duration===\"number\"){closeTimeoutRef.current=setTimeout(function(){handleClose();},duration);}return function(){closeTimeoutRef.current&&clearTimeout(closeTimeoutRef.current);};},[duration]);useEffect(function(){if(!props.open){closeTimeoutRef.current&&clearTimeout(closeTimeoutRef.current);handleClose();}},[props.open]);var handleClose=function handleClose(){Animated.timing(animation,{toValue:0,useNativeDriver:\"web\"!==\"web\",duration:animationDuration}).start(function(){return onDestroy();});};var panReleaseToLeft=function panReleaseToLeft(gestureState){Animated.timing(getPanResponderAnim(),{toValue:{x:-dims.width/10*9,y:gestureState.dy},useNativeDriver:\"web\"!==\"web\",duration:250}).start(function(){return onDestroy();});};var panReleaseToRight=function panReleaseToRight(gestureState){Animated.timing(getPanResponderAnim(),{toValue:{x:dims.width/10*9,y:gestureState.dy},useNativeDriver:\"web\"!==\"web\",duration:250}).start(function(){return onDestroy();});};var getPanResponder=function getPanResponder(){if(panResponderRef.current)return panResponderRef.current;var swipeThreshold=\"web\"===\"android\"?10:0;panResponderRef.current=PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(_,gestureState){return Math.abs(gestureState.dx)>swipeThreshold||Math.abs(gestureState.dy)>swipeThreshold;},onPanResponderMove:function onPanResponderMove(_,gestureState){var _getPanResponderAnim;(_getPanResponderAnim=getPanResponderAnim())===null||_getPanResponderAnim===void 0?void 0:_getPanResponderAnim.setValue({x:gestureState.dx,y:gestureState.dy});},onPanResponderRelease:function onPanResponderRelease(_,gestureState){if(gestureState.dx>50){panReleaseToRight(gestureState);}else if(gestureState.dx<-50){panReleaseToLeft(gestureState);}else{Animated.spring(getPanResponderAnim(),{toValue:{x:0,y:0},useNativeDriver:\"web\"!==\"web\"}).start();}}});return panResponderRef.current;};var getPanResponderAnim=function getPanResponderAnim(){if(panResponderAnimRef.current)return panResponderAnimRef.current;panResponderAnimRef.current=new Animated.ValueXY({x:0,y:0});return panResponderAnimRef.current;};if(icon===undefined){switch(type){case\"success\":{if(successIcon){icon=successIcon;}break;}case\"danger\":{if(dangerIcon){icon=dangerIcon;}break;}case\"warning\":{if(warningIcon){icon=warningIcon;}break;}}}var backgroundColor=\"\";switch(type){case\"success\":backgroundColor=successColor||\"rgb(46, 125, 50)\";break;case\"danger\":backgroundColor=dangerColor||\"rgb(211, 47, 47)\";break;case\"warning\":backgroundColor=warningColor||\"rgb(237, 108, 2)\";break;default:backgroundColor=normalColor||\"#333\";}var animationStyle={opacity:animation,transform:[{translateY:animation.interpolate({inputRange:[0,1],outputRange:placement===\"bottom\"?[20,0]:[-20,0]})}]};if(swipeEnabled){var _animationStyle$trans;(_animationStyle$trans=animationStyle.transform)===null||_animationStyle$trans===void 0?void 0:_animationStyle$trans.push(getPanResponderAnim().getTranslateTransform()[0]);}if(animationType===\"zoom-in\"){var _animationStyle$trans2;(_animationStyle$trans2=animationStyle.transform)===null||_animationStyle$trans2===void 0?void 0:_animationStyle$trans2.push({scale:animation.interpolate({inputRange:[0,1],outputRange:[0.7,1]})});}return React.createElement(Animated.View,_extends({pointerEvents:\"box-none\",ref:containerRef},swipeEnabled?getPanResponder().panHandlers:null,{style:[styles.container,animationStyle]}),props.renderType&&props.renderType[type]?props.renderType[type](props):props.renderToast?props.renderToast(props):React.createElement(TouchableWithoutFeedback,{disabled:!_onPress,onPress:function onPress(){return _onPress&&_onPress(id);}},React.createElement(View,{style:[styles.toastContainer,{maxWidth:dims.width/10*9,backgroundColor:backgroundColor},style]},icon?React.createElement(View,{style:styles.iconContainer},icon):null,React.isValidElement(message)?message:React.createElement(Text,{style:[styles.message,textStyle]},message))));};var styles=StyleSheet.create({container:{width:\"100%\",alignItems:\"center\"},toastContainer:{paddingHorizontal:12,paddingVertical:12,borderRadius:5,marginVertical:5,flexDirection:\"row\",alignItems:\"center\",overflow:\"hidden\"},message:{color:\"#fff\",fontWeight:\"500\"},iconContainer:{marginRight:5}});export default Toast;","map":{"version":3,"sources":["toast.tsx"],"names":["React","useRef","useEffect","useState","useDimensions","Toast","props","id","onDestroy","icon","type","message","duration","style","textStyle","animationDuration","animationType","successIcon","dangerIcon","warningIcon","successColor","dangerColor","warningColor","normalColor","placement","swipeEnabled","onPress","containerRef","animation","Animated","Value","panResponderRef","panResponderAnimRef","closeTimeoutRef","dims","timing","toValue","useNativeDriver","Platform","start","current","setTimeout","handleClose","clearTimeout","open","panReleaseToLeft","gestureState","getPanResponderAnim","x","width","y","dy","panReleaseToRight","getPanResponder","swipeThreshold","create","onMoveShouldSetPanResponder","_","Math","abs","dx","onPanResponderMove","setValue","onPanResponderRelease","spring","ValueXY","undefined","backgroundColor","animationStyle","opacity","transform","translateY","interpolate","inputRange","outputRange","push","getTranslateTransform","scale","panHandlers","styles","container","renderType","renderToast","toastContainer","maxWidth","iconContainer","isValidElement","alignItems","paddingHorizontal","paddingVertical","borderRadius","marginVertical","flexDirection","overflow","color","fontWeight","marginRight"],"mappings":"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","sourcesContent":["import React, { FC, useRef, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Animated,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  PanResponder,\r\n  PanResponderInstance,\r\n  PanResponderGestureState,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { useDimensions } from \"./utils/useDimensions\";\r\n\r\nexport interface ToastOptions {\r\n  /**\r\n   * Id is optional, you may provide an id only if you want to update toast later using toast.update()\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Customize toast icon\r\n   */\r\n  icon?: JSX.Element;\r\n\r\n  /**\r\n   * Toast types, You can implement your custom types with JSX using renderType method on ToastContainer.\r\n   */\r\n  type?: \"normal\" | \"success\" | \"danger\" | \"warning\" | string;\r\n\r\n  /**\r\n   * In ms, How long toast will stay before it go away\r\n   */\r\n  duration?: number;\r\n\r\n  /**\r\n   * Customize when toast should be placed\r\n   */\r\n  placement?: \"top\" | \"bottom\" | \"center\";\r\n\r\n  /**\r\n   * Customize style of toast\r\n   */\r\n  style?: StyleProp<ViewStyle>;\r\n\r\n  /**\r\n   * Customize style of toast text\r\n   */\r\n  textStyle?: StyleProp<TextStyle>;\r\n\r\n  /**\r\n   * Customize how fast toast will show and hide\r\n   */\r\n  animationDuration?: number;\r\n\r\n  /**\r\n   * Customize how toast is animated when added or removed\r\n   */\r\n  animationType?: \"slide-in\" | \"zoom-in\";\r\n\r\n  /**\r\n   * Customize success type icon\r\n   */\r\n  successIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize danger type icon\r\n   */\r\n  dangerIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize warning type icon\r\n   */\r\n  warningIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize success type color. changes toast background color\r\n   */\r\n  successColor?: string;\r\n\r\n  /**\r\n   * Customize danger type color. changes toast background color\r\n   */\r\n  dangerColor?: string;\r\n\r\n  /**\r\n   * Customize warning type color. changes toast background color\r\n   */\r\n  warningColor?: string;\r\n\r\n  /**\r\n   * Customize normal type color. changes toast background color\r\n   */\r\n  normalColor?: string;\r\n\r\n  /**\r\n   * Register event for when toast is pressed. If you're using a custom toast you have to pass this to a Touchable.\r\n   */\r\n  onPress?(id: string): void;\r\n\r\n  /**\r\n   * Execute event after toast is closed\r\n   */\r\n  onClose?(): void;\r\n\r\n  /**\r\n   * Payload data for custom toasts. You can pass whatever you want\r\n   */\r\n  data?: any;\r\n\r\n  swipeEnabled?: boolean;\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onDestroy(): void;\r\n  message: string | JSX.Element;\r\n  open: boolean;\r\n  renderToast?(toast: ToastProps): JSX.Element;\r\n  renderType?: { [type: string]: (toast: ToastProps) => JSX.Element };\r\n  onHide(): void;\r\n}\r\n\r\nconst Toast: FC<ToastProps> = (props) => {\r\n  let {\r\n    id,\r\n    onDestroy,\r\n    icon,\r\n    type = \"normal\",\r\n    message,\r\n    duration = 5000,\r\n    style,\r\n    textStyle,\r\n    animationDuration = 250,\r\n    animationType = \"slide-in\",\r\n    successIcon,\r\n    dangerIcon,\r\n    warningIcon,\r\n    successColor,\r\n    dangerColor,\r\n    warningColor,\r\n    normalColor,\r\n    placement,\r\n    swipeEnabled,\r\n    onPress,\r\n  } = props;\r\n\r\n  const containerRef = useRef<View>(null);\r\n  const [animation] = useState(new Animated.Value(0));\r\n  const panResponderRef = useRef<PanResponderInstance>();\r\n  const panResponderAnimRef = useRef<Animated.ValueXY>();\r\n  const closeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const dims = useDimensions();\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animation, {\r\n      toValue: 1,\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: animationDuration,\r\n    }).start();\r\n    if (duration !== 0 && typeof duration === \"number\") {\r\n      closeTimeoutRef.current = setTimeout(() => {\r\n        handleClose();\r\n      }, duration);\r\n    }\r\n\r\n    return () => {\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n    };\r\n  }, [duration]);\r\n\r\n  // Handles hide & hideAll\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      // Unregister close timeout\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n\r\n      // Close animation them remove from stack.\r\n      handleClose();\r\n    }\r\n  }, [props.open]);\r\n\r\n  const handleClose = () => {\r\n    Animated.timing(animation, {\r\n      toValue: 0,\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: animationDuration,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToLeft = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (-dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToRight = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const getPanResponder = () => {\r\n    if (panResponderRef.current) return panResponderRef.current;\r\n    const swipeThreshold = Platform.OS === \"android\" ? 10 : 0;\r\n    panResponderRef.current = PanResponder.create({\r\n      onMoveShouldSetPanResponder: (_, gestureState) => {\r\n        //return true if user is swiping, return false if it's a single click\r\n        return (\r\n          Math.abs(gestureState.dx) > swipeThreshold ||\r\n          Math.abs(gestureState.dy) > swipeThreshold\r\n        );\r\n      },\r\n      onPanResponderMove: (_, gestureState) => {\r\n        getPanResponderAnim()?.setValue({\r\n          x: gestureState.dx,\r\n          y: gestureState.dy,\r\n        });\r\n      },\r\n      onPanResponderRelease: (_, gestureState) => {\r\n        if (gestureState.dx > 50) {\r\n          panReleaseToRight(gestureState);\r\n        } else if (gestureState.dx < -50) {\r\n          panReleaseToLeft(gestureState);\r\n        } else {\r\n          Animated.spring(getPanResponderAnim(), {\r\n            toValue: { x: 0, y: 0 },\r\n            useNativeDriver: Platform.OS !== \"web\",\r\n          }).start();\r\n        }\r\n      },\r\n    });\r\n    return panResponderRef.current;\r\n  };\r\n\r\n  const getPanResponderAnim = () => {\r\n    if (panResponderAnimRef.current) return panResponderAnimRef.current;\r\n    panResponderAnimRef.current = new Animated.ValueXY({ x: 0, y: 0 });\r\n    return panResponderAnimRef.current;\r\n  };\r\n\r\n  if (icon === undefined) {\r\n    switch (type) {\r\n      case \"success\": {\r\n        if (successIcon) {\r\n          icon = successIcon;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"danger\": {\r\n        if (dangerIcon) {\r\n          icon = dangerIcon;\r\n        }\r\n        break;\r\n      }\r\n      case \"warning\": {\r\n        if (warningIcon) {\r\n          icon = warningIcon;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  let backgroundColor = \"\";\r\n  switch (type) {\r\n    case \"success\":\r\n      backgroundColor = successColor || \"rgb(46, 125, 50)\";\r\n      break;\r\n    case \"danger\":\r\n      backgroundColor = dangerColor || \"rgb(211, 47, 47)\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = warningColor || \"rgb(237, 108, 2)\";\r\n      break;\r\n    default:\r\n      backgroundColor = normalColor || \"#333\";\r\n  }\r\n\r\n  const animationStyle: Animated.WithAnimatedObject<ViewStyle> = {\r\n    opacity: animation,\r\n    transform: [\r\n      {\r\n        translateY: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: placement === \"bottom\" ? [20, 0] : [-20, 0], // 0 : 150, 0.5 : 75, 1 : 0\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (swipeEnabled) {\r\n    animationStyle.transform?.push(\r\n      getPanResponderAnim().getTranslateTransform()[0]\r\n    );\r\n  }\r\n\r\n  if (animationType === \"zoom-in\") {\r\n    animationStyle.transform?.push({\r\n      scale: animation.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [0.7, 1],\r\n      }),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Animated.View\r\n      pointerEvents={\"box-none\"}\r\n      ref={containerRef}\r\n      {...(swipeEnabled ? getPanResponder().panHandlers : null)}\r\n      style={[styles.container, animationStyle]}\r\n    >\r\n      {props.renderType && props.renderType[type] ? (\r\n        props.renderType[type](props)\r\n      ) : props.renderToast ? (\r\n        props.renderToast(props)\r\n      ) : (\r\n        <TouchableWithoutFeedback\r\n          disabled={!onPress}\r\n          onPress={() => onPress && onPress(id)}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.toastContainer,\r\n              { maxWidth: (dims.width / 10) * 9, backgroundColor },\r\n              style,\r\n            ]}\r\n          >\r\n            {icon ? <View style={styles.iconContainer}>{icon}</View> : null}\r\n            {React.isValidElement(message) ? (\r\n              message\r\n            ) : (\r\n              <Text style={[styles.message, textStyle]}>{message}</Text>\r\n            )}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { width: \"100%\", alignItems: \"center\" },\r\n  toastContainer: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginVertical: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\",\r\n  },\r\n  message: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n  iconContainer: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\nexport default Toast;\r\n"]},"metadata":{},"sourceType":"module"}