{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{PermissionStatus,createPermissionHook,UnavailabilityError,CodedError}from'expo-modules-core';import ExponentImagePicker from'./ExponentImagePicker';function validateOptions(options){var aspect=options.aspect,quality=options.quality,videoMaxDuration=options.videoMaxDuration;if(aspect!=null){var _aspect=_slicedToArray(aspect,2),x=_aspect[0],y=_aspect[1];if(x<=0||y<=0){throw new CodedError('ERR_INVALID_ARGUMENT',`Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`);}}if(quality&&(quality<0||quality>1)){throw new CodedError('ERR_INVALID_ARGUMENT',`Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`);}if(videoMaxDuration&&videoMaxDuration<0){throw new CodedError('ERR_INVALID_ARGUMENT',`Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`);}return options;}export function getCameraPermissionsAsync(){return _getCameraPermissionsAsync.apply(this,arguments);}function _getCameraPermissionsAsync(){_getCameraPermissionsAsync=_asyncToGenerator(function*(){return ExponentImagePicker.getCameraPermissionsAsync();});return _getCameraPermissionsAsync.apply(this,arguments);}export function getMediaLibraryPermissionsAsync(){return _getMediaLibraryPermissionsAsync.apply(this,arguments);}function _getMediaLibraryPermissionsAsync(){_getMediaLibraryPermissionsAsync=_asyncToGenerator(function*(){var writeOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);});return _getMediaLibraryPermissionsAsync.apply(this,arguments);}export function requestCameraPermissionsAsync(){return _requestCameraPermissionsAsync.apply(this,arguments);}function _requestCameraPermissionsAsync(){_requestCameraPermissionsAsync=_asyncToGenerator(function*(){return ExponentImagePicker.requestCameraPermissionsAsync();});return _requestCameraPermissionsAsync.apply(this,arguments);}export function requestMediaLibraryPermissionsAsync(){return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}function _requestMediaLibraryPermissionsAsync(){_requestMediaLibraryPermissionsAsync=_asyncToGenerator(function*(){var writeOnly=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var imagePickerMethod=ExponentImagePicker.requestMediaLibraryPermissionsAsync;return imagePickerMethod(writeOnly);});return _requestMediaLibraryPermissionsAsync.apply(this,arguments);}export var useMediaLibraryPermissions=createPermissionHook({getMethod:function getMethod(options){return getMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);},requestMethod:function requestMethod(options){return requestMediaLibraryPermissionsAsync(options==null?void 0:options.writeOnly);}});export var useCameraPermissions=createPermissionHook({getMethod:getCameraPermissionsAsync,requestMethod:requestCameraPermissionsAsync});export function getPendingResultAsync(){return _getPendingResultAsync.apply(this,arguments);}function _getPendingResultAsync(){_getPendingResultAsync=_asyncToGenerator(function*(){if(ExponentImagePicker.getPendingResultAsync){return ExponentImagePicker.getPendingResultAsync();}return[];});return _getPendingResultAsync.apply(this,arguments);}export function launchCameraAsync(){return _launchCameraAsync.apply(this,arguments);}function _launchCameraAsync(){_launchCameraAsync=_asyncToGenerator(function*(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!ExponentImagePicker.launchCameraAsync){throw new UnavailabilityError('ImagePicker','launchCameraAsync');}return yield ExponentImagePicker.launchCameraAsync(validateOptions(options));});return _launchCameraAsync.apply(this,arguments);}export function launchImageLibraryAsync(_x){return _launchImageLibraryAsync.apply(this,arguments);}function _launchImageLibraryAsync(){_launchImageLibraryAsync=_asyncToGenerator(function*(options){if(!ExponentImagePicker.launchImageLibraryAsync){throw new UnavailabilityError('ImagePicker','launchImageLibraryAsync');}if(options!=null&&options.allowsEditing&&options.allowsMultipleSelection){console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.'+\"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \"+'to fix this warning.');}return yield ExponentImagePicker.launchImageLibraryAsync(options!=null?options:{});});return _launchImageLibraryAsync.apply(this,arguments);}export*from'./ImagePicker.types';export{PermissionStatus};","map":{"version":3,"names":["PermissionStatus","createPermissionHook","UnavailabilityError","CodedError","ExponentImagePicker","validateOptions","options","aspect","quality","videoMaxDuration","_aspect","_slicedToArray","x","y","getCameraPermissionsAsync","_getCameraPermissionsAsync","apply","arguments","_asyncToGenerator","getMediaLibraryPermissionsAsync","_getMediaLibraryPermissionsAsync","writeOnly","length","undefined","requestCameraPermissionsAsync","_requestCameraPermissionsAsync","requestMediaLibraryPermissionsAsync","_requestMediaLibraryPermissionsAsync","imagePickerMethod","useMediaLibraryPermissions","getMethod","requestMethod","useCameraPermissions","getPendingResultAsync","_getPendingResultAsync","launchCameraAsync","_launchCameraAsync","launchImageLibraryAsync","_x","_launchImageLibraryAsync","allowsEditing","allowsMultipleSelection","console","warn"],"sources":["/Users/josh/src/ui/node_modules/expo-image-picker/src/ImagePicker.ts"],"sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  ImagePickerOptions,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerapermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will block\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be     called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n *\n * **Animated GIFs support:** On Android, if the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is explicitly set to `1.0` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG). On iOS, both quality and cropping are supported.\n *\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchImageLibraryAsync(\n  options?: ImagePickerOptions\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  if (options?.allowsEditing && options.allowsMultipleSelection) {\n    console.warn(\n      '[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' +\n        \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" +\n        'to fix this warning.'\n    );\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport * from './ImagePicker.types';\n\nexport { PermissionStatus, PermissionExpiration, PermissionHookOptions, PermissionResponse };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}