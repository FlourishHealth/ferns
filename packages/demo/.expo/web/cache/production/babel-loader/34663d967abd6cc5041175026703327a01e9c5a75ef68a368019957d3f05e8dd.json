{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useEffect,useRef,useState}from\"react\";import ToastContext from\"./context\";import Toast from\"../toast-container\";export var GlobalToast;var ToastProvider=function ToastProvider(_ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var toastRef=useRef(null);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),refState=_useState2[0],setRefState=_useState2[1];useEffect(function(){setRefState(toastRef.current);GlobalToast=toastRef.current;},[]);return React.createElement(ToastContext.Provider,{value:refState},children,React.createElement(Toast,_extends({ref:toastRef},props)));};export default ToastProvider;","map":{"version":3,"names":["React","useEffect","useRef","useState","ToastContext","Toast","GlobalToast","ToastProvider","_ref","children","props","_objectWithoutProperties","_excluded","toastRef","_useState","_useState2","_slicedToArray","refState","setRefState","current","createElement","Provider","value","_extends","ref"],"sources":["/Users/josh/src/ui/node_modules/react-native-toast-notifications/lib/module/hook/provider.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from \"react\";\r\nimport ToastContext, { ToastType } from \"./context\";\r\nimport Toast, { Props } from \"../toast-container\";\r\n\r\ntype PropsWithChildren = Props & {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport let GlobalToast: ToastType\r\n\r\nconst ToastProvider: FC<PropsWithChildren> = ({ children, ...props }) => {\r\n  const toastRef = useRef(null);\r\n  const [refState, setRefState] = useState({});\r\n\r\n  useEffect(() => {\r\n    setRefState(toastRef.current as any);\r\n    GlobalToast = toastRef.current as any\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={refState as any}>\r\n      {children}\r\n      <Toast ref={toastRef} {...props} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToastProvider;\r\n"],"mappings":"wcAAA,MAAO,CAAAA,KAAP,EAAoBC,SAApB,CAA+BC,MAA/B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,MAAO,CAAAC,YAAP,KAAwC,WAAxC,CACA,MAAO,CAAAC,KAAP,KAA6B,oBAA7B,CAMA,MAAO,IAAI,CAAAC,WAAJ,CAEP,GAAM,CAAAC,aAAoC,CAAG,QAAvC,CAAAA,aAAoCA,CAAAC,IAAA,CAA+B,IAAzB,CAAAC,QAAF,CAAAD,IAAA,CAAEC,QAAF,CAAeC,KAAA,CAAAC,wBAAA,CAAAH,IAAA,CAAAI,SAAA,EAC3D,GAAM,CAAAC,QAAQ,CAAGX,MAAM,CAAC,IAAD,CAAvB,CACA,IAAAY,SAAA,CAAgCX,QAAQ,CAAC,EAAD,CAAxC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAOG,QAAD,CAAAF,UAAA,IAAWG,WAAX,CAAAH,UAAA,IAENd,SAAS,CAAC,UAAM,CACdiB,WAAW,CAACL,QAAQ,CAACM,OAAV,CAAX,CACAb,WAAW,CAAGO,QAAQ,CAACM,OAAvB,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,MACE,CAAAnB,KAAA,CAAAoB,aAAA,CAAChB,YAAD,CAAciB,QAAd,EAAuBC,KAAK,CAAEL,QAA9B,EACGR,QADH,CAEET,KAAA,CAAAoB,aAAA,CAACf,KAAD,CAAAkB,QAAA,EAAOC,GAAG,CAAEX,QAAZ,EAA0BH,KAA1B,EAFF,CADF,CAMD,CAfD,CAiBA,cAAe,CAAAH,aAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}