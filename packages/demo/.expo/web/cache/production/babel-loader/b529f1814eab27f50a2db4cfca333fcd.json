{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{forwardRef,useContext,useState}from\"react\";import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import View from\"react-native-web/dist/exports/View\";import{Box}from\"./Box\";import{iconSizeToNumber}from\"./Common\";import{Icon}from\"./Icon\";import{Modal}from\"./Modal\";import{Text}from\"./Text\";import{ThemeContext}from\"./Theme\";import{Tooltip}from\"./Tooltip\";import{Unifier}from\"./Unifier\";export var IconButton=forwardRef(function(_ref,ref){var prefix=_ref.prefix,icon=_ref.icon,iconColor=_ref.iconColor,onClick=_ref.onClick,size=_ref.size,_ref$bgColor=_ref.bgColor,bgColor=_ref$bgColor===void 0?\"transparent\":_ref$bgColor,_ref$withConfirmation=_ref.withConfirmation,withConfirmation=_ref$withConfirmation===void 0?false:_ref$withConfirmation,_ref$confirmationText=_ref.confirmationText,confirmationText=_ref$confirmationText===void 0?\"Are you sure you want to continue?\":_ref$confirmationText,_ref$confirmationHead=_ref.confirmationHeading,confirmationHeading=_ref$confirmationHead===void 0?\"Confirm\":_ref$confirmationHead,tooltip=_ref.tooltip,indicator=_ref.indicator,indicatorNumber=_ref.indicatorNumber,_ref$indicatorStyle=_ref.indicatorStyle,indicatorStyle=_ref$indicatorStyle===void 0?{position:\"bottomRight\",color:\"primary\"}:_ref$indicatorStyle,testID=_ref.testID;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showConfirmation=_useState2[0],setShowConfirmation=_useState2[1];var opacity=1;var color;if(bgColor===\"transparentDarkGray\"){color=\"rgba(0, 0, 0, 0.5)\";}else if(bgColor===\"transparent\"||!bgColor){color=\"rgba(0, 0, 0, 0.0)\";}else{color=theme[bgColor];}var IndicatorPosition={bottomRight:{bottom:\"20%\",right:\"20%\"},bottomLeft:{bottom:\"20%\",left:\"20%\"},topRight:{top:\"20%\",right:\"20%\"},topLeft:{top:\"20%\",left:\"20%\"}};var indicatorPosition=Object.assign({position:\"absolute\"},IndicatorPosition[indicatorStyle.position]);var IndicatorNumPosition={bottomRight:{bottom:\"18%\",right:\"12%\"},bottomLeft:{bottom:\"10%\",left:\"10%\"},topRight:{top:\"-5%\",right:\"-5%\"},topLeft:{top:\"10%\",left:\"10%\"}};var numberIndicatorProps=Object.assign({position:\"absolute\"},IndicatorNumPosition[indicatorStyle.position]);function renderIndicator(){if(indicator&&indicatorNumber&&indicatorNumber>0){return React.createElement(View,{style:numberIndicatorProps},React.createElement(Box,{alignItems:\"center\",color:indicatorStyle.color,dangerouslySetInlineStyle:{__style:{padding:indicatorNumber&&indicatorNumber>9?2:0}},justifyContent:\"center\",minHeight:15,minWidth:15,rounding:\"pill\"},React.createElement(Text,{color:\"white\",size:\"sm\",weight:\"bold\"},indicatorNumber)));}else if(indicator){return React.createElement(View,{style:indicatorPosition},React.createElement(Icon,{color:indicatorStyle.color,name:\"circle\",prefix:prefix||\"fas\",size:\"sm\"}));}else{return null;}}var renderConfirmation=function renderConfirmation(){return React.createElement(Modal,{heading:confirmationHeading,primaryButtonOnClick:function primaryButtonOnClick(){onClick();setShowConfirmation(false);},primaryButtonText:\"Confirm\",secondaryButtonOnClick:function secondaryButtonOnClick(){return setShowConfirmation(false);},secondaryButtonText:\"Cancel\",size:\"sm\",visible:showConfirmation,onDismiss:function onDismiss(){setShowConfirmation(false);}},React.createElement(Text,null,confirmationText));};function renderIconButton(){return React.createElement(React.Fragment,null,React.createElement(Pressable,{ref:ref,hitSlop:{top:10,left:10,bottom:10,right:10},style:{opacity:opacity,backgroundColor:color,borderRadius:100,width:iconSizeToNumber(size)*2.5,height:iconSizeToNumber(size)*2.5,display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},testID:testID,onPress:function(){var _onPress=_asyncToGenerator(function*(){yield Unifier.utils.haptic();if(withConfirmation&&!showConfirmation){setShowConfirmation(true);}else if(onClick){onClick();}});function onPress(){return _onPress.apply(this,arguments);}return onPress;}()},React.createElement(Icon,{color:iconColor,name:icon,prefix:prefix||\"fas\",size:size}),renderIndicator()),Boolean(withConfirmation)&&renderConfirmation());}if(tooltip&&\"web\"===\"web\"){return React.createElement(Tooltip,{idealDirection:tooltip.idealDirection,text:tooltip.text},renderIconButton());}else{return renderIconButton();}});","map":{"version":3,"sources":["../src/IconButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { forwardRef, useContext, useState } from \"react\";\nimport { Platform, Pressable, View } from \"react-native\";\nimport { Box } from \"./Box\";\nimport { iconSizeToNumber } from \"./Common\";\nimport { Icon } from \"./Icon\";\nimport { Modal } from \"./Modal\";\nimport { Text } from \"./Text\";\nimport { ThemeContext } from \"./Theme\";\nimport { Tooltip } from \"./Tooltip\";\nimport { Unifier } from \"./Unifier\";\n// eslint-disable-next-line react/display-name\nexport const IconButton = forwardRef(({ prefix, icon, iconColor, onClick, size, bgColor = \"transparent\", withConfirmation = false, confirmationText = \"Are you sure you want to continue?\", confirmationHeading = \"Confirm\", tooltip, indicator, indicatorNumber, indicatorStyle = { position: \"bottomRight\", color: \"primary\" }, testID, }, ref) => {\n    const { theme } = useContext(ThemeContext);\n    const [showConfirmation, setShowConfirmation] = useState(false);\n    const opacity = 1;\n    let color;\n    if (bgColor === \"transparentDarkGray\") {\n        color = \"rgba(0, 0, 0, 0.5)\";\n    }\n    else if (bgColor === \"transparent\" || !bgColor) {\n        color = \"rgba(0, 0, 0, 0.0)\";\n    }\n    else {\n        color = theme[bgColor];\n    }\n    const IndicatorPosition = {\n        bottomRight: { bottom: \"20%\", right: \"20%\" },\n        bottomLeft: { bottom: \"20%\", left: \"20%\" },\n        topRight: { top: \"20%\", right: \"20%\" },\n        topLeft: { top: \"20%\", left: \"20%\" },\n    };\n    const indicatorPosition = Object.assign({ position: \"absolute\" }, IndicatorPosition[indicatorStyle.position]);\n    const IndicatorNumPosition = {\n        bottomRight: { bottom: \"18%\", right: \"12%\" },\n        bottomLeft: { bottom: \"10%\", left: \"10%\" },\n        topRight: { top: \"-5%\", right: \"-5%\" },\n        topLeft: { top: \"10%\", left: \"10%\" },\n    };\n    const numberIndicatorProps = Object.assign({ position: \"absolute\" }, IndicatorNumPosition[indicatorStyle.position]);\n    function renderIndicator() {\n        if (indicator && indicatorNumber && indicatorNumber > 0) {\n            return (React.createElement(View, { style: numberIndicatorProps },\n                React.createElement(Box, { alignItems: \"center\", color: indicatorStyle.color, dangerouslySetInlineStyle: {\n                        __style: {\n                            padding: indicatorNumber && indicatorNumber > 9 ? 2 : 0,\n                        },\n                    }, justifyContent: \"center\", minHeight: 15, minWidth: 15, rounding: \"pill\" },\n                    React.createElement(Text, { color: \"white\", size: \"sm\", weight: \"bold\" }, indicatorNumber))));\n        }\n        else if (indicator) {\n            return (React.createElement(View, { style: indicatorPosition },\n                React.createElement(Icon, { color: indicatorStyle.color, name: \"circle\", prefix: prefix || \"fas\", size: \"sm\" })));\n        }\n        else {\n            return null;\n        }\n    }\n    const renderConfirmation = () => {\n        return (React.createElement(Modal, { heading: confirmationHeading, primaryButtonOnClick: () => {\n                onClick();\n                setShowConfirmation(false);\n            }, primaryButtonText: \"Confirm\", secondaryButtonOnClick: () => setShowConfirmation(false), secondaryButtonText: \"Cancel\", size: \"sm\", visible: showConfirmation, onDismiss: () => {\n                setShowConfirmation(false);\n            } },\n            React.createElement(Text, null, confirmationText)));\n    };\n    function renderIconButton() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Pressable, { ref: ref, hitSlop: { top: 10, left: 10, bottom: 10, right: 10 }, style: {\n                    opacity,\n                    backgroundColor: color,\n                    borderRadius: 100,\n                    // paddingBottom: iconSizeToNumber(size) / 4,\n                    // paddingTop: iconSizeToNumber(size) / 4,\n                    // paddingLeft: iconSizeToNumber(size) / 2,\n                    // paddingRight: iconSizeToNumber(size) / 2,\n                    width: iconSizeToNumber(size) * 2.5,\n                    height: iconSizeToNumber(size) * 2.5,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }, testID: testID, onPress: async () => {\n                    await Unifier.utils.haptic();\n                    if (withConfirmation && !showConfirmation) {\n                        setShowConfirmation(true);\n                    }\n                    else if (onClick) {\n                        onClick();\n                    }\n                } },\n                React.createElement(Icon, { color: iconColor, name: icon, prefix: prefix || \"fas\", size: size }),\n                renderIndicator()),\n            Boolean(withConfirmation) && renderConfirmation()));\n    }\n    // Only add for web. This doesn't make much sense for mobile,\n    // since the action would be performed for the button as well as the tooltip appearing. TODO:\n    // Add tooltip info button next to the icon button on mobile.\n    if (tooltip && Platform.OS === \"web\") {\n        return (React.createElement(Tooltip, { idealDirection: tooltip.idealDirection, text: tooltip.text }, renderIconButton()));\n    }\n    else {\n        return renderIconButton();\n    }\n});\n//# sourceMappingURL=IconButton.js.map"]},"metadata":{},"sourceType":"module"}