{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import camelCase from\"lodash/camelCase\";import React,{createContext,useContext,useEffect,useState}from\"react\";var OpenAPIContext=createContext(null);export var OpenAPIProvider=function OpenAPIProvider(_ref){var children=_ref.children,specUrl=_ref.specUrl;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),spec=_useState2[0],setSpec=_useState2[1];var getModelFields=function getModelFields(modelName){var _a,_b,_c,_d,_e,_f,_g,_h,_j;var modelPath=`/${camelCase(modelName.replace(/\\s/g,\"\"))}/`;var rootConfig=(_a=spec===null||spec===void 0?void 0:spec.paths)===null||_a===void 0?void 0:_a[modelPath];if(!rootConfig){if((spec===null||spec===void 0?void 0:spec.paths)&&modelName){console.warn(`No OpenAPI model found for ${modelName}`);}return null;}return(_j=(_h=(_g=(_f=(_e=(_d=(_c=(_b=rootConfig===null||rootConfig===void 0?void 0:rootConfig.get)===null||_b===void 0?void 0:_b.responses)===null||_c===void 0?void 0:_c[\"200\"])===null||_d===void 0?void 0:_d.content)===null||_e===void 0?void 0:_e[\"application/json\"])===null||_f===void 0?void 0:_f.schema)===null||_g===void 0?void 0:_g.properties)===null||_h===void 0?void 0:_h.data)===null||_j===void 0?void 0:_j.items;};var getModelField=function getModelField(modelName,fieldName){var _a,_b;var fields=getModelFields(modelName);var dotFields=fieldName.split(\".\");var field=(_a=fields===null||fields===void 0?void 0:fields.properties)===null||_a===void 0?void 0:_a[dotFields[0]];if(!field&&fieldName&&(fields===null||fields===void 0?void 0:fields.properties)){console.warn(`No OpenAPI field found for ${modelName}:${fieldName}`);}for(var dotField of dotFields.slice(1)){field=(_b=field===null||field===void 0?void 0:field.properties)===null||_b===void 0?void 0:_b[dotField];}return field;};useEffect(function(){if(!specUrl){return;}fetch(specUrl).then(function(){var _ref2=_asyncToGenerator(function*(response){var data=yield response.json();setSpec(data);});return function(_x){return _ref2.apply(this,arguments);};}()).catch(function(error){return console.error(`Error fetching OpenAPI spec: ${error}`);});},[specUrl]);return React.createElement(OpenAPIContext.Provider,{value:{spec:spec,getModelFields:getModelFields,getModelField:getModelField}},children);};export var useOpenAPISpec=function useOpenAPISpec(){var context=useContext(OpenAPIContext);if(!context){throw new Error(\"useOpenAPISpec must be used within an OpenAPIProvider\");}return context;};","map":{"version":3,"sources":["../src/OpenAPIContext.tsx"],"names":[],"mappings":"wIAAA,MAAO,CAAA,SAAS,KAAM,kBAAkB,CACxC,MAAO,CAAA,KAAK,EAAG,aAAa,CAAE,UAAU,CAAE,SAAS,CAAE,QAAQ,KAAO,OAAO,CAU3E,GAAM,CAAA,cAAc,CAAG,aAAa,CAA4B,IAAI,CAAC,CAErE,MAAO,IAAM,CAAA,eAAe,CAAG,QAAlB,CAAA,eAAe,CAAA,IAAA,CAAqE,IAAhE,CAAA,QAAQ,CAAA,IAAA,CAAR,QAAQ,CAAE,OAAO,CAAA,IAAA,CAAP,OAAO,CAChD,IAAA,SAAA,CAAwB,QAAQ,CAAqB,IAAI,CAAC,CAAA,UAAA,CAAA,cAAA,CAAA,SAAA,IAAnD,IAAI,CAAA,UAAA,IAAE,OAAO,CAAA,UAAA,IAEpB,GAAM,CAAA,cAAc,CAAG,QAAjB,CAAA,cAAc,CAAI,SAAiB,CAAwB,C,+BAC/D,GAAM,CAAA,SAAS,CAAG,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAAC,GAAG,CAChE,GAAM,CAAA,UAAU,CAAG,CAAA,EAAA,CAAA,IAAI,GAAA,IAAA,EAAJ,IAAI,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAJ,IAAI,CAAE,KAAK,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAG,SAAS,CAAC,CAC3C,GAAI,CAAC,UAAU,CAAE,CACf,GAAI,CAAA,IAAI,GAAA,IAAA,EAAJ,IAAI,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAJ,IAAI,CAAE,KAAK,GAAI,SAAS,CAAE,CAC5B,OAAO,CAAC,IAAI,CAAC,8BAA8B,SAAS,EAAE,CAAC,CACzD,CACA,MAAO,KAAI,CACb,CAEA,MAAO,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,UAAU,GAAA,IAAA,EAAV,UAAU,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAV,UAAU,CAAE,GAAG,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAE,SAAS,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAG,KAAK,CAAC,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAE,OAAO,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAG,kBAAkB,CAAC,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAE,MAAM,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAE,UAAU,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CACzF,IAAI,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAE,KAAK,CACjB,CAAC,CAED,GAAM,CAAA,aAAa,CAAG,QAAhB,CAAA,aAAa,CAAI,SAAiB,CAAE,SAAiB,CAAsB,C,UAC/E,GAAM,CAAA,MAAM,CAAG,cAAc,CAAC,SAAS,CAAC,CACxC,GAAM,CAAA,SAAS,CAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAEtC,GAAI,CAAA,KAAK,CAAG,CAAA,EAAA,CAAA,MAAM,GAAA,IAAA,EAAN,MAAM,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAN,MAAM,CAAE,UAAU,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAC9C,GAAI,CAAC,KAAK,EAAI,SAAS,GAAI,MAAM,GAAA,IAAA,EAAN,MAAM,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAN,MAAM,CAAE,UAAU,CAAA,CAAE,CAC7C,OAAO,CAAC,IAAI,CAAC,8BAA8B,SAAS,IAAI,SAAS,EAAE,CAAC,CACtE,CAEA,IAAK,GAAM,CAAA,QAAQ,GAAI,CAAA,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CACzC,KAAK,CAAG,CAAA,EAAA,CAAA,KAAK,GAAA,IAAA,EAAL,KAAK,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAL,KAAK,CAAE,UAAU,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAG,QAAQ,CAAC,CACvC,CACA,MAAO,CAAA,KAAK,CACd,CAAC,CAGD,SAAS,CAAC,UAAW,CACnB,GAAI,CAAC,OAAO,CAAE,CACZ,OACF,CAEA,KAAK,CAAC,OAAO,CAAC,CACX,IAAI,gBAAA,KAAA,CAAA,iBAAA,CAAC,UAAO,QAAQ,CAAI,CACvB,GAAM,CAAA,IAAI,MAAU,CAAA,QAAQ,CAAC,IAAI,CAAA,CAAkB,CACnD,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,kBAAA,EAAA,SAAA,KAAA,CAAA,KAAA,MAAA,SAAA,QAAC,CACD,KAAK,CAAC,SAAC,KAAU,QAAK,CAAA,OAAO,CAAC,KAAK,CAAC,gCAAgC,KAAK,EAAE,CAAC,GAAC,CAClF,CAAC,CAAE,CAAC,OAAO,CAAC,CAAC,CAEb,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,cAAc,CAAC,QAAQ,CAAA,CAAC,KAAK,CAAE,CAAC,IAAI,CAAJ,IAAI,CAAE,cAAc,CAAd,cAAc,CAAE,aAAa,CAAb,aAAa,CAAC,CAAA,CAClE,QAAQ,CACe,CAE9B,CAAC,CAED,MAAO,IAAM,CAAA,cAAc,CAAG,QAAjB,CAAA,cAAc,CAAA,CAAQ,CACjC,GAAM,CAAA,OAAO,CAAG,UAAU,CAAC,cAAc,CAAC,CAC1C,GAAI,CAAC,OAAO,CAAE,CACZ,KAAM,IAAI,CAAA,KAAK,CAAC,uDAAuD,CAAC,CAC1E,CACA,MAAO,CAAA,OAAO,CAChB,CAAC","sourceRoot":"","sourcesContent":["import camelCase from \"lodash/camelCase\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nconst OpenAPIContext = createContext(null);\nexport const OpenAPIProvider = ({ children, specUrl }) => {\n    const [spec, setSpec] = useState(null);\n    const getModelFields = (modelName) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const modelPath = `/${camelCase(modelName.replace(/\\s/g, \"\"))}/`;\n        const rootConfig = (_a = spec === null || spec === void 0 ? void 0 : spec.paths) === null || _a === void 0 ? void 0 : _a[modelPath];\n        if (!rootConfig) {\n            if ((spec === null || spec === void 0 ? void 0 : spec.paths) && modelName) {\n                console.warn(`No OpenAPI model found for ${modelName}`);\n            }\n            return null;\n        }\n        return (_j = (_h = (_g = (_f = (_e = (_d = (_c = (_b = rootConfig === null || rootConfig === void 0 ? void 0 : rootConfig.get) === null || _b === void 0 ? void 0 : _b.responses) === null || _c === void 0 ? void 0 : _c[\"200\"]) === null || _d === void 0 ? void 0 : _d.content) === null || _e === void 0 ? void 0 : _e[\"application/json\"]) === null || _f === void 0 ? void 0 : _f.schema) === null || _g === void 0 ? void 0 : _g.properties) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.items;\n    };\n    const getModelField = (modelName, fieldName) => {\n        var _a, _b;\n        const fields = getModelFields(modelName);\n        const dotFields = fieldName.split(\".\");\n        let field = (_a = fields === null || fields === void 0 ? void 0 : fields.properties) === null || _a === void 0 ? void 0 : _a[dotFields[0]];\n        if (!field && fieldName && (fields === null || fields === void 0 ? void 0 : fields.properties)) {\n            console.warn(`No OpenAPI field found for ${modelName}:${fieldName}`);\n        }\n        for (const dotField of dotFields.slice(1)) {\n            field = (_b = field === null || field === void 0 ? void 0 : field.properties) === null || _b === void 0 ? void 0 : _b[dotField];\n        }\n        return field;\n    };\n    // Fetch the OpenAPI spec from the provided URL.\n    useEffect(() => {\n        if (!specUrl) {\n            return;\n        }\n        fetch(specUrl)\n            .then(async (response) => {\n            const data = (await response.json());\n            setSpec(data);\n        })\n            .catch((error) => console.error(`Error fetching OpenAPI spec: ${error}`));\n    }, [specUrl]);\n    return (React.createElement(OpenAPIContext.Provider, { value: { spec, getModelFields, getModelField } }, children));\n};\nexport const useOpenAPISpec = () => {\n    const context = useContext(OpenAPIContext);\n    if (!context) {\n        throw new Error(\"useOpenAPISpec must be used within an OpenAPIProvider\");\n    }\n    return context;\n};\n//# sourceMappingURL=OpenAPIContext.js.map"]},"metadata":{},"sourceType":"module"}