{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState}from\"react\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";export var Spinner=function Spinner(_ref){var size=_ref.size,color=_ref.color;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];useEffect(function(){var timer=setTimeout(function(){return setShow(true);},300);return function(){return clearTimeout(timer);};},[]);if(!show){return null;}var spinnerSize=size===\"sm\"?\"small\":\"large\";return React.createElement(ActivityIndicator,{color:color!==null&&color!==void 0?color:\"darkGray\",size:spinnerSize});};","map":{"version":3,"sources":["../src/Spinner.tsx"],"names":[],"mappings":"iEAAA,MAAO,CAAA,KAAK,EAAiB,SAAS,CAAE,QAAQ,KAAO,OAAO,CAAC,OAAA,iBAAA,uDAK/D,MAAO,IAAM,CAAA,OAAO,CAAG,QAAV,CAAA,OAAO,CAAA,IAAA,CAAwD,IAAnD,CAAA,IAAI,CAAA,IAAA,CAAJ,IAAI,CAAE,KAAK,CAAA,IAAA,CAAL,KAAK,CAClC,IAAA,SAAA,CAAwB,QAAQ,CAAC,KAAK,CAAC,CAAA,UAAA,CAAA,cAAA,CAAA,SAAA,IAAhC,IAAI,CAAA,UAAA,IAAE,OAAO,CAAA,UAAA,IAIpB,SAAS,CAAC,UAAK,CACb,GAAM,CAAA,KAAK,CAAG,UAAU,CAAC,iBAAM,CAAA,OAAO,CAAC,IAAI,CAAC,GAAE,GAAG,CAAC,CAClD,MAAO,kBAAM,CAAA,YAAY,CAAC,KAAK,CAAC,GAClC,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAAC,IAAI,CAAE,CACT,MAAO,KAAI,CACb,CACA,GAAM,CAAA,WAAW,CAAsB,IAAI,GAAK,IAAI,CAAG,OAAO,CAAG,OAAO,CACxE,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAA,CAAC,KAAK,CAAE,KAAK,GAAA,IAAA,EAAL,KAAK,GAAA,IAAA,EAAA,CAAL,KAAK,CAAI,UAAU,CAAE,IAAI,CAAE,WAAW,CAAA,CAAI,CAC7E,CAAC","sourceRoot":"","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator } from \"react-native\";\nexport const Spinner = ({ size, color }) => {\n    const [show, setShow] = useState(false);\n    // The delay is for perceived performance. You don't want to show a spinner when you're doing a\n    // quick action.\n    useEffect(() => {\n        const timer = setTimeout(() => setShow(true), 300);\n        return () => clearTimeout(timer);\n    }, []);\n    if (!show) {\n        return null;\n    }\n    const spinnerSize = size === \"sm\" ? \"small\" : \"large\";\n    return React.createElement(ActivityIndicator, { color: color !== null && color !== void 0 ? color : \"darkGray\", size: spinnerSize });\n};\n//# sourceMappingURL=Spinner.js.map"]},"metadata":{},"sourceType":"module"}