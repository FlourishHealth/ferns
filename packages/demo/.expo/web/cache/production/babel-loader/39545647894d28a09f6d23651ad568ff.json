{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import get from\"lodash/get\";import Platform from\"react-native-web/dist/exports/Platform\";import{COUNTY_AND_COUNTY_EQUIVALENT_ENTITIES}from\"./Constants\";export function mergeInlineStyles(inlineStyle,newStyle){var inline=get(inlineStyle,\"__style\");return{__style:Object.assign(Object.assign({},inline),newStyle)};}export function isTestUser(profile){return profile&&profile.email&&(profile.email.indexOf(\"nang.io\")>-1||profile.email.indexOf(\"example.com\")>-1);}export var iconNumberToSize=function iconNumberToSize(){var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:16;var iconSize;if(size<8){iconSize=\"xs\";}else if(size<12){iconSize=\"sm\";}else if(size<14){iconSize=\"md\";}else if(size<20){iconSize=\"lg\";}else{iconSize=\"xl\";}return iconSize;};export var identity=function identity(){return{className:new Set(),inlineStyle:{}};};export var fromClassName=function fromClassName(){for(var _len=arguments.length,classNames=new Array(_len),_key=0;_key<_len;_key++){classNames[_key]=arguments[_key];}return{className:new Set(classNames),inlineStyle:{}};};export var fromInlineStyle=function fromInlineStyle(inlineStyle){return{className:new Set(),inlineStyle:inlineStyle};};export var concat=function concat(styles){return styles.reduce(function(_ref,_ref2){var classNameA=_ref.className,inlineStyleA=_ref.inlineStyle;var classNameB=_ref2.className,inlineStyleB=_ref2.inlineStyle;return{className:new Set([].concat(_toConsumableArray(classNameA),_toConsumableArray(classNameB))),inlineStyle:Object.assign(Object.assign({},inlineStyleA),inlineStyleB)};},identity());};export var mapClassName=function mapClassName(fn){return function(_ref3){var className=_ref3.className,inlineStyle=_ref3.inlineStyle;return{className:new Set(Array.from(className).map(fn)),inlineStyle:inlineStyle};};};export var toProps=function toProps(_ref4){var className=_ref4.className,inlineStyle=_ref4.inlineStyle;var props={};if(className.size>0){props.className=Array.from(className).sort().join(\" \");}if(Object.keys(inlineStyle).length>0){props.style=inlineStyle;}return props;};export var toggle=function toggle(){for(var _len2=arguments.length,classNames=new Array(_len2),_key2=0;_key2<_len2;_key2++){classNames[_key2]=arguments[_key2];}return function(val){return val?fromClassName.apply(void 0,classNames):identity();};};export var mapping=function mapping(map){return function(val){return Object.prototype.hasOwnProperty.call(map,val)?fromClassName(map[val]):identity();};};export var range=function range(scale){return function(n){return fromClassName(`${scale}${n<0?`N${Math.abs(n)}`:n}`);};};export var rangeWithoutZero=function rangeWithoutZero(scale){return function(n){return n===0?identity():range(scale)(n);};};export function bind(fn,scope){var map=mapClassName(function(name){return scope[name];});return function(val){return map(fn(val));};}export var union=function union(){for(var _len3=arguments.length,fns=new Array(_len3),_key3=0;_key3<_len3;_key3++){fns[_key3]=arguments[_key3];}return function(val){return concat(fns.map(function(fn){return fn(val);}));};};export var isNative=function isNative(){return[\"android\",\"ios\"].includes(\"web\");};export var findAddressComponent=function findAddressComponent(components,type){var _a,_b;return(_b=(_a=components.find(function(component){return component.types.includes(type);}))===null||_a===void 0?void 0:_a.long_name)!==null&&_b!==void 0?_b:\"\";};export var processAddressComponents=function processAddressComponents(addressComponents,options){var processedAddressComponents={address1:\"\",city:\"\",state:\"\",zipcode:\"\"};if(!addressComponents||addressComponents.length===0){console.warn(\"Invalid address components\");if(options===null||options===void 0?void 0:options.includeCounty){return Object.assign(Object.assign({},processedAddressComponents),{countyName:\"\",countyCode:\"\"});}else{return processedAddressComponents;}}var streetNumber=findAddressComponent(addressComponents,\"street_number\");var streetName=findAddressComponent(addressComponents,\"route\");var city=findAddressComponent(addressComponents,\"locality\");var state=findAddressComponent(addressComponents,\"administrative_area_level_1\");var zipcode=findAddressComponent(addressComponents,\"postal_code\");processedAddressComponents={address1:`${streetNumber} ${streetName}`.trim(),city:city,state:state,zipcode:zipcode};if(options===null||options===void 0?void 0:options.includeCounty){var countyName=findAddressComponent(addressComponents,\"administrative_area_level_2\");if(state&&countyName){var countyCode=formattedCountyCode(state,countyName);processedAddressComponents=Object.assign(Object.assign({},processedAddressComponents),{countyName:countyName,countyCode:countyCode});}else{processedAddressComponents=Object.assign(Object.assign({},processedAddressComponents),{countyName:countyName});}}return processedAddressComponents;};export var isValidGoogleApiKey=function isValidGoogleApiKey(apiKey){if(typeof apiKey!==\"string\"||apiKey.trim().length===0){console.warn(\"Google API key validation failed: key is not a string or is empty\");return false;}if(apiKey.length<30||apiKey.length>50){console.warn(\"Google API key validation failed: key is invalid length\");return false;}var apiKeyRegex=/^[A-Za-z0-9-_]+$/;if(!apiKeyRegex.test(apiKey)){console.warn(\"Google API key validation failed: key contains invalid characters\");return false;}return true;};export function formattedCountyCode(state,countyName){var _a;var stateKey=state.replace(/\\s+/g,\"\").toLowerCase();var countyKey=countyName.trim().toLowerCase().replace(/[\\s.'-]/g,\"\");var countyData=(_a=COUNTY_AND_COUNTY_EQUIVALENT_ENTITIES[stateKey])===null||_a===void 0?void 0:_a[countyKey];if(!countyData){return\"\";}return`${countyData.stateFP}${countyData.countyFP}`;}export function isAPIError(error){var _a;return error&&((_a=error.data)===null||_a===void 0?void 0:_a.title);}export function printAPIError(error){var details=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var _a,_b,_c;var message=(_a=error.data)===null||_a===void 0?void 0:_a.title;if(((_b=error.data)===null||_b===void 0?void 0:_b.detail)&&details){message=`${message}: ${(_c=error.data)===null||_c===void 0?void 0:_c.detail}`;}return message;}","map":{"version":3,"sources":["../src/Utilities.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// Originally based on https://github.com/pinterest/gestalt\n// Forked, updated to Typescript, and added features.\nimport get from \"lodash/get\";\nimport { Platform } from \"react-native\";\nimport { COUNTY_AND_COUNTY_EQUIVALENT_ENTITIES } from \"./Constants\";\nexport function mergeInlineStyles(inlineStyle, newStyle) {\n    const inline = get(inlineStyle, \"__style\");\n    return {\n        __style: Object.assign(Object.assign({}, inline), newStyle),\n    };\n}\nexport function isTestUser(profile) {\n    return (profile &&\n        profile.email &&\n        (profile.email.indexOf(\"nang.io\") > -1 || profile.email.indexOf(\"example.com\") > -1));\n}\nexport const iconNumberToSize = (size = 16) => {\n    let iconSize;\n    if (size < 8) {\n        iconSize = \"xs\";\n    }\n    else if (size < 12) {\n        iconSize = \"sm\";\n    }\n    else if (size < 14) {\n        iconSize = \"md\";\n    }\n    else if (size < 20) {\n        iconSize = \"lg\";\n    }\n    else {\n        iconSize = \"xl\";\n    }\n    return iconSize;\n};\nexport const identity = () => ({\n    className: new Set(),\n    inlineStyle: {},\n});\nexport const fromClassName = (...classNames) => ({\n    className: new Set(classNames),\n    inlineStyle: {},\n});\nexport const fromInlineStyle = (inlineStyle) => ({\n    className: new Set(),\n    inlineStyle,\n});\nexport const concat = (styles) => styles.reduce(({ className: classNameA, inlineStyle: inlineStyleA }, { className: classNameB, inlineStyle: inlineStyleB }) => ({\n    className: new Set([...classNameA, ...classNameB]),\n    inlineStyle: Object.assign(Object.assign({}, inlineStyleA), inlineStyleB),\n}), identity());\nexport const mapClassName = (fn) => ({ className, inlineStyle }) => ({\n    className: new Set(Array.from(className).map(fn)),\n    inlineStyle,\n});\nexport const toProps = ({ className, inlineStyle, }) => {\n    const props = {};\n    if (className.size > 0) {\n        // Sorting here ensures that classNames are always stable, reducing diff\n        // churn. Box usually has a small number of properties so it's not a perf\n        // concern.\n        props.className = Array.from(className).sort().join(\" \");\n    }\n    if (Object.keys(inlineStyle).length > 0) {\n        props.style = inlineStyle;\n    }\n    return props;\n};\n// Adds a classname when a property is present.\n//\n//     <Box top />\n//\nexport const toggle = (...classNames) => (val) => val ? fromClassName(...classNames) : identity();\n// Maps string values to classes\n//\n//     <Box alignItems=\"center\" />\n//\nexport const mapping = (map) => (val) => Object.prototype.hasOwnProperty.call(map, val) ? fromClassName(map[val]) : identity();\n// Maps a range of integers to a range of classnames\n//\n//     <Box padding={1} />\n//\nexport const range = (scale) => (n) => fromClassName(`${scale}${n < 0 ? `N${Math.abs(n)}` : n}`);\n// Like `range`, maps a range of integers to a range of classnames, excluding\n// zero values.\n//\n//     <Box padding={0} />\nexport const rangeWithoutZero = (scale) => (n) => n === 0 ? identity() : range(scale)(n);\n// Binds a string classname to the value in an object. Useful when interacting\n// with ranges that need to come dynamically from a style object. This is\n// similar to the NPM package 'classnames/bind'.\nexport function bind(fn, scope) {\n    const map = mapClassName((name) => scope[name]);\n    return (val) => map(fn(val));\n}\n// This takes a series of the previously defined functors, runs them all\n// against a value and returns the set of their classnames.\nexport const union = (...fns) => (val) => concat(fns.map((fn) => fn(val)));\nexport const isNative = () => {\n    return [\"android\", \"ios\"].includes(Platform.OS);\n};\nexport const findAddressComponent = (components, type) => {\n    var _a, _b;\n    return ((_b = (_a = components.find((component) => component.types.includes(type))) === null || _a === void 0 ? void 0 : _a.long_name) !== null && _b !== void 0 ? _b : \"\");\n};\nexport const processAddressComponents = (addressComponents, options) => {\n    let processedAddressComponents = {\n        address1: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n    };\n    if (!addressComponents || addressComponents.length === 0) {\n        console.warn(\"Invalid address components\");\n        if (options === null || options === void 0 ? void 0 : options.includeCounty) {\n            return Object.assign(Object.assign({}, processedAddressComponents), { countyName: \"\", countyCode: \"\" });\n        }\n        else {\n            return processedAddressComponents;\n        }\n    }\n    const streetNumber = findAddressComponent(addressComponents, \"street_number\");\n    const streetName = findAddressComponent(addressComponents, \"route\");\n    const city = findAddressComponent(addressComponents, \"locality\");\n    const state = findAddressComponent(addressComponents, \"administrative_area_level_1\");\n    const zipcode = findAddressComponent(addressComponents, \"postal_code\");\n    processedAddressComponents = {\n        address1: `${streetNumber} ${streetName}`.trim(),\n        city,\n        state,\n        zipcode,\n    };\n    if (options === null || options === void 0 ? void 0 : options.includeCounty) {\n        const countyName = findAddressComponent(addressComponents, \"administrative_area_level_2\");\n        if (state && countyName) {\n            const countyCode = formattedCountyCode(state, countyName);\n            processedAddressComponents = Object.assign(Object.assign({}, processedAddressComponents), { countyName,\n                countyCode });\n        }\n        else {\n            processedAddressComponents = Object.assign(Object.assign({}, processedAddressComponents), { countyName });\n        }\n    }\n    return processedAddressComponents;\n};\n// Google does not provide a way to validate API keys, so we have to do it ourselves\nexport const isValidGoogleApiKey = (apiKey) => {\n    if (typeof apiKey !== \"string\" || apiKey.trim().length === 0) {\n        console.warn(\"Google API key validation failed: key is not a string or is empty\");\n        return false;\n    }\n    // Typical Google API keys are around 39 characters\n    if (apiKey.length < 30 || apiKey.length > 50) {\n        console.warn(\"Google API key validation failed: key is invalid length\");\n        return false;\n    }\n    // Check the presence of alphanumeric characters and dashes\n    const apiKeyRegex = /^[A-Za-z0-9-_]+$/;\n    if (!apiKeyRegex.test(apiKey)) {\n        console.warn(\"Google API key validation failed: key contains invalid characters\");\n        return false;\n    }\n    return true;\n};\nexport function formattedCountyCode(state, countyName) {\n    var _a;\n    // Remove whitespace and convert to lowercase for comparison\n    const stateKey = state.replace(/\\s+/g, \"\").toLowerCase();\n    // Remove whitespace, periods, apostrophes, and dashes for comparison\n    const countyKey = countyName\n        .trim()\n        .toLowerCase()\n        .replace(/[\\s.'-]/g, \"\");\n    const countyData = (_a = COUNTY_AND_COUNTY_EQUIVALENT_ENTITIES[stateKey]) === null || _a === void 0 ? void 0 : _a[countyKey];\n    if (!countyData) {\n        return \"\";\n    }\n    return `${countyData.stateFP}${countyData.countyFP}`;\n}\nexport function isAPIError(error) {\n    var _a;\n    return error && ((_a = error.data) === null || _a === void 0 ? void 0 : _a.title);\n}\nexport function printAPIError(error, details = true) {\n    var _a, _b, _c;\n    let message = (_a = error.data) === null || _a === void 0 ? void 0 : _a.title;\n    if (((_b = error.data) === null || _b === void 0 ? void 0 : _b.detail) && details) {\n        message = `${message}: ${(_c = error.data) === null || _c === void 0 ? void 0 : _c.detail}`;\n    }\n    return message;\n}\n//# sourceMappingURL=Utilities.js.map"]},"metadata":{},"sourceType":"module"}