{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Animated from'react-native-reanimated';import{DEFAULT_DRAWER_WIDTH,SWIPE_MIN_DISTANCE,SWIPE_MIN_OFFSET,SWIPE_MIN_VELOCITY}from'../../constants';import{DrawerProgressContext}from'../../utils/DrawerProgressContext';import{GestureState,PanGestureHandler}from'../GestureHandler';import{Overlay}from'./Overlay';var Clock=Animated.Clock,Value=Animated.Value,onChange=Animated.onChange,clockRunning=Animated.clockRunning,startClock=Animated.startClock,stopClock=Animated.stopClock,spring=Animated.spring,abs=Animated.abs,add=Animated.add,and=Animated.and,block=Animated.block,call=Animated.call,cond=Animated.cond,divide=Animated.divide,eq=Animated.eq,event=Animated.event,greaterThan=Animated.greaterThan,lessThan=Animated.lessThan,max=Animated.max,min=Animated.min,multiply=Animated.multiply,neq=Animated.neq,or=Animated.or,set=Animated.set,sub=Animated.sub;var TRUE=1;var FALSE=0;var NOOP=0;var UNSET=-1;var DIRECTION_LEFT=1;var DIRECTION_RIGHT=-1;var SPRING_CONFIG={stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01};var ANIMATED_ZERO=new Animated.Value(0);var ANIMATED_ONE=new Animated.Value(1);export var Drawer=function(_React$Component){_inherits(Drawer,_React$Component);var _super=_createSuper(Drawer);function Drawer(){var _this$props$swipeMinD,_this$props$swipeMinV;var _this;_classCallCheck(this,Drawer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleEndInteraction=function(){if(_this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=undefined;}};_this.handleStartInteraction=function(){if(_this.interactionHandle===undefined){_this.interactionHandle=InteractionManager.createInteractionHandle();}};_this.getDrawerWidth=function(){var _this$props6=_this.props,drawerStyle=_this$props6.drawerStyle,layout=_this$props6.layout;var _ref4=StyleSheet.flatten(drawerStyle)||{},_ref4$width=_ref4.width,width=_ref4$width===void 0?DEFAULT_DRAWER_WIDTH:_ref4$width;if(typeof width==='string'&&width.endsWith('%')){var percentage=Number(width.replace(/%$/,''));if(Number.isFinite(percentage)){return layout.width*(percentage/100);}}return typeof width==='number'?width:0;};_this.clock=new Clock();_this.isDrawerTypeFront=new Value(_this.props.drawerType==='front'?TRUE:FALSE);_this.isOpen=new Value(_this.props.open?TRUE:FALSE);_this.nextIsOpen=new Value(UNSET);_this.isSwiping=new Value(FALSE);_this.initialDrawerWidth=_this.getDrawerWidth();_this.gestureState=new Value(GestureState.UNDETERMINED);_this.touchX=new Value(0);_this.velocityX=new Value(0);_this.gestureX=new Value(0);_this.offsetX=new Value(0);_this.position=new Value(_this.props.open?_this.initialDrawerWidth*(_this.props.drawerPosition==='right'?DIRECTION_RIGHT:DIRECTION_LEFT):0);_this.containerWidth=new Value(_this.props.layout.width);_this.drawerWidth=new Value(_this.initialDrawerWidth);_this.drawerOpacity=new Value(_this.props.drawerType==='permanent'?1:0);_this.drawerPosition=new Value(_this.props.drawerPosition==='right'?DIRECTION_RIGHT:DIRECTION_LEFT);_this.touchDistanceFromDrawer=cond(_this.isDrawerTypeFront,cond(eq(_this.drawerPosition,DIRECTION_LEFT),max(sub(sub(_this.touchX,_this.gestureX),_this.drawerWidth),0),min(multiply(sub(sub(_this.containerWidth,_this.drawerWidth),sub(_this.touchX,_this.gestureX)),DIRECTION_RIGHT),0)),0);_this.swipeDistanceThreshold=new Value((_this$props$swipeMinD=_this.props.swipeMinDistance)!=null?_this$props$swipeMinD:SWIPE_MIN_DISTANCE);_this.swipeVelocityThreshold=new Value((_this$props$swipeMinV=_this.props.swipeMinVelocity)!=null?_this$props$swipeMinV:SWIPE_MIN_VELOCITY);_this.currentOpenValue=_this.props.open;_this.isStatusBarHidden=false;_this.manuallyTriggerSpring=new Value(FALSE);_this.transitionTo=function(isOpen){var toValue=new Value(0);var frameTime=new Value(0);var state={position:_this.position,time:new Value(0),finished:new Value(FALSE),velocity:new Value(0)};return block([cond(clockRunning(_this.clock),NOOP,[set(toValue,multiply(isOpen,_this.drawerWidth,_this.drawerPosition)),set(frameTime,0),set(state.time,0),set(state.finished,FALSE),set(state.velocity,_this.velocityX),set(_this.isOpen,isOpen),startClock(_this.clock),call([],_this.handleStartInteraction),set(_this.manuallyTriggerSpring,FALSE)]),spring(_this.clock,state,_objectSpread(_objectSpread({},SPRING_CONFIG),{},{toValue:toValue})),onChange(state.finished,cond(state.finished,call([_this.isOpen],function(open){var _this$props$onTransit,_this$props;return(_this$props$onTransit=(_this$props=_this.props).onTransitionEnd)===null||_this$props$onTransit===void 0?void 0:_this$props$onTransit.call(_this$props,!open);}),call([_this.isOpen],function(open){var _this$props$onTransit2,_this$props2;return(_this$props$onTransit2=(_this$props2=_this.props).onTransitionStart)===null||_this$props$onTransit2===void 0?void 0:_this$props$onTransit2.call(_this$props2,!open);}))),cond(state.finished,[set(_this.touchX,0),set(_this.gestureX,0),set(_this.velocityX,0),set(_this.offsetX,0),stopClock(_this.clock),call([_this.isOpen],function(_ref){var _ref5=_slicedToArray(_ref,1),value=_ref5[0];var open=Boolean(value);_this.handleEndInteraction();if(open!==_this.props.open){_this.toggleDrawer(_this.props.open);}})])]);};_this.dragX=block([onChange(_this.isOpen,call([_this.isOpen],function(_ref2){var _ref6=_slicedToArray(_ref2,1),value=_ref6[0];var open=Boolean(value);_this.currentOpenValue=open;if(open!==_this.props.open){if(open){_this.props.onOpen();}else{_this.props.onClose();}_this.pendingOpenValue=open;_this.forceUpdate();}})),onChange(_this.nextIsOpen,cond(neq(_this.nextIsOpen,UNSET),[cond(clockRunning(_this.clock),stopClock(_this.clock)),set(_this.isOpen,_this.nextIsOpen),set(_this.gestureX,0),set(_this.nextIsOpen,UNSET)])),onChange(_this.isSwiping,call([_this.isSwiping],function(_ref3){var _ref7=_slicedToArray(_ref3,1),value=_ref7[0];var keyboardDismissMode=_this.props.keyboardDismissMode;if(value===TRUE){if(keyboardDismissMode==='on-drag'){Keyboard.dismiss();}_this.toggleStatusBar(true);}else{_this.toggleStatusBar(_this.currentOpenValue);}})),onChange(_this.gestureState,cond(eq(_this.gestureState,GestureState.ACTIVE),call([],_this.handleStartInteraction))),onChange(_this.gestureState,cond(eq(_this.gestureState,GestureState.END),[call([],function(){var _this$props$onGesture,_this$props3;return(_this$props$onGesture=(_this$props3=_this.props).onGestureEnd)===null||_this$props$onGesture===void 0?void 0:_this$props$onGesture.call(_this$props3);})])),onChange(_this.gestureState,cond(eq(_this.gestureState,GestureState.CANCELLED),[call([],function(){var _this$props$onGesture2,_this$props4;return(_this$props$onGesture2=(_this$props4=_this.props).onGestureCancel)===null||_this$props$onGesture2===void 0?void 0:_this$props$onGesture2.call(_this$props4);})])),cond(eq(_this.gestureState,GestureState.ACTIVE),[cond(_this.isSwiping,NOOP,[set(_this.isSwiping,TRUE),set(_this.offsetX,_this.position),call([],function(){var _this$props$onGesture3,_this$props5;return(_this$props$onGesture3=(_this$props5=_this.props).onGestureStart)===null||_this$props$onGesture3===void 0?void 0:_this$props$onGesture3.call(_this$props5);})]),set(_this.position,add(_this.offsetX,_this.gestureX,_this.touchDistanceFromDrawer)),stopClock(_this.clock)],[set(_this.isSwiping,FALSE),set(_this.touchX,0),_this.transitionTo(cond(_this.manuallyTriggerSpring,_this.isOpen,cond(or(and(greaterThan(abs(_this.gestureX),SWIPE_MIN_OFFSET),greaterThan(abs(_this.velocityX),_this.swipeVelocityThreshold)),greaterThan(abs(_this.gestureX),_this.swipeDistanceThreshold)),cond(eq(_this.drawerPosition,DIRECTION_LEFT),greaterThan(cond(eq(_this.velocityX,0),_this.gestureX,_this.velocityX),0),lessThan(cond(eq(_this.velocityX,0),_this.gestureX,_this.velocityX),0)),_this.isOpen)))]),_this.position]);_this.translateX=cond(eq(_this.drawerPosition,DIRECTION_RIGHT),min(max(multiply(_this.drawerWidth,-1),_this.dragX),0),max(min(_this.drawerWidth,_this.dragX),0));_this.progress=cond(eq(_this.drawerWidth,0),0,abs(divide(_this.translateX,_this.drawerWidth)));_this.handleGestureEvent=event([{nativeEvent:{x:_this.touchX,translationX:_this.gestureX,velocityX:_this.velocityX}}]);_this.handleGestureStateChange=event([{nativeEvent:{state:function state(s){return set(_this.gestureState,s);}}}]);_this.handleContainerLayout=function(e){return _this.containerWidth.setValue(e.nativeEvent.layout.width);};_this.handleDrawerLayout=function(e){_this.drawerWidth.setValue(e.nativeEvent.layout.width);_this.toggleDrawer(_this.props.open);requestAnimationFrame(function(){return requestAnimationFrame(function(){return _this.drawerOpacity.setValue(1);});});};_this.toggleDrawer=function(open){if(_this.currentOpenValue!==open){_this.nextIsOpen.setValue(open?TRUE:FALSE);_this.currentOpenValue=open;}};_this.toggleStatusBar=function(hidden){var _this$props7=_this.props,hideStatusBar=_this$props7.hideStatusBarOnOpen,statusBarAnimation=_this$props7.statusBarAnimation;if(hideStatusBar&&_this.isStatusBarHidden!==hidden){_this.isStatusBarHidden=hidden;StatusBar.setHidden(hidden,statusBarAnimation);}};return _this;}_createClass(Drawer,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props8=this.props,open=_this$props8.open,drawerPosition=_this$props8.drawerPosition,drawerType=_this$props8.drawerType,swipeMinDistance=_this$props8.swipeMinDistance,swipeMinVelocity=_this$props8.swipeMinVelocity,hideStatusBarOnOpen=_this$props8.hideStatusBarOnOpen;if(typeof this.pendingOpenValue!=='boolean'||open!==this.pendingOpenValue){this.toggleDrawer(open);}this.pendingOpenValue=undefined;if(open!==prevProps.open&&hideStatusBarOnOpen){this.toggleStatusBar(open);}if(prevProps.drawerPosition!==drawerPosition){this.drawerPosition.setValue(drawerPosition==='right'?DIRECTION_RIGHT:DIRECTION_LEFT);}if(prevProps.drawerType!==drawerType){this.isDrawerTypeFront.setValue(drawerType==='front'?TRUE:FALSE);}if(prevProps.swipeMinDistance!==swipeMinDistance){this.swipeDistanceThreshold.setValue(swipeMinDistance!=null?swipeMinDistance:SWIPE_MIN_DISTANCE);}if(prevProps.swipeMinVelocity!==swipeMinVelocity){this.swipeVelocityThreshold.setValue(swipeMinVelocity!=null?swipeMinVelocity:SWIPE_MIN_VELOCITY);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.toggleStatusBar(false);this.handleEndInteraction();}},{key:\"render\",value:function render(){var _this2=this;var _this$props9=this.props,open=_this$props9.open,swipeEnabled=_this$props9.swipeEnabled,drawerPosition=_this$props9.drawerPosition,drawerType=_this$props9.drawerType,swipeEdgeWidth=_this$props9.swipeEdgeWidth,drawerStyle=_this$props9.drawerStyle,overlayStyle=_this$props9.overlayStyle,renderDrawerContent=_this$props9.renderDrawerContent,children=_this$props9.children,gestureHandlerProps=_this$props9.gestureHandlerProps,overlayAccessibilityLabel=_this$props9.overlayAccessibilityLabel;var isOpen=drawerType==='permanent'?true:open;var isRight=drawerPosition==='right';var contentTranslateX=drawerType==='front'?ANIMATED_ZERO:this.translateX;var drawerTranslateX=drawerType==='back'?ANIMATED_ZERO:this.translateX;var offset=drawerType==='back'?0:'100%';var hitSlop=isRight?{right:0,width:isOpen?undefined:swipeEdgeWidth}:{left:0,width:isOpen?undefined:swipeEdgeWidth};var progress=drawerType==='permanent'?ANIMATED_ONE:this.progress;return React.createElement(DrawerProgressContext.Provider,{value:progress},React.createElement(PanGestureHandler,_extends({activeOffsetX:[-SWIPE_MIN_OFFSET,SWIPE_MIN_OFFSET],failOffsetY:[-SWIPE_MIN_OFFSET,SWIPE_MIN_OFFSET],onGestureEvent:this.handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange,hitSlop:hitSlop,enabled:drawerType!=='permanent'&&swipeEnabled},gestureHandlerProps),React.createElement(Animated.View,{onLayout:this.handleContainerLayout,style:[styles.main,{flexDirection:drawerType==='permanent'&&!isRight?'row-reverse':'row'}]},React.createElement(Animated.View,{style:[styles.content,{transform:drawerType==='permanent'?[]:[{translateX:contentTranslateX}]}]},React.createElement(View,{accessibilityElementsHidden:isOpen&&drawerType!=='permanent',importantForAccessibility:isOpen&&drawerType!=='permanent'?'no-hide-descendants':'auto',style:styles.content},children),drawerType==='permanent'?null:React.createElement(Overlay,{progress:progress,onPress:function onPress(){return _this2.toggleDrawer(false);},accessibilityLabel:overlayAccessibilityLabel,style:overlayStyle,accessibilityElementsHidden:!isOpen,importantForAccessibility:isOpen?'auto':'no-hide-descendants'})),React.createElement(Animated.Code,{exec:this.containerWidth}),drawerType==='permanent'?null:React.createElement(Animated.Code,{exec:block([onChange(this.manuallyTriggerSpring,[cond(eq(this.manuallyTriggerSpring,TRUE),[set(this.nextIsOpen,FALSE),call([],function(){return _this2.currentOpenValue=false;})])])])}),React.createElement(Animated.View,{removeClippedSubviews:\"web\"!=='ios',onLayout:this.handleDrawerLayout,style:[styles.container,{transform:drawerType==='permanent'?[]:[{translateX:drawerTranslateX}],opacity:this.drawerOpacity},drawerType==='permanent'?isRight?{right:0}:{left:0}:[styles.nonPermanent,isRight?{right:offset}:{left:offset},{zIndex:drawerType==='back'?-1:0}],drawerStyle]},renderDrawerContent()))));}}]);return Drawer;}(React.Component);var styles=StyleSheet.create({container:{backgroundColor:'white',maxWidth:'100%'},nonPermanent:{position:'absolute',top:0,bottom:0,width:DEFAULT_DRAWER_WIDTH},content:{flex:1},main:_objectSpread({flex:1},null)});","map":{"version":3,"sources":["views/legacy/Drawer.tsx"],"names":["React","Animated","DEFAULT_DRAWER_WIDTH","SWIPE_MIN_DISTANCE","SWIPE_MIN_OFFSET","SWIPE_MIN_VELOCITY","DrawerProgressContext","GestureState","PanGestureHandler","Overlay","Clock","Value","onChange","clockRunning","startClock","stopClock","spring","abs","add","and","block","call","cond","divide","eq","event","greaterThan","lessThan","max","min","multiply","neq","or","set","sub","TRUE","FALSE","NOOP","UNSET","DIRECTION_LEFT","DIRECTION_RIGHT","SPRING_CONFIG","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","ANIMATED_ZERO","ANIMATED_ONE","Drawer","Component","componentDidUpdate","prevProps","open","drawerPosition","drawerType","swipeMinDistance","swipeMinVelocity","hideStatusBarOnOpen","props","pendingOpenValue","toggleDrawer","undefined","toggleStatusBar","setValue","isDrawerTypeFront","swipeDistanceThreshold","swipeVelocityThreshold","componentWillUnmount","handleEndInteraction","interactionHandle","InteractionManager","clearInteractionHandle","handleStartInteraction","createInteractionHandle","getDrawerWidth","drawerStyle","layout","width","StyleSheet","flatten","endsWith","percentage","Number","replace","isFinite","clock","isOpen","nextIsOpen","isSwiping","initialDrawerWidth","gestureState","UNDETERMINED","touchX","velocityX","gestureX","offsetX","position","containerWidth","drawerWidth","drawerOpacity","touchDistanceFromDrawer","currentOpenValue","isStatusBarHidden","manuallyTriggerSpring","transitionTo","toValue","frameTime","state","time","finished","velocity","onTransitionEnd","onTransitionStart","value","Boolean","dragX","onOpen","onClose","forceUpdate","keyboardDismissMode","Keyboard","dismiss","ACTIVE","END","onGestureEnd","CANCELLED","onGestureCancel","onGestureStart","translateX","progress","handleGestureEvent","nativeEvent","x","translationX","handleGestureStateChange","s","handleContainerLayout","e","handleDrawerLayout","requestAnimationFrame","hidden","hideStatusBar","statusBarAnimation","StatusBar","setHidden","render","swipeEnabled","swipeEdgeWidth","overlayStyle","renderDrawerContent","children","gestureHandlerProps","overlayAccessibilityLabel","isRight","contentTranslateX","drawerTranslateX","offset","hitSlop","right","left","styles","main","flexDirection","content","transform","Platform","container","opacity","nonPermanent","zIndex","create","backgroundColor","maxWidth","top","bottom","flex"],"mappings":"giEAAA,MAAO,GAAKA,CAAAA,KAAK,KAAM,OAAO,CAAA,OAAA,kBAAA,+DAAA,QAAA,qDAAA,QAAA,qDAAA,SAAA,sDAAA,UAAA,uDAAA,IAAA,0CAU9B,MAAOC,CAAAA,QAAQ,KAAM,yBAAyB,CAE9C,OACEC,oBAAoB,CACpBC,kBAAkB,CAClBC,gBAAgB,CAChBC,kBAAkB,KACb,iBAAiB,CAExB,OAASC,qBAAqB,KAAQ,mCAAmC,CACzE,OAASC,YAAY,CAAEC,iBAAiB,KAAQ,mBAAmB,CACnE,OAASC,OAAO,KAAQ,WAAW,CAEnC,GACEC,CAAAA,KAAK,CAyBHT,QAAQ,CAzBVS,KAAK,CACLC,KAAK,CAwBHV,QAAQ,CAxBVU,KAAK,CACLC,QAAQ,CAuBNX,QAAQ,CAvBVW,QAAQ,CACRC,YAAY,CAsBVZ,QAAQ,CAtBVY,YAAY,CACZC,UAAU,CAqBRb,QAAQ,CArBVa,UAAU,CACVC,SAAS,CAoBPd,QAAQ,CApBVc,SAAS,CACTC,MAAM,CAmBJf,QAAQ,CAnBVe,MAAM,CACNC,GAAG,CAkBDhB,QAAQ,CAlBVgB,GAAG,CACHC,GAAG,CAiBDjB,QAAQ,CAjBViB,GAAG,CACHC,GAAG,CAgBDlB,QAAQ,CAhBVkB,GAAG,CACHC,KAAK,CAeHnB,QAAQ,CAfVmB,KAAK,CACLC,IAAI,CAcFpB,QAAQ,CAdVoB,IAAI,CACJC,IAAI,CAaFrB,QAAQ,CAbVqB,IAAI,CACJC,MAAM,CAYJtB,QAAQ,CAZVsB,MAAM,CACNC,EAAE,CAWAvB,QAAQ,CAXVuB,EAAE,CACFC,KAAK,CAUHxB,QAAQ,CAVVwB,KAAK,CACLC,WAAW,CASTzB,QAAQ,CATVyB,WAAW,CACXC,QAAQ,CAQN1B,QAAQ,CARV0B,QAAQ,CACRC,GAAG,CAOD3B,QAAQ,CAPV2B,GAAG,CACHC,GAAG,CAMD5B,QAAQ,CANV4B,GAAG,CACHC,QAAQ,CAKN7B,QAAQ,CALV6B,QAAQ,CACRC,GAAG,CAID9B,QAAQ,CAJV8B,GAAG,CACHC,EAAE,CAGA/B,QAAQ,CAHV+B,EAAE,CACFC,GAAG,CAEDhC,QAAQ,CAFVgC,GAAG,CACHC,GAAAA,CACEjC,QAAQ,CADViC,GAAAA,CAGF,GAAMC,CAAAA,IAAI,CAAG,CAAC,CACd,GAAMC,CAAAA,KAAK,CAAG,CAAC,CACf,GAAMC,CAAAA,IAAI,CAAG,CAAC,CACd,GAAMC,CAAAA,KAAK,CAAG,CAAC,CAAC,CAEhB,GAAMC,CAAAA,cAAc,CAAG,CAAC,CACxB,GAAMC,CAAAA,eAAe,CAAG,CAAC,CAAC,CAE1B,GAAMC,CAAAA,aAAa,CAAG,CACpBC,SAAS,CAAE,IAAI,CACfC,OAAO,CAAE,GAAG,CACZC,IAAI,CAAE,CAAC,CACPC,iBAAiB,CAAE,IAAI,CACvBC,yBAAyB,CAAE,IAAI,CAC/BC,kBAAkB,CAAE,IACtB,CAAC,CAED,GAAMC,CAAAA,aAAa,CAAG,GAAI/C,CAAAA,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAC3C,GAAMsC,CAAAA,YAAY,CAAG,GAAIhD,CAAAA,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAQ1C,UAAauC,CAAAA,MAAM,UAAA,gBAAA,EAAA,SAAA,CAAA,MAAA,CAAA,gBAAA,MAAA,MAAA,CAAA,YAAA,CAAA,MAAA,WAAA,OAAA,MAAA,qBAAA,CAAA,qBAAA,KAAA,KAAA,CAAA,eAAA,MAAA,MAAA,UAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,KAAA,KAAA,CAAA,IAAA,EAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,QAAA,MAAA,CAAA,IAAA,GAAA,KAAA,CAqDToB,oBAAoB,CAAG,UAAM,CACnC,GAAI,KAAA,CAAKC,iBAAiB,GAAKR,SAAS,CAAE,CACxCS,kBAAkB,CAACC,sBAAsB,CAAC,KAAA,CAAKF,iBAAiB,CAAC,CACjE,KAAA,CAAKA,iBAAiB,CAAGR,SAAS,CACpC,CACF,CAAC,CAAA,KAAA,CAEOW,sBAAsB,CAAG,UAAM,CACrC,GAAI,KAAA,CAAKH,iBAAiB,GAAKR,SAAS,CAAE,CACxC,KAAA,CAAKQ,iBAAiB,CAAGC,kBAAkB,CAACG,uBAAuB,CAAA,CAAE,CACvE,CACF,CAAC,CAAA,KAAA,CAEOC,cAAc,CAAG,UAAc,CACrC,IAAA,YAAA,CAAgC,KAAA,CAAKhB,KAAK,CAAlCiB,WAAW,CAAA,YAAA,CAAXA,WAAW,CAAEC,MAAAA,CAAAA,YAAAA,CAAAA,MAAAA,CACrB,IAAA,KAAA,CACEE,UAAU,CAACC,OAAO,CAACJ,WAAW,CAAC,EAAI,CAAC,CAAC,CAAA,WAAA,CAAA,KAAA,CAD/BE,KAAK,CAALA,KAAK,CAAA,WAAA,UAAG7E,oBAAAA,CAAAA,WAAAA,CAGhB,GAAI,MAAO6E,CAAAA,KAAK,GAAK,QAAQ,EAAIA,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,CAAE,CAEpD,GAAMC,CAAAA,UAAU,CAAGC,MAAM,CAACL,KAAK,CAACM,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,CAElD,GAAID,MAAM,CAACE,QAAQ,CAACH,UAAU,CAAC,CAAE,CAC/B,MAAOL,CAAAA,MAAM,CAACC,KAAK,EAAII,UAAU,CAAG,GAAG,CAAC,CAC1C,CACF,CAEA,MAAO,OAAOJ,CAAAA,KAAK,GAAK,QAAQ,CAAGA,KAAK,CAAG,CAAC,CAC9C,CAAC,CAAA,KAAA,CAEOQ,KAAK,CAAG,GAAI7E,CAAAA,KAAK,CAAA,CAAE,CAAA,KAAA,CAGnBwD,iBAAiB,CAAG,GAAIvD,CAAAA,KAAK,CACnC,KAAA,CAAKiD,KAAK,CAACJ,UAAU,GAAK,OAAO,CAAGrB,IAAI,CAAGC,KAAK,CACjD,CAAA,KAAA,CAEOoD,MAAM,CAAG,GAAI7E,CAAAA,KAAK,CAAS,KAAA,CAAKiD,KAAK,CAACN,IAAI,CAAGnB,IAAI,CAAGC,KAAK,CAAC,CAAA,KAAA,CAC1DqD,UAAU,CAAG,GAAI9E,CAAAA,KAAK,CAAc2B,KAAK,CAAC,CAAA,KAAA,CAC1CoD,SAAS,CAAG,GAAI/E,CAAAA,KAAK,CAASyB,KAAK,CAAC,CAAA,KAAA,CAEpCuD,kBAAkB,CAAG,KAAA,CAAKf,cAAc,CAAA,CAAE,CAAA,KAAA,CAE1CgB,YAAY,CAAG,GAAIjF,CAAAA,KAAK,CAASJ,YAAY,CAACsF,YAAY,CAAC,CAAA,KAAA,CAC3DC,MAAM,CAAG,GAAInF,CAAAA,KAAK,CAAS,CAAC,CAAC,CAAA,KAAA,CAC7BoF,SAAS,CAAG,GAAIpF,CAAAA,KAAK,CAAS,CAAC,CAAC,CAAA,KAAA,CAChCqF,QAAQ,CAAG,GAAIrF,CAAAA,KAAK,CAAS,CAAC,CAAC,CAAA,KAAA,CAC/BsF,OAAO,CAAG,GAAItF,CAAAA,KAAK,CAAS,CAAC,CAAC,CAAA,KAAA,CAC9BuF,QAAQ,CAAG,GAAIvF,CAAAA,KAAK,CAC1B,KAAA,CAAKiD,KAAK,CAACN,IAAI,CACX,KAAA,CAAKqC,kBAAkB,EACtB,KAAA,CAAK/B,KAAK,CAACL,cAAc,GAAK,OAAO,CAClCf,eAAe,CACfD,cAAc,CAAC,CACnB,CAAC,CACN,CAAA,KAAA,CAEO4D,cAAc,CAAG,GAAIxF,CAAAA,KAAK,CAAS,KAAA,CAAKiD,KAAK,CAACkB,MAAM,CAACC,KAAK,CAAC,CAAA,KAAA,CAC3DqB,WAAW,CAAG,GAAIzF,CAAAA,KAAK,CAAS,KAAA,CAAKgF,kBAAkB,CAAC,CAAA,KAAA,CACxDU,aAAa,CAAG,GAAI1F,CAAAA,KAAK,CAC/B,KAAA,CAAKiD,KAAK,CAACJ,UAAU,GAAK,WAAW,CAAG,CAAC,CAAG,CAAC,CAC9C,CAAA,KAAA,CACOD,cAAc,CAAG,GAAI5C,CAAAA,KAAK,CAChC,KAAA,CAAKiD,KAAK,CAACL,cAAc,GAAK,OAAO,CAAGf,eAAe,CAAGD,cAAc,CACzE,CAAA,KAAA,CA2BO+D,uBAAuB,CAAGhF,IAAI,CACpC,KAAA,CAAK4C,iBAAiB,CACtB5C,IAAI,CACFE,EAAE,CAAC,KAAA,CAAK+B,cAAc,CAAEhB,cAAc,CAAC,CACvCX,GAAG,CAEDM,GAAG,CAACA,GAAG,CAAC,KAAA,CAAK4D,MAAM,CAAE,KAAA,CAAKE,QAAQ,CAAC,CAAE,KAAA,CAAKI,WAAW,CAAC,CACtD,CAAC,CACF,CACDvE,GAAG,CACDC,QAAQ,CAENI,GAAG,CACDA,GAAG,CAAC,KAAA,CAAKiE,cAAc,CAAE,KAAA,CAAKC,WAAW,CAAC,CAC1ClE,GAAG,CAAC,KAAA,CAAK4D,MAAM,CAAE,KAAA,CAAKE,QAAQ,CAAC,CAChC,CACDxD,eAAe,CAChB,CACD,CAAC,CACF,CACF,CACD,CAAC,CACF,CAAA,KAAA,CAEO2B,sBAAsB,CAAG,GAAIxD,CAAAA,KAAK,EAAA,qBAAA,CACxC,KAAA,CAAKiD,KAAK,CAACH,gBAAgB,QAAA,qBAAA,CAAItD,kBAAkB,CAClD,CAAA,KAAA,CACOiE,sBAAsB,CAAG,GAAIzD,CAAAA,KAAK,EAAA,qBAAA,CACxC,KAAA,CAAKiD,KAAK,CAACF,gBAAgB,QAAA,qBAAA,CAAIrD,kBAAkB,CAClD,CAAA,KAAA,CAEOkG,gBAAgB,CAAY,KAAA,CAAK3C,KAAK,CAACN,IAAI,CAAA,KAAA,CAG3CkD,iBAAiB,CAAY,KAAK,CAAA,KAAA,CAElCC,qBAAqB,CAAG,GAAI9F,CAAAA,KAAK,CAASyB,KAAK,CAAC,CAAA,KAAA,CAEhDsE,YAAY,CAAIlB,SAAAA,MAAsC,CAAK,CACjE,GAAMmB,CAAAA,OAAO,CAAG,GAAIhG,CAAAA,KAAK,CAAC,CAAC,CAAC,CAC5B,GAAMiG,CAAAA,SAAS,CAAG,GAAIjG,CAAAA,KAAK,CAAC,CAAC,CAAC,CAE9B,GAAMkG,CAAAA,KAAK,CAAG,CACZX,QAAQ,CAAE,KAAA,CAAKA,QAAQ,CACvBY,IAAI,CAAE,GAAInG,CAAAA,KAAK,CAAC,CAAC,CAAC,CAClBoG,QAAQ,CAAE,GAAIpG,CAAAA,KAAK,CAACyB,KAAK,CAAC,CAC1B4E,QAAQ,CAAE,GAAIrG,CAAAA,KAAK,CAAC,CAAC,CACvB,CAAC,CAED,MAAOS,CAAAA,KAAK,CAAC,CACXE,IAAI,CAACT,YAAY,CAAC,KAAA,CAAK0E,KAAK,CAAC,CAAElD,IAAI,CAAE,CAGnCJ,GAAG,CAAC0E,OAAO,CAAE7E,QAAQ,CAAC0D,MAAM,CAAE,KAAA,CAAKY,WAAW,CAAE,KAAA,CAAK7C,cAAc,CAAC,CAAC,CACrEtB,GAAG,CAAC2E,SAAS,CAAE,CAAC,CAAC,CACjB3E,GAAG,CAAC4E,KAAK,CAACC,IAAI,CAAE,CAAC,CAAC,CAClB7E,GAAG,CAAC4E,KAAK,CAACE,QAAQ,CAAE3E,KAAK,CAAC,CAC1BH,GAAG,CAAC4E,KAAK,CAACG,QAAQ,CAAE,KAAA,CAAKjB,SAAS,CAAC,CACnC9D,GAAG,CAAC,KAAA,CAAKuD,MAAM,CAAEA,MAAM,CAAC,CACxB1E,UAAU,CAAC,KAAA,CAAKyE,KAAK,CAAC,CACtBlE,IAAI,CAAC,EAAE,CAAE,KAAA,CAAKqD,sBAAsB,CAAC,CACrCzC,GAAG,CAAC,KAAA,CAAKwE,qBAAqB,CAAErE,KAAK,CAAC,CACvC,CAAC,CACFpB,MAAM,CAAC,KAAA,CAAKuE,KAAK,CAAEsB,KAAK,CAAA,aAAA,CAAA,aAAA,IAAOpE,aAAa,MAAEkE,OAAAA,CAAAA,OAAAA,EAAS,CAAC,CACxD/F,QAAQ,CACNiG,KAAK,CAACE,QAAQ,CACdzF,IAAI,CACFuF,KAAK,CAACE,QAAQ,CACd1F,IAAI,CAAC,CAAC,KAAA,CAAKmE,MAAM,CAAC,CAAGlC,SAAAA,IAAI,CAAA,CAAA,GAAA,CAAA,qBAAA,CAAA,WAAA,CAAA,MAAA,CAAA,qBAAA,CAAK,CAAA,WAAA,CAAA,KAAA,CAAKM,KAAK,EAACqD,eAAe,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAA1B,qBAAA,CAAA,IAAA,CAAA,WAAA,CAA6B,CAAC3D,IAAI,CAAC,CAAA,CAAA,CAAC,CAClEjC,IAAI,CAAC,CAAC,KAAA,CAAKmE,MAAM,CAAC,CAAGlC,SAAAA,IAAI,CAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,MAAA,CAAA,sBAAA,CAAK,CAAA,YAAA,CAAA,KAAA,CAAKM,KAAK,EAACsD,iBAAiB,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAA5B,sBAAA,CAAA,IAAA,CAAA,YAAA,CAA+B,CAAC5D,IAAI,CAAC,CAAA,CAAA,CAAC,CACrE,CACF,CACDhC,IAAI,CAACuF,KAAK,CAACE,QAAQ,CAAE,CAEnB9E,GAAG,CAAC,KAAA,CAAK6D,MAAM,CAAE,CAAC,CAAC,CACnB7D,GAAG,CAAC,KAAA,CAAK+D,QAAQ,CAAE,CAAC,CAAC,CACrB/D,GAAG,CAAC,KAAA,CAAK8D,SAAS,CAAE,CAAC,CAAC,CACtB9D,GAAG,CAAC,KAAA,CAAKgE,OAAO,CAAE,CAAC,CAAC,CAEpBlF,SAAS,CAAC,KAAA,CAAKwE,KAAK,CAAC,CACrBlE,IAAI,CAAC,CAAC,KAAA,CAAKmE,MAAM,CAAC,CAAE,SAAA,IAAA,CAAgC,CAA/B,IAAA,KAAA,CAAA,cAAA,CAA0B,IAAA,IAAzB2B,KAAK,CAAA,KAAA,IACzB,GAAM7D,CAAAA,IAAI,CAAG8D,OAAO,CAACD,KAAK,CAAC,CAC3B,KAAA,CAAK7C,oBAAoB,CAAA,CAAE,CAE3B,GAAIhB,IAAI,GAAK,KAAA,CAAKM,KAAK,CAACN,IAAI,CAAE,CAG5B,KAAA,CAAKQ,YAAY,CAAC,KAAA,CAAKF,KAAK,CAACN,IAAI,CAAC,CACpC,CACF,CAAC,CAAC,CACH,CAAC,CACH,CAAC,CACJ,CAAC,CAAA,KAAA,CAEO+D,KAAK,CAAGjG,KAAK,CAAC,CACpBR,QAAQ,CACN,KAAA,CAAK4E,MAAM,CACXnE,IAAI,CAAC,CAAC,KAAA,CAAKmE,MAAM,CAAC,CAAE,SAAA,KAAA,CAAgC,CAA/B,IAAA,KAAA,CAAA,cAAA,CAA0B,KAAA,IAAzB2B,KAAK,CAAA,KAAA,IACzB,GAAM7D,CAAAA,IAAI,CAAG8D,OAAO,CAACD,KAAK,CAAC,CAE3B,KAAA,CAAKZ,gBAAgB,CAAGjD,IAAI,CAG5B,GAAIA,IAAI,GAAK,KAAA,CAAKM,KAAK,CAACN,IAAI,CAAE,CAE5B,GAAIA,IAAI,CAAE,CACR,KAAA,CAAKM,KAAK,CAAC0D,MAAM,CAAA,CAAE,CACrB,CAAC,IAAM,CACL,KAAA,CAAK1D,KAAK,CAAC2D,OAAO,CAAA,CAAE,CACtB,CAEA,KAAA,CAAK1D,gBAAgB,CAAGP,IAAI,CAK5B,KAAA,CAAKkE,WAAW,CAAA,CAAE,CACpB,CACF,CAAC,CAAC,CACH,CACD5G,QAAQ,CACN,KAAA,CAAK6E,UAAU,CACfnE,IAAI,CAACS,GAAG,CAAC,KAAA,CAAK0D,UAAU,CAAEnD,KAAK,CAAC,CAAE,CAEhChB,IAAI,CAACT,YAAY,CAAC,KAAA,CAAK0E,KAAK,CAAC,CAAExE,SAAS,CAAC,KAAA,CAAKwE,KAAK,CAAC,CAAC,CAErDtD,GAAG,CAAC,KAAA,CAAKuD,MAAM,CAAE,KAAA,CAAKC,UAAU,CAAC,CACjCxD,GAAG,CAAC,KAAA,CAAK+D,QAAQ,CAAE,CAAC,CAAC,CACrB/D,GAAG,CAAC,KAAA,CAAKwD,UAAU,CAAEnD,KAAK,CAAC,CAC5B,CAAC,CACH,CAED1B,QAAQ,CACN,KAAA,CAAK8E,SAAS,CAIdrE,IAAI,CAAC,CAAC,KAAA,CAAKqE,SAAS,CAAC,CAAE,SAAA,KAAA,CAAgC,CAA/B,IAAA,KAAA,CAAA,cAAA,CAA0B,KAAA,IAAzByB,KAAK,CAAA,KAAA,IAC5B,GAAQM,CAAAA,mBAAAA,CAAwB,KAAA,CAAK7D,KAAK,CAAlC6D,mBAAAA,CAER,GAAIN,KAAK,GAAKhF,IAAI,CAAE,CAClB,GAAIsF,mBAAmB,GAAK,SAAS,CAAE,CACrCC,QAAQ,CAACC,OAAO,CAAA,CAAE,CACpB,CAEA,KAAA,CAAK3D,eAAe,CAAC,IAAI,CAAC,CAC5B,CAAC,IAAM,CACL,KAAA,CAAKA,eAAe,CAAC,KAAA,CAAKuC,gBAAgB,CAAC,CAC7C,CACF,CAAC,CAAC,CACH,CACD3F,QAAQ,CACN,KAAA,CAAKgF,YAAY,CACjBtE,IAAI,CACFE,EAAE,CAAC,KAAA,CAAKoE,YAAY,CAAErF,YAAY,CAACqH,MAAM,CAAC,CAC1CvG,IAAI,CAAC,EAAE,CAAE,KAAA,CAAKqD,sBAAsB,CAAC,CACtC,CACF,CACD9D,QAAQ,CACN,KAAA,CAAKgF,YAAY,CACjBtE,IAAI,CAACE,EAAE,CAAC,KAAA,CAAKoE,YAAY,CAAErF,YAAY,CAACsH,GAAG,CAAC,CAAE,CAC5CxG,IAAI,CAAC,EAAE,CAAE,UAAA,CAAA,GAAA,CAAA,qBAAA,CAAA,YAAA,CAAA,MAAA,CAAA,qBAAA,CAAM,CAAA,YAAA,CAAA,KAAA,CAAKuC,KAAK,EAACkE,YAAY,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAvB,qBAAA,CAAA,IAAA,CAAA,YAAA,CAA2B,CAAA,CAAA,CAAC,CAC5C,CAAC,CACH,CACDlH,QAAQ,CACN,KAAA,CAAKgF,YAAY,CACjBtE,IAAI,CAACE,EAAE,CAAC,KAAA,CAAKoE,YAAY,CAAErF,YAAY,CAACwH,SAAS,CAAC,CAAE,CAClD1G,IAAI,CAAC,EAAE,CAAE,UAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,MAAA,CAAA,sBAAA,CAAM,CAAA,YAAA,CAAA,KAAA,CAAKuC,KAAK,EAACoE,eAAe,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAA1B,sBAAA,CAAA,IAAA,CAAA,YAAA,CAA8B,CAAA,CAAA,CAAC,CAC/C,CAAC,CACH,CACD1G,IAAI,CACFE,EAAE,CAAC,KAAA,CAAKoE,YAAY,CAAErF,YAAY,CAACqH,MAAM,CAAC,CAC1C,CACEtG,IAAI,CAAC,KAAA,CAAKoE,SAAS,CAAErD,IAAI,CAAE,CAEzBJ,GAAG,CAAC,KAAA,CAAKyD,SAAS,CAAEvD,IAAI,CAAC,CAEzBF,GAAG,CAAC,KAAA,CAAKgE,OAAO,CAAE,KAAA,CAAKC,QAAQ,CAAC,CAChC7E,IAAI,CAAC,EAAE,CAAE,UAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,MAAA,CAAA,sBAAA,CAAM,CAAA,YAAA,CAAA,KAAA,CAAKuC,KAAK,EAACqE,cAAc,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAzB,sBAAA,CAAA,IAAA,CAAA,YAAA,CAA6B,CAAA,CAAA,CAAC,CAC9C,CAAC,CAEFhG,GAAG,CACD,KAAA,CAAKiE,QAAQ,CACbhF,GAAG,CAAC,KAAA,CAAK+E,OAAO,CAAE,KAAA,CAAKD,QAAQ,CAAE,KAAA,CAAKM,uBAAuB,CAAC,CAC/D,CAEDvF,SAAS,CAAC,KAAA,CAAKwE,KAAK,CAAC,CACtB,CACD,CACEtD,GAAG,CAAC,KAAA,CAAKyD,SAAS,CAAEtD,KAAK,CAAC,CAC1BH,GAAG,CAAC,KAAA,CAAK6D,MAAM,CAAE,CAAC,CAAC,CACnB,KAAA,CAAKY,YAAY,CACfpF,IAAI,CACF,KAAA,CAAKmF,qBAAqB,CAC1B,KAAA,CAAKjB,MAAM,CACXlE,IAAI,CACFU,EAAE,CACAb,GAAG,CACDO,WAAW,CAACT,GAAG,CAAC,KAAA,CAAK+E,QAAQ,CAAC,CAAE5F,gBAAgB,CAAC,CACjDsB,WAAW,CAACT,GAAG,CAAC,KAAA,CAAK8E,SAAS,CAAC,CAAE,KAAA,CAAK3B,sBAAsB,CAAC,CAC9D,CACD1C,WAAW,CAACT,GAAG,CAAC,KAAA,CAAK+E,QAAQ,CAAC,CAAE,KAAA,CAAK7B,sBAAsB,CAAC,CAC7D,CACD7C,IAAI,CACFE,EAAE,CAAC,KAAA,CAAK+B,cAAc,CAAEhB,cAAc,CAAC,CAEvCb,WAAW,CACTJ,IAAI,CAACE,EAAE,CAAC,KAAA,CAAKuE,SAAS,CAAE,CAAC,CAAC,CAAE,KAAA,CAAKC,QAAQ,CAAE,KAAA,CAAKD,SAAS,CAAC,CAC1D,CAAC,CACF,CAEDpE,QAAQ,CACNL,IAAI,CAACE,EAAE,CAAC,KAAA,CAAKuE,SAAS,CAAE,CAAC,CAAC,CAAE,KAAA,CAAKC,QAAQ,CAAE,KAAA,CAAKD,SAAS,CAAC,CAC1D,CAAC,CACF,CACF,CACD,KAAA,CAAKP,MAAM,CACZ,CACF,CACF,CACF,CACF,CACD,KAAA,CAAKU,QAAQ,CACd,CAAC,CAAA,KAAA,CAEMgC,UAAU,CAAG5G,IAAI,CACvBE,EAAE,CAAC,KAAA,CAAK+B,cAAc,CAAEf,eAAe,CAAC,CACxCX,GAAG,CAACD,GAAG,CAACE,QAAQ,CAAC,KAAA,CAAKsE,WAAW,CAAE,CAAC,CAAC,CAAC,CAAE,KAAA,CAAKiB,KAAK,CAAC,CAAE,CAAC,CAAC,CACvDzF,GAAG,CAACC,GAAG,CAAC,KAAA,CAAKuE,WAAW,CAAE,KAAA,CAAKiB,KAAK,CAAC,CAAE,CAAC,CAAC,CAC1C,CAAA,KAAA,CAEOc,QAAQ,CAAG7G,IAAI,CAErBE,EAAE,CAAC,KAAA,CAAK4E,WAAW,CAAE,CAAC,CAAC,CACvB,CAAC,CACDnF,GAAG,CAACM,MAAM,CAAC,KAAA,CAAK2G,UAAU,CAAE,KAAA,CAAK9B,WAAW,CAAC,CAAC,CAC/C,CAAA,KAAA,CAEOgC,kBAAkB,CAAG3G,KAAK,CAAC,CACjC,CACE4G,WAAW,CAAE,CACXC,CAAC,CAAE,KAAA,CAAKxC,MAAM,CACdyC,YAAY,CAAE,KAAA,CAAKvC,QAAQ,CAC3BD,SAAS,CAAE,KAAA,CAAKA,SAClB,CACF,CAAC,CACF,CAAC,CAAA,KAAA,CAEMyC,wBAAwB,CAAG/G,KAAK,CAAC,CACvC,CACE4G,WAAW,CAAE,CACXxB,KAAK,CAAG4B,SAAAA,MAAAA,CAAyB,QAAKxG,CAAAA,GAAG,CAAC,KAAA,CAAK2D,YAAY,CAAE6C,CAAC,CAAA,EAChE,CACF,CAAC,CACF,CAAC,CAAA,KAAA,CAEMC,qBAAqB,CAAIC,SAAAA,CAAoB,QACnD,CAAA,KAAA,CAAKxC,cAAc,CAAClC,QAAQ,CAAC0E,CAAC,CAACN,WAAW,CAACvD,MAAM,CAACC,KAAK,CAAC,GAAA,KAAA,CAElD6D,kBAAkB,CAAID,SAAAA,CAAoB,CAAK,CACrD,KAAA,CAAKvC,WAAW,CAACnC,QAAQ,CAAC0E,CAAC,CAACN,WAAW,CAACvD,MAAM,CAACC,KAAK,CAAC,CACrD,KAAA,CAAKjB,YAAY,CAAC,KAAA,CAAKF,KAAK,CAACN,IAAI,CAAC,CAKlCuF,qBAAqB,CAAC,iBACpBA,CAAAA,qBAAqB,CAAC,iBAAM,CAAA,KAAA,CAAKxC,aAAa,CAACpC,QAAQ,CAAC,CAAC,CAAC,GAAC,GAC5D,CACH,CAAC,CAAA,KAAA,CAEOH,YAAY,CAAIR,SAAAA,IAAa,CAAK,CACxC,GAAI,KAAA,CAAKiD,gBAAgB,GAAKjD,IAAI,CAAE,CAClC,KAAA,CAAKmC,UAAU,CAACxB,QAAQ,CAACX,IAAI,CAAGnB,IAAI,CAAGC,KAAK,CAAC,CAI7C,KAAA,CAAKmE,gBAAgB,CAAGjD,IAAI,CAC9B,CACF,CAAC,CAAA,KAAA,CAEOU,eAAe,CAAI8E,SAAAA,MAAe,CAAK,CAC7C,IAAA,YAAA,CACE,KAAA,CAAKlF,KAAK,CADiBmF,aAAa,CAAA,YAAA,CAAlCpF,mBAAmB,CAAiBqF,kBAAAA,CAAAA,YAAAA,CAAAA,kBAAAA,CAG5C,GAAID,aAAa,EAAI,KAAA,CAAKvC,iBAAiB,GAAKsC,MAAM,CAAE,CACtD,KAAA,CAAKtC,iBAAiB,CAAGsC,MAAM,CAC/BG,SAAS,CAACC,SAAS,CAACJ,MAAM,CAAEE,kBAAkB,CAAC,CACjD,CACF,CAAC,QAAA,KAAA,EAAA,YAAA,CAAA,MAAA,GAAA,GAAA,sBAAA,KAAA,CAhbD5F,SAAAA,mBAAmBC,SAAgB,CAAE,CACnC,IAAA,YAAA,CAOI,IAAI,CAACO,KAAK,CANZN,IAAI,CAAA,YAAA,CAAJA,IAAI,CACJC,cAAc,CAAA,YAAA,CAAdA,cAAc,CACdC,UAAU,CAAA,YAAA,CAAVA,UAAU,CACVC,gBAAgB,CAAA,YAAA,CAAhBA,gBAAgB,CAChBC,gBAAgB,CAAA,YAAA,CAAhBA,gBAAgB,CAChBC,mBAAAA,CAAAA,YAAAA,CAAAA,mBAAAA,CAGF,GAEE,MAAO,KAAI,CAACE,gBAAgB,GAAK,SAAS,EAC1CP,IAAI,GAAK,IAAI,CAACO,gBAAgB,CAC9B,CACA,IAAI,CAACC,YAAY,CAACR,IAAI,CAAC,CACzB,CAEA,IAAI,CAACO,gBAAgB,CAAGE,SAAS,CAEjC,GAAIT,IAAI,GAAKD,SAAS,CAACC,IAAI,EAAIK,mBAAmB,CAAE,CAClD,IAAI,CAACK,eAAe,CAACV,IAAI,CAAC,CAC5B,CAEA,GAAID,SAAS,CAACE,cAAc,GAAKA,cAAc,CAAE,CAC/C,IAAI,CAACA,cAAc,CAACU,QAAQ,CAC1BV,cAAc,GAAK,OAAO,CAAGf,eAAe,CAAGD,cAAc,CAC9D,CACH,CAEA,GAAIc,SAAS,CAACG,UAAU,GAAKA,UAAU,CAAE,CACvC,IAAI,CAACU,iBAAiB,CAACD,QAAQ,CAACT,UAAU,GAAK,OAAO,CAAGrB,IAAI,CAAGC,KAAK,CAAC,CACxE,CAEA,GAAIiB,SAAS,CAACI,gBAAgB,GAAKA,gBAAgB,CAAE,CACnD,IAAI,CAACU,sBAAsB,CAACF,QAAQ,CAClCR,gBAAgB,OAAhBA,gBAAgB,CAAItD,kBAAkB,CACvC,CACH,CAEA,GAAIkD,SAAS,CAACK,gBAAgB,GAAKA,gBAAgB,CAAE,CACnD,IAAI,CAACU,sBAAsB,CAACH,QAAQ,CAClCP,gBAAgB,OAAhBA,gBAAgB,CAAIrD,kBAAkB,CACvC,CACH,CACF,CAAA,GAAA,GAAA,wBAAA,KAAA,CAEAgE,SAAAA,qBAAAA,CAAuB,CACrB,IAAI,CAACL,eAAe,CAAC,KAAK,CAAC,CAC3B,IAAI,CAACM,oBAAoB,CAAA,CAAE,CAC7B,CAAA,GAAA,GAAA,UAAA,KAAA,CAgYA6E,SAAAA,OAAAA,CAAS,KAAA,MAAA,MACP,IAAA,YAAA,CAYI,IAAI,CAACvF,KAAK,CAXZN,IAAI,CAAA,YAAA,CAAJA,IAAI,CACJ8F,YAAY,CAAA,YAAA,CAAZA,YAAY,CACZ7F,cAAc,CAAA,YAAA,CAAdA,cAAc,CACdC,UAAU,CAAA,YAAA,CAAVA,UAAU,CACV6F,cAAc,CAAA,YAAA,CAAdA,cAAc,CACdxE,WAAW,CAAA,YAAA,CAAXA,WAAW,CACXyE,YAAY,CAAA,YAAA,CAAZA,YAAY,CACZC,mBAAmB,CAAA,YAAA,CAAnBA,mBAAmB,CACnBC,QAAQ,CAAA,YAAA,CAARA,QAAQ,CACRC,mBAAmB,CAAA,YAAA,CAAnBA,mBAAmB,CACnBC,yBAAAA,CAAAA,YAAAA,CAAAA,yBAAAA,CAGF,GAAMlE,CAAAA,MAAM,CAAGhC,UAAU,GAAK,WAAW,CAAG,IAAI,CAAGF,IAAI,CACvD,GAAMqG,CAAAA,OAAO,CAAGpG,cAAc,GAAK,OAAO,CAE1C,GAAMqG,CAAAA,iBAAiB,CACrBpG,UAAU,GAAK,OAAO,CAAGR,aAAa,CAAG,IAAI,CAACkF,UAAU,CAE1D,GAAM2B,CAAAA,gBAAgB,CACpBrG,UAAU,GAAK,MAAM,CAAGR,aAAa,CAAG,IAAI,CAACkF,UAAU,CAEzD,GAAM4B,CAAAA,MAAM,CAAGtG,UAAU,GAAK,MAAM,CAAG,CAAC,CAAG,MAAM,CAIjD,GAAMuG,CAAAA,OAAO,CAAGJ,OAAO,CAGnB,CAAEK,KAAK,CAAE,CAAC,CAAEjF,KAAK,CAAES,MAAM,CAAGzB,SAAS,CAAGsF,cAAe,CAAC,CACxD,CAAEY,IAAI,CAAE,CAAC,CAAElF,KAAK,CAAES,MAAM,CAAGzB,SAAS,CAAGsF,cAAe,CAAC,CAE3D,GAAMlB,CAAAA,QAAQ,CAAG3E,UAAU,GAAK,WAAW,CAAGP,YAAY,CAAG,IAAI,CAACkF,QAAQ,CAE1E,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,qBAAqB,CAAC,QAAQ,CAAA,CAAC,KAAK,CAAEA,QAAS,CAAA,CAC9C,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAA,QAAA,CAAA,CAChB,aAAa,CAAE,CAAC,CAAC/H,gBAAgB,CAAEA,gBAAgB,CAAE,CACrD,WAAW,CAAE,CAAC,CAACA,gBAAgB,CAAEA,gBAAgB,CAAE,CACnD,cAAc,CAAE,IAAI,CAACgI,kBAAmB,CACxC,oBAAoB,CAAE,IAAI,CAACI,wBAAyB,CACpD,OAAO,CAAEuB,OAAQ,CACjB,OAAO,CAAEvG,UAAU,GAAK,WAAW,EAAI4F,YAAa,CAAA,CAChDK,mBAAmB,CAAA,CAEvB,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,CACZ,QAAQ,CAAE,IAAI,CAACf,qBAAsB,CACrC,KAAK,CAAE,CACLwB,MAAM,CAACC,IAAI,CACX,CACEC,aAAa,CACX5G,UAAU,GAAK,WAAW,EAAI,CAACmG,OAAO,CAClC,aAAa,CACb,KACR,CAAC,CACD,CAAA,CAEF,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,CACZ,KAAK,CAAE,CACLO,MAAM,CAACG,OAAO,CACd,CACEC,SAAS,CACP9G,UAAU,GAAK,WAAW,CAGtB,EAAE,CACF,CAAC,CAAE0E,UAAU,CAAE0B,iBAAkB,CAAC,CAC1C,CAAC,CACD,CAAA,CAEF,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CACH,2BAA2B,CACzBpE,MAAM,EAAIhC,UAAU,GAAK,WAC1B,CACD,yBAAyB,CACvBgC,MAAM,EAAIhC,UAAU,GAAK,WAAW,CAChC,qBAAqB,CACrB,MACL,CACD,KAAK,CAAE0G,MAAM,CAACG,OAAQ,CAAA,CAErBb,QAAQ,CACJ,CAGLhG,UAAU,GAAK,WAAW,CAAG,IAAI,CAC/B,KAAA,CAAA,aAAA,CAAC,OAAO,CAAA,CACN,QAAQ,CAAE2E,QAAS,CACnB,OAAO,CAAE,SAAA,QAAA,QAAM,CAAA,MAAI,CAACrE,YAAY,CAAC,KAAK,CAAE,GACxC,kBAAkB,CAAE4F,yBAA0B,CAC9C,KAAK,CAAEJ,YAAoB,CAC3B,2BAA2B,CAAE,CAAC9D,MAAO,CACrC,yBAAyB,CACvBA,MAAM,CAAG,MAAM,CAAG,qBACnB,CAAA,CAEJ,CAEW,CAChB,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,CAGZ,IAAI,CAAE,IAAI,CAACW,cAAe,CAAA,CAC1B,CACD3C,UAAU,GAAK,WAAW,CAAG,IAAI,CAChC,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,CACZ,IAAI,CAAEpC,KAAK,CAAC,CACVR,QAAQ,CAAC,IAAI,CAAC6F,qBAAqB,CAAE,CACnCnF,IAAI,CAACE,EAAE,CAAC,IAAI,CAACiF,qBAAqB,CAAEtE,IAAI,CAAC,CAAE,CACzCF,GAAG,CAAC,IAAI,CAACwD,UAAU,CAAErD,KAAK,CAAC,CAC3Bf,IAAI,CAAC,EAAE,CAAE,iBAAO,CAAA,MAAI,CAACkF,gBAAgB,CAAG,KAAM,GAAC,CAChD,CAAC,CACH,CAAC,CACH,CAAE,CAAA,CAEN,CACD,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,CACZ,qBAAqB,CAAEgE,QAAgB,KAAM,CAC7C,QAAQ,CAAE,IAAI,CAAC3B,kBAAmB,CAClC,KAAK,CAAE,CACLsB,MAAM,CAACM,SAAS,CAChB,CACEF,SAAS,CACP9G,UAAU,GAAK,WAAW,CAGtB,EAAE,CACF,CAAC,CAAE0E,UAAU,CAAE2B,gBAAiB,CAAC,CAAC,CACxCY,OAAO,CAAE,IAAI,CAACpE,aAChB,CAAC,CACD7C,UAAU,GAAK,WAAW,CAEtBmG,OAAO,CACL,CAAEK,KAAK,CAAE,CAAE,CAAC,CACZ,CAAEC,IAAI,CAAE,CAAE,CAAC,CACb,CACEC,MAAM,CAACQ,YAAY,CACnBf,OAAO,CAAG,CAAEK,KAAK,CAAEF,MAAO,CAAC,CAAG,CAAEG,IAAI,CAAEH,MAAO,CAAC,CAC9C,CAAEa,MAAM,CAAEnH,UAAU,GAAK,MAAM,CAAG,CAAC,CAAC,CAAG,CAAE,CAAC,CAC3C,CACLqB,WAAW,CACX,CAAA,CAED0E,mBAAmB,CAAA,CAAE,CACR,CACF,CACE,CACW,CAErC,CAAA,WAAA,MAAA,GA1kB0BvJ,KAAK,CAACmD,SAAS,EA6kB3C,GAAM+G,CAAAA,MAAM,CAAGlF,UAAU,CAAC4F,MAAM,CAAC,CAC/BJ,SAAS,CAAE,CACTK,eAAe,CAAE,OAAO,CACxBC,QAAQ,CAAE,MACZ,CAAC,CACDJ,YAAY,CAAE,CACZxE,QAAQ,CAAE,UAAU,CACpB6E,GAAG,CAAE,CAAC,CACNC,MAAM,CAAE,CAAC,CACTjG,KAAK,CAAE7E,oBACT,CAAC,CACDmK,OAAO,CAAE,CACPY,IAAI,CAAE,CACR,CAAC,CACDd,IAAI,CAAA,aAAA,EACFc,IAAI,CAAE,CAAC,EAIA,IAAI,CAIf,CAAC,CAAC","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { InteractionManager, Keyboard, Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { DEFAULT_DRAWER_WIDTH, SWIPE_MIN_DISTANCE, SWIPE_MIN_OFFSET, SWIPE_MIN_VELOCITY } from '../../constants';\nimport { DrawerProgressContext } from '../../utils/DrawerProgressContext';\nimport { GestureState, PanGestureHandler } from '../GestureHandler';\nimport { Overlay } from './Overlay';\nconst {\n  Clock,\n  Value,\n  onChange,\n  clockRunning,\n  startClock,\n  stopClock,\n  spring,\n  abs,\n  add,\n  and,\n  block,\n  call,\n  cond,\n  divide,\n  eq,\n  event,\n  greaterThan,\n  lessThan,\n  max,\n  min,\n  multiply,\n  neq,\n  or,\n  set,\n  sub\n} = Animated;\nconst TRUE = 1;\nconst FALSE = 0;\nconst NOOP = 0;\nconst UNSET = -1;\nconst DIRECTION_LEFT = 1;\nconst DIRECTION_RIGHT = -1;\nconst SPRING_CONFIG = {\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n  restDisplacementThreshold: 0.01,\n  restSpeedThreshold: 0.01\n};\nconst ANIMATED_ZERO = new Animated.Value(0);\nconst ANIMATED_ONE = new Animated.Value(1);\nexport class Drawer extends React.Component {\n  componentDidUpdate(prevProps) {\n    const {\n      open,\n      drawerPosition,\n      drawerType,\n      swipeMinDistance,\n      swipeMinVelocity,\n      hideStatusBarOnOpen\n    } = this.props;\n    if (\n    // If we're not in the middle of a transition, sync the drawer's open state\n    typeof this.pendingOpenValue !== 'boolean' || open !== this.pendingOpenValue) {\n      this.toggleDrawer(open);\n    }\n    this.pendingOpenValue = undefined;\n    if (open !== prevProps.open && hideStatusBarOnOpen) {\n      this.toggleStatusBar(open);\n    }\n    if (prevProps.drawerPosition !== drawerPosition) {\n      this.drawerPosition.setValue(drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT);\n    }\n    if (prevProps.drawerType !== drawerType) {\n      this.isDrawerTypeFront.setValue(drawerType === 'front' ? TRUE : FALSE);\n    }\n    if (prevProps.swipeMinDistance !== swipeMinDistance) {\n      this.swipeDistanceThreshold.setValue(swipeMinDistance ?? SWIPE_MIN_DISTANCE);\n    }\n    if (prevProps.swipeMinVelocity !== swipeMinVelocity) {\n      this.swipeVelocityThreshold.setValue(swipeMinVelocity ?? SWIPE_MIN_VELOCITY);\n    }\n  }\n  componentWillUnmount() {\n    this.toggleStatusBar(false);\n    this.handleEndInteraction();\n  }\n  handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n  handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n  getDrawerWidth = () => {\n    const {\n      drawerStyle,\n      layout\n    } = this.props;\n    const {\n      width = DEFAULT_DRAWER_WIDTH\n    } = StyleSheet.flatten(drawerStyle) || {};\n    if (typeof width === 'string' && width.endsWith('%')) {\n      // Try to calculate width if a percentage is given\n      const percentage = Number(width.replace(/%$/, ''));\n      if (Number.isFinite(percentage)) {\n        return layout.width * (percentage / 100);\n      }\n    }\n    return typeof width === 'number' ? width : 0;\n  };\n  clock = new Clock();\n  isDrawerTypeFront = new Value(this.props.drawerType === 'front' ? TRUE : FALSE);\n  isOpen = new Value(this.props.open ? TRUE : FALSE);\n  nextIsOpen = new Value(UNSET);\n  isSwiping = new Value(FALSE);\n  initialDrawerWidth = this.getDrawerWidth();\n  gestureState = new Value(GestureState.UNDETERMINED);\n  touchX = new Value(0);\n  velocityX = new Value(0);\n  gestureX = new Value(0);\n  offsetX = new Value(0);\n  position = new Value(this.props.open ? this.initialDrawerWidth * (this.props.drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT) : 0);\n  containerWidth = new Value(this.props.layout.width);\n  drawerWidth = new Value(this.initialDrawerWidth);\n  drawerOpacity = new Value(this.props.drawerType === 'permanent' ? 1 : 0);\n  drawerPosition = new Value(this.props.drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT);\n\n  // Comment stolen from react-native-gesture-handler/DrawerLayout\n  //\n  // While closing the drawer when user starts gesture outside of its area (in greyed\n  // out part of the window), we want the drawer to follow only once finger reaches the\n  // edge of the drawer.\n  // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n  // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n  // an arrow pointing left\n  // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    +---------------+    +---------------+    +---------------+    +---------------+\n  //\n  // For the above to work properly we define animated value that will keep start position\n  // of the gesture. Then we use that value to calculate how much we need to subtract from\n  // the dragX. If the gesture started on the greyed out area we take the distance from the\n  // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n  // drawer be pulled back as soon as you start the pan.\n  //\n  // This is used only when drawerType is \"front\"\n  touchDistanceFromDrawer = cond(this.isDrawerTypeFront, cond(eq(this.drawerPosition, DIRECTION_LEFT), max(\n  // Distance of touch start from left screen edge - Drawer width\n  sub(sub(this.touchX, this.gestureX), this.drawerWidth), 0), min(multiply(\n  // Distance of drawer from left screen edge - Touch start point\n  sub(sub(this.containerWidth, this.drawerWidth), sub(this.touchX, this.gestureX)), DIRECTION_RIGHT), 0)), 0);\n  swipeDistanceThreshold = new Value(this.props.swipeMinDistance ?? SWIPE_MIN_DISTANCE);\n  swipeVelocityThreshold = new Value(this.props.swipeMinVelocity ?? SWIPE_MIN_VELOCITY);\n  currentOpenValue = this.props.open;\n  isStatusBarHidden = false;\n  manuallyTriggerSpring = new Value(FALSE);\n  transitionTo = isOpen => {\n    const toValue = new Value(0);\n    const frameTime = new Value(0);\n    const state = {\n      position: this.position,\n      time: new Value(0),\n      finished: new Value(FALSE),\n      velocity: new Value(0)\n    };\n    return block([cond(clockRunning(this.clock), NOOP, [\n    // Animation wasn't running before\n    // Set the initial values and start the clock\n    set(toValue, multiply(isOpen, this.drawerWidth, this.drawerPosition)), set(frameTime, 0), set(state.time, 0), set(state.finished, FALSE), set(state.velocity, this.velocityX), set(this.isOpen, isOpen), startClock(this.clock), call([], this.handleStartInteraction), set(this.manuallyTriggerSpring, FALSE)]), spring(this.clock, state, {\n      ...SPRING_CONFIG,\n      toValue\n    }), onChange(state.finished, cond(state.finished, call([this.isOpen], open => {\n      var _this$props$onTransit, _this$props;\n      return (_this$props$onTransit = (_this$props = this.props).onTransitionEnd) === null || _this$props$onTransit === void 0 ? void 0 : _this$props$onTransit.call(_this$props, !open);\n    }), call([this.isOpen], open => {\n      var _this$props$onTransit2, _this$props2;\n      return (_this$props$onTransit2 = (_this$props2 = this.props).onTransitionStart) === null || _this$props$onTransit2 === void 0 ? void 0 : _this$props$onTransit2.call(_this$props2, !open);\n    }))), cond(state.finished, [\n    // Reset gesture and velocity from previous gesture\n    set(this.touchX, 0), set(this.gestureX, 0), set(this.velocityX, 0), set(this.offsetX, 0),\n    // When the animation finishes, stop the clock\n    stopClock(this.clock), call([this.isOpen], _ref => {\n      let [value] = _ref;\n      const open = Boolean(value);\n      this.handleEndInteraction();\n      if (open !== this.props.open) {\n        // Sync drawer's state after animation finished\n        // This shouldn't be necessary, but there seems to be an issue on iOS\n        this.toggleDrawer(this.props.open);\n      }\n    })])]);\n  };\n  dragX = block([onChange(this.isOpen, call([this.isOpen], _ref2 => {\n    let [value] = _ref2;\n    const open = Boolean(value);\n    this.currentOpenValue = open;\n\n    // Without this check, the drawer can go to an infinite update <-> animate loop for sync updates\n    if (open !== this.props.open) {\n      // If the mode changed, update state\n      if (open) {\n        this.props.onOpen();\n      } else {\n        this.props.onClose();\n      }\n      this.pendingOpenValue = open;\n\n      // Force componentDidUpdate to fire, whether user does a setState or not\n      // This allows us to detect when the user drops the update and revert back\n      // It's necessary to make sure that the state stays in sync\n      this.forceUpdate();\n    }\n  })), onChange(this.nextIsOpen, cond(neq(this.nextIsOpen, UNSET), [\n  // Stop any running animations\n  cond(clockRunning(this.clock), stopClock(this.clock)),\n  // Update the open value to trigger the transition\n  set(this.isOpen, this.nextIsOpen), set(this.gestureX, 0), set(this.nextIsOpen, UNSET)])),\n  // This block must be after the this.isOpen listener since we check for current value\n  onChange(this.isSwiping,\n  // Listen to updates for this value only when it changes\n  // Without `onChange`, this will fire even if the value didn't change\n  // We don't want to call the listeners if the value didn't change\n  call([this.isSwiping], _ref3 => {\n    let [value] = _ref3;\n    const {\n      keyboardDismissMode\n    } = this.props;\n    if (value === TRUE) {\n      if (keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n      this.toggleStatusBar(true);\n    } else {\n      this.toggleStatusBar(this.currentOpenValue);\n    }\n  })), onChange(this.gestureState, cond(eq(this.gestureState, GestureState.ACTIVE), call([], this.handleStartInteraction))), onChange(this.gestureState, cond(eq(this.gestureState, GestureState.END), [call([], () => {\n    var _this$props$onGesture, _this$props3;\n    return (_this$props$onGesture = (_this$props3 = this.props).onGestureEnd) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props3);\n  })])), onChange(this.gestureState, cond(eq(this.gestureState, GestureState.CANCELLED), [call([], () => {\n    var _this$props$onGesture2, _this$props4;\n    return (_this$props$onGesture2 = (_this$props4 = this.props).onGestureCancel) === null || _this$props$onGesture2 === void 0 ? void 0 : _this$props$onGesture2.call(_this$props4);\n  })])), cond(eq(this.gestureState, GestureState.ACTIVE), [cond(this.isSwiping, NOOP, [\n  // We weren't dragging before, set it to true\n  set(this.isSwiping, TRUE),\n  // Also update the drag offset to the last position\n  set(this.offsetX, this.position), call([], () => {\n    var _this$props$onGesture3, _this$props5;\n    return (_this$props$onGesture3 = (_this$props5 = this.props).onGestureStart) === null || _this$props$onGesture3 === void 0 ? void 0 : _this$props$onGesture3.call(_this$props5);\n  })]),\n  // Update position with previous offset + gesture distance\n  set(this.position, add(this.offsetX, this.gestureX, this.touchDistanceFromDrawer)),\n  // Stop animations while we're dragging\n  stopClock(this.clock)], [set(this.isSwiping, FALSE), set(this.touchX, 0), this.transitionTo(cond(this.manuallyTriggerSpring, this.isOpen, cond(or(and(greaterThan(abs(this.gestureX), SWIPE_MIN_OFFSET), greaterThan(abs(this.velocityX), this.swipeVelocityThreshold)), greaterThan(abs(this.gestureX), this.swipeDistanceThreshold)), cond(eq(this.drawerPosition, DIRECTION_LEFT),\n  // If swiped to right, open the drawer, otherwise close it\n  greaterThan(cond(eq(this.velocityX, 0), this.gestureX, this.velocityX), 0),\n  // If swiped to left, open the drawer, otherwise close it\n  lessThan(cond(eq(this.velocityX, 0), this.gestureX, this.velocityX), 0)), this.isOpen)))]), this.position]);\n  translateX = cond(eq(this.drawerPosition, DIRECTION_RIGHT), min(max(multiply(this.drawerWidth, -1), this.dragX), 0), max(min(this.drawerWidth, this.dragX), 0));\n  progress = cond(\n  // Check if the drawer width is available to avoid division by zero\n  eq(this.drawerWidth, 0), 0, abs(divide(this.translateX, this.drawerWidth)));\n  handleGestureEvent = event([{\n    nativeEvent: {\n      x: this.touchX,\n      translationX: this.gestureX,\n      velocityX: this.velocityX\n    }\n  }]);\n  handleGestureStateChange = event([{\n    nativeEvent: {\n      state: s => set(this.gestureState, s)\n    }\n  }]);\n  handleContainerLayout = e => this.containerWidth.setValue(e.nativeEvent.layout.width);\n  handleDrawerLayout = e => {\n    this.drawerWidth.setValue(e.nativeEvent.layout.width);\n    this.toggleDrawer(this.props.open);\n\n    // Until layout is available, drawer is hidden with opacity: 0 by default\n    // Show it in the next frame when layout is available\n    // If we don't delay it until the next frame, there's a visible flicker\n    requestAnimationFrame(() => requestAnimationFrame(() => this.drawerOpacity.setValue(1)));\n  };\n  toggleDrawer = open => {\n    if (this.currentOpenValue !== open) {\n      this.nextIsOpen.setValue(open ? TRUE : FALSE);\n\n      // This value will also be set shortly after as changing this.nextIsOpen changes this.isOpen\n      // However, there's a race condition on Android, so we need to set a bit earlier\n      this.currentOpenValue = open;\n    }\n  };\n  toggleStatusBar = hidden => {\n    const {\n      hideStatusBarOnOpen: hideStatusBar,\n      statusBarAnimation\n    } = this.props;\n    if (hideStatusBar && this.isStatusBarHidden !== hidden) {\n      this.isStatusBarHidden = hidden;\n      StatusBar.setHidden(hidden, statusBarAnimation);\n    }\n  };\n  render() {\n    const {\n      open,\n      swipeEnabled,\n      drawerPosition,\n      drawerType,\n      swipeEdgeWidth,\n      drawerStyle,\n      overlayStyle,\n      renderDrawerContent,\n      children,\n      gestureHandlerProps,\n      overlayAccessibilityLabel\n    } = this.props;\n    const isOpen = drawerType === 'permanent' ? true : open;\n    const isRight = drawerPosition === 'right';\n    const contentTranslateX = drawerType === 'front' ? ANIMATED_ZERO : this.translateX;\n    const drawerTranslateX = drawerType === 'back' ? ANIMATED_ZERO : this.translateX;\n    const offset = drawerType === 'back' ? 0 : '100%';\n\n    // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n    // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n    const hitSlop = isRight ?\n    // Extend hitSlop to the side of the screen when drawer is closed\n    // This lets the user drag the drawer from the side of the screen\n    {\n      right: 0,\n      width: isOpen ? undefined : swipeEdgeWidth\n    } : {\n      left: 0,\n      width: isOpen ? undefined : swipeEdgeWidth\n    };\n    const progress = drawerType === 'permanent' ? ANIMATED_ONE : this.progress;\n    return /*#__PURE__*/React.createElement(DrawerProgressContext.Provider, {\n      value: progress\n    }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({\n      activeOffsetX: [-SWIPE_MIN_OFFSET, SWIPE_MIN_OFFSET],\n      failOffsetY: [-SWIPE_MIN_OFFSET, SWIPE_MIN_OFFSET],\n      onGestureEvent: this.handleGestureEvent,\n      onHandlerStateChange: this.handleGestureStateChange,\n      hitSlop: hitSlop,\n      enabled: drawerType !== 'permanent' && swipeEnabled\n    }, gestureHandlerProps), /*#__PURE__*/React.createElement(Animated.View, {\n      onLayout: this.handleContainerLayout,\n      style: [styles.main, {\n        flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n      }]\n    }, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.content, {\n        transform: drawerType === 'permanent' ?\n        // Reanimated needs the property to be present, but it results in Browser bug\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n        [] : [{\n          translateX: contentTranslateX\n        }]\n      }]\n    }, /*#__PURE__*/React.createElement(View, {\n      accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n      importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n      style: styles.content\n    }, children),\n    // Disable overlay if sidebar is permanent\n    drawerType === 'permanent' ? null : /*#__PURE__*/React.createElement(Overlay, {\n      progress: progress,\n      onPress: () => this.toggleDrawer(false),\n      accessibilityLabel: overlayAccessibilityLabel,\n      style: overlayStyle,\n      accessibilityElementsHidden: !isOpen,\n      importantForAccessibility: isOpen ? 'auto' : 'no-hide-descendants'\n    })), /*#__PURE__*/React.createElement(Animated.Code, {\n      // This is needed to make sure that container width updates with `setValue`\n      // Without this, it won't update when not used in styles\n      exec: this.containerWidth\n    }), drawerType === 'permanent' ? null : /*#__PURE__*/React.createElement(Animated.Code, {\n      exec: block([onChange(this.manuallyTriggerSpring, [cond(eq(this.manuallyTriggerSpring, TRUE), [set(this.nextIsOpen, FALSE), call([], () => this.currentOpenValue = false)])])])\n    }), /*#__PURE__*/React.createElement(Animated.View, {\n      removeClippedSubviews: Platform.OS !== 'ios',\n      onLayout: this.handleDrawerLayout,\n      style: [styles.container, {\n        transform: drawerType === 'permanent' ?\n        // Reanimated needs the property to be present, but it results in Browser bug\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n        [] : [{\n          translateX: drawerTranslateX\n        }],\n        opacity: this.drawerOpacity\n      }, drawerType === 'permanent' ?\n      // Without this, the `left`/`right` values don't get reset\n      isRight ? {\n        right: 0\n      } : {\n        left: 0\n      } : [styles.nonPermanent, isRight ? {\n        right: offset\n      } : {\n        left: offset\n      }, {\n        zIndex: drawerType === 'back' ? -1 : 0\n      }], drawerStyle]\n    }, renderDrawerContent()))));\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    maxWidth: '100%'\n  },\n  nonPermanent: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    width: DEFAULT_DRAWER_WIDTH\n  },\n  content: {\n    flex: 1\n  },\n  main: {\n    flex: 1,\n    ...Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: {\n        overflow: 'hidden'\n      }\n    })\n  }\n});\n//# sourceMappingURL=Drawer.js.map"]},"metadata":{},"sourceType":"module"}