{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var NodeManager=function(){function NodeManager(){_classCallCheck(this,NodeManager);}_createClass(NodeManager,null,[{key:\"getHandler\",value:function getHandler(tag){if(tag in this.gestures){return this.gestures[tag];}throw new Error(`No handler for tag ${tag}`);}},{key:\"createGestureHandler\",value:function createGestureHandler(handlerTag,handler){if(handlerTag in this.gestures){throw new Error(`Handler with tag ${handlerTag} already exists`);}this.gestures[handlerTag]=handler;this.gestures[handlerTag].setTag(handlerTag);}},{key:\"dropGestureHandler\",value:function dropGestureHandler(handlerTag){if(!(handlerTag in this.gestures)){return;}delete this.gestures[handlerTag];}},{key:\"getNodes\",value:function getNodes(){return _objectSpread({},this.gestures);}}]);return NodeManager;}();export{NodeManager as default};_defineProperty(NodeManager,\"gestures\",{});","map":{"version":3,"sources":["NodeManager.ts"],"names":["NodeManager","getHandler","tag","gestures","Error","createGestureHandler","handlerTag","handler","setTag","dropGestureHandler","getNodes"],"mappings":"0+BAI8BA,CAAAA,WAAf,qBAAA,YAAA,EAAA,eAAA,MAAA,WAAA,GAAA,YAAA,CAAA,WAAA,QAAA,GAAA,cAAA,KAAA,CAMCC,SAAAA,WAAWC,GAAD,CAAc,CACpC,GAAIA,GAAG,GAAI,KAAA,CAAKC,QAAhB,CAA0B,CACxB,MAAO,KAAA,CAAKA,QAAL,CAAcD,GAAd,CAAP,CACD,CAED,KAAM,IAAIE,CAAAA,KAAJ,CAAW,sBAAqBF,GAAI,EAApC,CAAN,CACD,CAAA,GAAA,GAAA,wBAAA,KAAA,CAEaG,SAAAA,qBACZC,UADgC,CAEhCC,OAFgC,CAG1B,CACN,GAAID,UAAU,GAAI,KAAA,CAAKH,QAAvB,CAAiC,CAC/B,KAAM,IAAIC,CAAAA,KAAJ,CAAW,oBAAmBE,UAAW,iBAAzC,CAAN,CACD,CAED,IAAA,CAAKH,QAAL,CAAcG,UAAd,CAAA,CAA4BC,OAA5B,CACA,IAAA,CAAKJ,QAAL,CAAcG,UAAd,CAAA,CAA0BE,MAA1B,CAAiCF,UAAjC,CAAA,CACD,CAAA,GAAA,GAAA,sBAAA,KAAA,CAEaG,SAAAA,mBAAmBH,UAAD,CAA2B,CACzD,GAAI,EAAEA,UAAU,GAAI,KAAA,CAAKH,QAArB,CAAJ,CAAoC,CAClC,OAFuD,CAMzD,MAAO,KAAA,CAAKA,QAAL,CAAcG,UAAd,CAAP,CACD,CAAA,GAAA,GAAA,YAAA,KAAA,CAEaI,SAAAA,SAAAA,CAAW,CACvB,OAAA,aAAA,IAAY,IAAA,CAAKP,QAAAA,EAClB,CAAA,WAAA,WAAA,YArC2BH,WAAf,IAAA,OAAA,E,gBAAeA,W,YAIxB,CAAA,C","sourcesContent":["import { ValueOf } from '../../typeUtils';\nimport { Gestures } from '../../RNGestureHandlerModule.web';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport default abstract class NodeManager {\n  private static gestures: Record<\n    number,\n    InstanceType<ValueOf<typeof Gestures>>\n  > = {};\n\n  public static getHandler(tag: number) {\n    if (tag in this.gestures) {\n      return this.gestures[tag];\n    }\n\n    throw new Error(`No handler for tag ${tag}`);\n  }\n\n  public static createGestureHandler(\n    handlerTag: number,\n    handler: InstanceType<ValueOf<typeof Gestures>>\n  ): void {\n    if (handlerTag in this.gestures) {\n      throw new Error(`Handler with tag ${handlerTag} already exists`);\n    }\n\n    this.gestures[handlerTag] = handler;\n    this.gestures[handlerTag].setTag(handlerTag);\n  }\n\n  public static dropGestureHandler(handlerTag: number): void {\n    if (!(handlerTag in this.gestures)) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete this.gestures[handlerTag];\n  }\n\n  public static getNodes() {\n    return { ...this.gestures };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}