{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{CodedError,Platform}from'expo-modules-core';import FontObserver from'fontfaceobserver';import{FontDisplay}from'./Font.types';function getFontFaceStyleSheet(){if(!Platform.isDOMAvailable){return null;}var styleSheet=getStyleElement();return styleSheet.sheet?styleSheet.sheet:null;}function getFontFaceRules(){var sheet=getFontFaceStyleSheet();if(sheet){var rules=_toConsumableArray(sheet.cssRules);var items=[];for(var i=0;i<rules.length;i++){var rule=rules[i];if(rule instanceof CSSFontFaceRule){items.push({rule:rule,index:i});}}return items;}return[];}function getFontFaceRulesMatchingResource(fontFamilyName,options){var rules=getFontFaceRules();return rules.filter(function(_ref){var rule=_ref.rule;return rule.style.fontFamily===fontFamilyName&&(options&&options.display?options.display===rule.style.fontDisplay:true);});}var serverContext=new Set();function getHeadElements(){var entries=_toConsumableArray(serverContext.entries());if(!entries.length){return[];}var css=entries.map(function(_ref2){var _ref3=_slicedToArray(_ref2,1),css=_ref3[0].css;return css;}).join('\\n');var links=entries.map(function(_ref4){var _ref5=_slicedToArray(_ref4,1),resourceId=_ref5[0].resourceId;return resourceId;});return[{$$type:'style',children:css,id:ID,type:'text/css'}].concat(_toConsumableArray(links.map(function(resourceId){return{$$type:'link',rel:'preload',href:resourceId,as:'font',crossorigin:''};})));}export default{get name(){return'ExpoFontLoader';},unloadAllAsync:function(){var _unloadAllAsync=_asyncToGenerator(function*(){if(!Platform.isDOMAvailable)return;var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){document.removeChild(element);}});function unloadAllAsync(){return _unloadAllAsync.apply(this,arguments);}return unloadAllAsync;}(),unloadAsync:function(){var _unloadAsync=_asyncToGenerator(function*(fontFamilyName,options){var sheet=getFontFaceStyleSheet();if(!sheet)return;var items=getFontFaceRulesMatchingResource(fontFamilyName,options);for(var item of items){sheet.deleteRule(item.index);}});function unloadAsync(_x,_x2){return _unloadAsync.apply(this,arguments);}return unloadAsync;}(),getServerResources:function getServerResources(){var elements=getHeadElements();return elements.map(function(element){switch(element.$$type){case'style':return`<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;case'link':return`<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;default:return'';}}).filter(Boolean);},resetServerContext:function resetServerContext(){serverContext.clear();},isLoaded:function isLoaded(fontFamilyName){var _getFontFaceRulesMatc;var resource=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof window==='undefined'){return!!_toConsumableArray(serverContext.values()).find(function(asset){return asset.name===fontFamilyName;});}return((_getFontFaceRulesMatc=getFontFaceRulesMatchingResource(fontFamilyName,resource))==null?void 0:_getFontFaceRulesMatc.length)>0;},loadAsync:function loadAsync(fontFamilyName,resource){if(typeof window==='undefined'){serverContext.add({name:fontFamilyName,css:_createWebFontTemplate(fontFamilyName,resource),resourceId:resource.uri});return Promise.resolve();}var canInjectStyle=document.head&&typeof document.head.appendChild==='function';if(!canInjectStyle){throw new CodedError('ERR_WEB_ENVIRONMENT',`The browser's \\`document.head\\` element doesn't support injecting fonts.`);}var style=getStyleElement();document.head.appendChild(style);var res=getFontFaceRulesMatchingResource(fontFamilyName,resource);if(!res.length){_createWebStyle(fontFamilyName,resource);}if(!isFontLoadingListenerSupported()){return Promise.resolve();}return new FontObserver(fontFamilyName,{display:resource.display}).load(null,6000);}};var ID='expo-generated-fonts';function getStyleElement(){var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){return element;}var styleElement=document.createElement('style');styleElement.id=ID;styleElement.type='text/css';return styleElement;}export function _createWebFontTemplate(fontFamily,resource){return`@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${resource.display||FontDisplay.AUTO}}`;}function _createWebStyle(fontFamily,resource){var fontStyle=_createWebFontTemplate(fontFamily,resource);var styleElement=getStyleElement();if(styleElement.styleSheet){var styleElementIE=styleElement;styleElementIE.styleSheet.cssText=styleElementIE.styleSheet.cssText?styleElementIE.styleSheet.cssText+fontStyle:fontStyle;}else{var textNode=document.createTextNode(fontStyle);styleElement.appendChild(textNode);}return styleElement;}function isFontLoadingListenerSupported(){var userAgent=window.navigator.userAgent;var isIOS=!!userAgent.match(/iPad|iPhone/i);var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var isEdge=userAgent.includes('Edge');var isIE=userAgent.includes('Trident');var isFirefox=userAgent.includes('Firefox');return!isSafari&&!isIOS&&!isEdge&&!isIE&&!isFirefox;}","map":{"version":3,"sources":["../src/ExpoFontLoader.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nconst serverContext: Set<{ name: string; css: string; resourceId: string }> = new Set();\n\nfunction getHeadElements(): {\n  $$type: string;\n  rel?: string;\n  href?: string;\n  as?: string;\n  crossorigin?: string;\n  children?: string;\n  id?: string;\n  type?: string;\n}[] {\n  const entries = [...serverContext.entries()];\n  if (!entries.length) {\n    return [];\n  }\n  const css = entries.map(([{ css }]) => css).join('\\n');\n  const links = entries.map(([{ resourceId }]) => resourceId);\n  // TODO: Maybe return nothing if no fonts were loaded.\n  return [\n    {\n      $$type: 'style',\n      children: css,\n      id: ID,\n      type: 'text/css',\n    },\n    ...links.map((resourceId) => ({\n      $$type: 'link',\n      rel: 'preload',\n      href: resourceId,\n      as: 'font',\n      crossorigin: '',\n    })),\n  ];\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  getServerResources(): string[] {\n    const elements = getHeadElements();\n\n    return elements\n      .map((element) => {\n        switch (element.$$type) {\n          case 'style':\n            return `<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;\n          case 'link':\n            return `<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;\n          default:\n            return '';\n        }\n      })\n      .filter(Boolean);\n  },\n\n  resetServerContext() {\n    serverContext.clear();\n  },\n\n  isLoaded(fontFamilyName: string, resource: UnloadFontOptions = {}): boolean {\n    if (typeof window === 'undefined') {\n      return !![...serverContext.values()].find((asset) => {\n        return asset.name === fontFamilyName;\n      });\n    }\n    return getFontFaceRulesMatchingResource(fontFamilyName, resource)?.length > 0;\n  },\n\n  // NOTE(EvanBacon): No async keyword! This cannot return a promise in Node environments.\n  loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (typeof window === 'undefined') {\n      serverContext.add({\n        name: fontFamilyName,\n        css: _createWebFontTemplate(fontFamilyName, resource),\n        // @ts-expect-error: typeof string\n        resourceId: resource.uri!,\n      });\n      return Promise.resolve();\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = getStyleElement();\n    document.head!.appendChild(style);\n\n    const res = getFontFaceRulesMatchingResource(fontFamilyName, resource);\n    if (!res.length) {\n      _createWebStyle(fontFamilyName, resource);\n    }\n\n    if (!isFontLoadingListenerSupported()) {\n      return Promise.resolve();\n    }\n\n    return new FontObserver(fontFamilyName, { display: resource.display }).load(null, 6000);\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nexport function _createWebFontTemplate(fontFamily: string, resource: FontResource): string {\n  return `@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${\n    resource.display || FontDisplay.AUTO\n  }}`;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = _createWebFontTemplate(fontFamily, resource);\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}