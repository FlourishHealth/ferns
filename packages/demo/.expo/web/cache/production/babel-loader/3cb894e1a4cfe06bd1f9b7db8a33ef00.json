{"ast":null,"code":"import React,{forwardRef,useEffect,useRef}from\"react\";import Animated from\"react-native-web/dist/exports/Animated\";import{Modalize}from\"react-native-modalize\";import{Portal}from\"react-native-portalize\";export var useCombinedRefs=function useCombinedRefs(){for(var _len=arguments.length,refs=new Array(_len),_key=0;_key<_len;_key++){refs[_key]=arguments[_key];}var targetRef=useRef();useEffect(function(){refs.forEach(function(ref){if(!ref){return;}if(typeof ref===\"function\"){ref(targetRef.current);}else{ref.current=targetRef.current;}});},[refs]);return targetRef;};export var SimpleContent=forwardRef(function(props,ref){var modalizeRef=useRef(null);var combinedRef=useCombinedRefs(ref,modalizeRef);var animated=useRef(new Animated.Value(0)).current;return React.createElement(Portal,null,React.createElement(Modalize,{ref:combinedRef,adjustToContentHeight:true,panGestureAnimatedValue:animated,scrollViewProps:{showsVerticalScrollIndicator:false,stickyHeaderIndices:[0]}},props.children));});","map":{"version":3,"sources":["../src/ModalSheet.tsx"],"names":[],"mappings":"AACA,MAAO,CAAA,KAAK,EAAG,UAAU,CAAE,SAAS,CAAE,MAAM,KAAO,OAAO,CAAC,OAAA,QAAA,8CAE3D,OAAQ,QAAQ,KAAO,uBAAuB,CAC9C,OAAQ,MAAM,KAAO,wBAAwB,CAE7C,MAAO,IAAM,CAAA,eAAe,CAAG,QAAlB,CAAA,eAAe,CAAA,CAAoB,SAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAb,IAAS,KAAA,KAAA,CAAA,IAAA,EAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAT,IAAS,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,GAC1C,GAAM,CAAA,SAAS,CAAG,MAAM,CAAA,CAAE,CAG1B,SAAS,CAAC,UAAK,CACb,IAAI,CAAC,OAAO,CAAC,SAAC,GAAQ,CAAI,CACxB,GAAI,CAAC,GAAG,CAAE,CACR,OACF,CAEA,GAAI,MAAO,CAAA,GAAG,GAAK,UAAU,CAAE,CAC7B,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CACxB,CAAC,IAAM,CACL,GAAG,CAAC,OAAO,CAAG,SAAS,CAAC,OAAO,CACjC,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAAC,IAAI,CAAC,CAAC,CAEV,MAAO,CAAA,SAAS,CAClB,CAAC,CAMD,MAAO,IAAM,CAAA,aAAa,CAAG,UAAU,CAAC,SAAC,KAAY,CAAE,GAAG,CAAI,CAC5D,GAAM,CAAA,WAAW,CAAG,MAAM,CAAC,IAAI,CAAC,CAChC,GAAM,CAAA,WAAW,CAAG,eAAe,CAAC,GAAG,CAAE,WAAW,CAAC,CACrD,GAAM,CAAA,QAAQ,CAAG,MAAM,CAAC,GAAI,CAAA,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAQtD,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,MAAM,CAAA,IAAA,CACL,KAAA,CAAA,aAAA,CAAC,QAAQ,C,CAEP,GAAG,CAAE,WAAW,CAChB,qBAAqB,CAAA,IAAA,CACrB,uBAAuB,CAAE,QAAQ,CACjC,eAAe,CAAE,CACf,4BAA4B,CAAE,KAAK,CACnC,mBAAmB,CAAE,CAAC,CAAC,CACxB,CAAA,CAAA,CAEA,KAAK,CAAC,QAAQ,CACN,CACJ,CAEb,CAAC,CAAC","sourceRoot":"","sourcesContent":["/* eslint-disable react/display-name */\nimport React, { forwardRef, useEffect, useRef } from \"react\";\nimport { Animated } from \"react-native\";\nimport { Modalize } from \"react-native-modalize\";\nimport { Portal } from \"react-native-portalize\";\nexport const useCombinedRefs = (...refs) => {\n    const targetRef = useRef();\n    // Iterate through the refs array, and set the ref.current value to the targetRef\n    useEffect(() => {\n        refs.forEach((ref) => {\n            if (!ref) {\n                return;\n            }\n            if (typeof ref === \"function\") {\n                ref(targetRef.current);\n            }\n            else {\n                ref.current = targetRef.current;\n            }\n        });\n    }, [refs]);\n    return targetRef;\n};\nexport const SimpleContent = forwardRef((props, ref) => {\n    const modalizeRef = useRef(null);\n    const combinedRef = useCombinedRefs(ref, modalizeRef);\n    const animated = useRef(new Animated.Value(0)).current;\n    // const renderHeader = () => (\n    //   <Box paddingY={4} marginTop={4} marginBottom={4}>\n    //     <Text>50 users online</Text>\n    //   </Box>\n    // );\n    return (React.createElement(Portal, null,\n        React.createElement(Modalize\n        // HeaderComponent={renderHeader}\n        , { \n            // HeaderComponent={renderHeader}\n            ref: combinedRef, adjustToContentHeight: true, panGestureAnimatedValue: animated, scrollViewProps: {\n                showsVerticalScrollIndicator: false,\n                stickyHeaderIndices: [0],\n            } }, props.children)));\n});\n//# sourceMappingURL=ModalSheet.js.map"]},"metadata":{},"sourceType":"module"}