{"ast":null,"code":"'use strict';import{SLOPE_FACTOR,VELOCITY_EPS}from'./utils';var DERIVATIVE_EPS=0.1;var _worklet_5745456064385_init_data={code:\"function rubberBandDecay(animation,now,config){const{SLOPE_FACTOR,DERIVATIVE_EPS,VELOCITY_EPS}=this.__closure;const{lastTimestamp:lastTimestamp,startTimestamp:startTimestamp,current:current,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);const clampIndex=Math.abs(current-config.clamp[0])<Math.abs(current-config.clamp[1])?0:1;let derivative=0;if(current<config.clamp[0]||current>config.clamp[1]){derivative=current-config.clamp[clampIndex];}const v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR)-derivative*config.rubberBandFactor;if(Math.abs(derivative)>DERIVATIVE_EPS){animation.springActive=true;}else if(animation.springActive){animation.current=config.clamp[clampIndex];return true;}else if(Math.abs(v)<VELOCITY_EPS){return true;}animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;return false;}\"};export var rubberBandDecay=function(){var rubberBandDecay=function rubberBandDecay(animation,now,config){var lastTimestamp=animation.lastTimestamp,startTimestamp=animation.startTimestamp,current=animation.current,velocity=animation.velocity;var deltaTime=Math.min(now-lastTimestamp,64);var clampIndex=Math.abs(current-config.clamp[0])<Math.abs(current-config.clamp[1])?0:1;var derivative=0;if(current<config.clamp[0]||current>config.clamp[1]){derivative=current-config.clamp[clampIndex];}var v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR)-derivative*config.rubberBandFactor;if(Math.abs(derivative)>DERIVATIVE_EPS){animation.springActive=true;}else if(animation.springActive){animation.current=config.clamp[clampIndex];return true;}else if(Math.abs(v)<VELOCITY_EPS){return true;}animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;return false;};rubberBandDecay.__closure={SLOPE_FACTOR:SLOPE_FACTOR,DERIVATIVE_EPS:DERIVATIVE_EPS,VELOCITY_EPS:VELOCITY_EPS};rubberBandDecay.__workletHash=5745456064385;rubberBandDecay.__initData=_worklet_5745456064385_init_data;return rubberBandDecay;}();","map":{"version":3,"sources":["rubberBandDecay.ts"],"names":["SLOPE_FACTOR","VELOCITY_EPS","DERIVATIVE_EPS","rubberBandDecay","animation","now","config","lastTimestamp","startTimestamp","current","velocity","deltaTime","Math","min","clampIndex","abs","clamp","derivative","v","exp","deceleration","rubberBandFactor","springActive","velocityFactor"],"mappings":"AAAA,YAAY,CAEZ,OAASA,YAAY,CAAEC,YAAY,KAAQ,SAAS,CAEpD,GAAMC,CAAAA,cAAc,CAAG,GAAG,CAAA,IAAA,gCAAA,EAAA,IAAA,g6BAE1B,UAAgBC,CAAAA,eAAeA,CAAxB,eAAA,eAAA,UAAA,gBACLC,SAA8B,CAC9BC,GAAW,CACXC,MAA6B,CACpB,CAET,GAAQC,CAAAA,aAAa,CAAwCH,SAAS,CAA9DG,aAAa,CAAEC,cAAc,CAAwBJ,SAAS,CAA/CI,cAAc,CAAEC,OAAO,CAAeL,SAAS,CAA/BK,OAAO,CAAEC,QAAAA,CAAaN,SAAS,CAAtBM,QAAAA,CAEhD,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,GAAG,CAACR,GAAG,CAAGE,aAAa,CAAE,EAAE,CAAC,CACnD,GAAMO,CAAAA,UAAU,CACdF,IAAI,CAACG,GAAG,CAACN,OAAO,CAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAGJ,IAAI,CAACG,GAAG,CAACN,OAAO,CAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,CACrE,CAAC,CACD,CAAC,CAEP,GAAIC,CAAAA,UAAU,CAAG,CAAC,CAClB,GAAIR,OAAO,CAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,EAAIP,OAAO,CAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,CAAE,CAC1DC,UAAU,CAAGR,OAAO,CAAGH,MAAM,CAACU,KAAK,CAACF,UAAU,CAAC,CACjD,CAEA,GAAMI,CAAAA,CAAC,CACLR,QAAQ,CACNE,IAAI,CAACO,GAAG,CACN,EAAE,CAAC,CAAGb,MAAM,CAACc,YAAY,CAAC,EAAIf,GAAG,CAAGG,cAAc,CAAC,CAAGR,YAAY,CACnE,CACHiB,UAAU,CAAGX,MAAM,CAACe,gBAAgB,CAEtC,GAAIT,IAAI,CAACG,GAAG,CAACE,UAAU,CAAC,CAAGf,cAAc,CAAE,CACzCE,SAAS,CAACkB,YAAY,CAAG,IAAI,CAC/B,CAAC,IAAM,IAAIlB,SAAS,CAACkB,YAAY,CAAE,CACjClB,SAAS,CAACK,OAAO,CAAGH,MAAM,CAACU,KAAK,CAACF,UAAU,CAAC,CAC5C,MAAO,KAAI,CACb,CAAC,IAAM,IAAIF,IAAI,CAACG,GAAG,CAACG,CAAC,CAAC,CAAGjB,YAAY,CAAE,CACrC,MAAO,KAAI,CACb,CAEAG,SAAS,CAACK,OAAO,CAAGA,OAAO,CAAIS,CAAC,CAAGZ,MAAM,CAACiB,cAAc,CAAGZ,SAAS,CAAI,IAAI,CAC5EP,SAAS,CAACM,QAAQ,CAAGQ,CAAC,CACtBd,SAAS,CAACG,aAAa,CAAGF,GAAG,CAC7B,MAAO,MAAK,CACd,CAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,CAjB8DL,YAAY,CAAA,cAAA,CAI7CE,cAAc,CAAA,YAAA,CAKhBD,YAAY,EAAA,eAAA,CAAA,aAAA,eAAA,eAAA,CAAA,UAAA,CAAA,gCAAA,QAAA,eAAA,EA/BhC","sourcesContent":["'use strict';\nimport type { RubberBandDecayConfig, InnerDecayAnimation } from './utils';\nimport { SLOPE_FACTOR, VELOCITY_EPS } from './utils';\n\nconst DERIVATIVE_EPS = 0.1;\n\nexport function rubberBandDecay(\n  animation: InnerDecayAnimation,\n  now: number,\n  config: RubberBandDecayConfig\n): boolean {\n  'worklet';\n  const { lastTimestamp, startTimestamp, current, velocity } = animation;\n\n  const deltaTime = Math.min(now - lastTimestamp, 64);\n  const clampIndex =\n    Math.abs(current - config.clamp[0]) < Math.abs(current - config.clamp[1])\n      ? 0\n      : 1;\n\n  let derivative = 0;\n  if (current < config.clamp[0] || current > config.clamp[1]) {\n    derivative = current - config.clamp[clampIndex];\n  }\n\n  const v =\n    velocity *\n      Math.exp(\n        -(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR\n      ) -\n    derivative * config.rubberBandFactor;\n\n  if (Math.abs(derivative) > DERIVATIVE_EPS) {\n    animation.springActive = true;\n  } else if (animation.springActive) {\n    animation.current = config.clamp[clampIndex];\n    return true;\n  } else if (Math.abs(v) < VELOCITY_EPS) {\n    return true;\n  }\n\n  animation.current = current + (v * config.velocityFactor * deltaTime) / 1000;\n  animation.velocity = v;\n  animation.lastTimestamp = now;\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}