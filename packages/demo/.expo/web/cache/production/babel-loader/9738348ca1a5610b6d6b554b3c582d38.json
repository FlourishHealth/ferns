{"ast":null,"code":"'use strict';var _worklet_14000137896472_init_data={code:\"function checkIfConfigIsValid(config){let errorMessage='';['stiffness','damping','dampingRatio','restDisplacementThreshold','restSpeedThreshold','mass'].forEach(function(prop){const value=config[prop];if(value<=0){errorMessage+=\\\", \\\"+prop+\\\" must be grater than zero but got \\\"+value;}});if(config.duration<0){errorMessage+=\\\", duration can't be negative, got \\\"+config.duration;}if(errorMessage!==''){console.warn('[Reanimated] Invalid spring config'+errorMessage);}return errorMessage==='';}\"};export var checkIfConfigIsValid=function(){var checkIfConfigIsValid=function checkIfConfigIsValid(config){var errorMessage='';['stiffness','damping','dampingRatio','restDisplacementThreshold','restSpeedThreshold','mass'].forEach(function(prop){var value=config[prop];if(value<=0){errorMessage+=`, ${prop} must be grater than zero but got ${value}`;}});if(config.duration<0){errorMessage+=`, duration can't be negative, got ${config.duration}`;}if(errorMessage!==''){console.warn('[Reanimated] Invalid spring config'+errorMessage);}return errorMessage==='';};checkIfConfigIsValid.__closure={};checkIfConfigIsValid.__workletHash=14000137896472;checkIfConfigIsValid.__initData=_worklet_14000137896472_init_data;return checkIfConfigIsValid;}();var _worklet_4019987046823_init_data={code:\"function bisectRoot(_ref){let{min:min,max:max,func:func,maxIterations=20}=_ref;const ACCURACY=0.00005;let idx=maxIterations;let current=(max+min)/2;while(Math.abs(func(current))>ACCURACY&&idx>0){idx-=1;if(func(current)<0){min=current;}else{max=current;}current=(min+max)/2;}return current;}\"};var bisectRoot=function(){var bisectRoot=function bisectRoot(_ref){var min=_ref.min,max=_ref.max,func=_ref.func,_ref$maxIterations=_ref.maxIterations,maxIterations=_ref$maxIterations===void 0?20:_ref$maxIterations;var ACCURACY=0.00005;var idx=maxIterations;var current=(max+min)/2;while(Math.abs(func(current))>ACCURACY&&idx>0){idx-=1;if(func(current)<0){min=current;}else{max=current;}current=(min+max)/2;}return current;};bisectRoot.__closure={};bisectRoot.__workletHash=4019987046823;bisectRoot.__initData=_worklet_4019987046823_init_data;return bisectRoot;}();var _worklet_6575885776023_init_data={code:\"function initialCalculations(){let mass=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let config=arguments.length>1?arguments[1]:undefined;if(config.skipAnimation){return{zeta:0,omega0:0,omega1:0};}if(config.useDuration){const{stiffness:k,dampingRatio:zeta}=config;const omega0=Math.sqrt(k/mass);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta:zeta,omega0:omega0,omega1:omega1};}else{const{damping:c,mass:m,stiffness:k}=config;const zeta=c/(2*Math.sqrt(k*m));const omega0=Math.sqrt(k/m);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta:zeta,omega0:omega0,omega1:omega1};}}\"};export var initialCalculations=function(){var initialCalculations=function initialCalculations(){var mass=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var config=arguments.length>1?arguments[1]:undefined;if(config.skipAnimation){return{zeta:0,omega0:0,omega1:0};}if(config.useDuration){var k=config.stiffness,zeta=config.dampingRatio;var omega0=Math.sqrt(k/mass);var omega1=omega0*Math.sqrt(1-zeta**2);return{zeta:zeta,omega0:omega0,omega1:omega1};}else{var c=config.damping,m=config.mass,_k=config.stiffness;var _zeta=c/(2*Math.sqrt(_k*m));var _omega=Math.sqrt(_k/m);var _omega2=_omega*Math.sqrt(1-_zeta**2);return{zeta:_zeta,omega0:_omega,omega1:_omega2};}};initialCalculations.__closure={};initialCalculations.__workletHash=6575885776023;initialCalculations.__initData=_worklet_6575885776023_init_data;return initialCalculations;}();var _worklet_9616341876352_init_data={code:\"function calculateNewMassToMatchDuration(x0,config,v0){const{bisectRoot}=this.__closure;if(config.skipAnimation){return 0;}const{stiffness:k,dampingRatio:zeta,restSpeedThreshold:threshold,duration:duration}=config;const durationForMass=function(mass){'worklet';const amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);const c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;};return bisectRoot({min:0,max:100,func:durationForMass});}\"};var _worklet_10790008084032_init_data={code:\"function anonymous(mass){const{v0,k,x0,zeta,threshold,duration}=this.__closure;const amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);const c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;}\"};export var calculateNewMassToMatchDuration=function(){var calculateNewMassToMatchDuration=function calculateNewMassToMatchDuration(x0,config,v0){if(config.skipAnimation){return 0;}var k=config.stiffness,zeta=config.dampingRatio,threshold=config.restSpeedThreshold,duration=config.duration;var durationForMass=function(){var anonymous=function anonymous(mass){var amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);var c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;};anonymous.__closure={v0:v0,k:k,x0:x0,zeta:zeta,threshold:threshold,duration:duration};anonymous.__workletHash=10790008084032;anonymous.__initData=_worklet_10790008084032_init_data;return anonymous;}();return bisectRoot({min:0,max:100,func:durationForMass});};calculateNewMassToMatchDuration.__closure={bisectRoot:bisectRoot};calculateNewMassToMatchDuration.__workletHash=9616341876352;calculateNewMassToMatchDuration.__initData=_worklet_9616341876352_init_data;return calculateNewMassToMatchDuration;}();var _worklet_5599334668647_init_data={code:\"function criticallyDampedSpringCalculations(animation,precalculatedValues){const{toValue:toValue}=animation;const{v0:v0,x0:x0,omega0:omega0,t:t}=precalculatedValues;const criticallyDampedEnvelope=Math.exp(-omega0*t);const criticallyDampedPosition=toValue-criticallyDampedEnvelope*(x0+(v0+omega0*x0)*t);const criticallyDampedVelocity=criticallyDampedEnvelope*(v0*(t*omega0-1)+t*x0*omega0*omega0);return{position:criticallyDampedPosition,velocity:criticallyDampedVelocity};}\"};export var criticallyDampedSpringCalculations=function(){var criticallyDampedSpringCalculations=function criticallyDampedSpringCalculations(animation,precalculatedValues){var toValue=animation.toValue;var v0=precalculatedValues.v0,x0=precalculatedValues.x0,omega0=precalculatedValues.omega0,t=precalculatedValues.t;var criticallyDampedEnvelope=Math.exp(-omega0*t);var criticallyDampedPosition=toValue-criticallyDampedEnvelope*(x0+(v0+omega0*x0)*t);var criticallyDampedVelocity=criticallyDampedEnvelope*(v0*(t*omega0-1)+t*x0*omega0*omega0);return{position:criticallyDampedPosition,velocity:criticallyDampedVelocity};};criticallyDampedSpringCalculations.__closure={};criticallyDampedSpringCalculations.__workletHash=5599334668647;criticallyDampedSpringCalculations.__initData=_worklet_5599334668647_init_data;return criticallyDampedSpringCalculations;}();var _worklet_1432967632227_init_data={code:\"function underDampedSpringCalculations(animation,precalculatedValues){const{toValue:toValue,current:current,velocity:velocity}=animation;const{zeta:zeta,t:t,omega0:omega0,omega1:omega1}=precalculatedValues;const v0=-velocity;const x0=toValue-current;const sin1=Math.sin(omega1*t);const cos1=Math.cos(omega1*t);const underDampedEnvelope=Math.exp(-zeta*omega0*t);const underDampedFrag1=underDampedEnvelope*(sin1*((v0+zeta*omega0*x0)/omega1)+x0*cos1);const underDampedPosition=toValue-underDampedFrag1;const underDampedVelocity=zeta*omega0*underDampedFrag1-underDampedEnvelope*(cos1*(v0+zeta*omega0*x0)-omega1*x0*sin1);return{position:underDampedPosition,velocity:underDampedVelocity};}\"};export var underDampedSpringCalculations=function(){var underDampedSpringCalculations=function underDampedSpringCalculations(animation,precalculatedValues){var toValue=animation.toValue,current=animation.current,velocity=animation.velocity;var zeta=precalculatedValues.zeta,t=precalculatedValues.t,omega0=precalculatedValues.omega0,omega1=precalculatedValues.omega1;var v0=-velocity;var x0=toValue-current;var sin1=Math.sin(omega1*t);var cos1=Math.cos(omega1*t);var underDampedEnvelope=Math.exp(-zeta*omega0*t);var underDampedFrag1=underDampedEnvelope*(sin1*((v0+zeta*omega0*x0)/omega1)+x0*cos1);var underDampedPosition=toValue-underDampedFrag1;var underDampedVelocity=zeta*omega0*underDampedFrag1-underDampedEnvelope*(cos1*(v0+zeta*omega0*x0)-omega1*x0*sin1);return{position:underDampedPosition,velocity:underDampedVelocity};};underDampedSpringCalculations.__closure={};underDampedSpringCalculations.__workletHash=1432967632227;underDampedSpringCalculations.__initData=_worklet_1432967632227_init_data;return underDampedSpringCalculations;}();var _worklet_5378298780604_init_data={code:\"function isAnimationTerminatingCalculation(animation,config){const{toValue:toValue,velocity:velocity,startValue:startValue,current:current}=animation;const isOvershooting=config.overshootClamping?current>toValue&&startValue<toValue||current<toValue&&startValue>toValue:false;const isVelocity=Math.abs(velocity)<config.restSpeedThreshold;const isDisplacement=Math.abs(toValue-current)<config.restDisplacementThreshold;return{isOvershooting:isOvershooting,isVelocity:isVelocity,isDisplacement:isDisplacement};}\"};export var isAnimationTerminatingCalculation=function(){var isAnimationTerminatingCalculation=function isAnimationTerminatingCalculation(animation,config){var toValue=animation.toValue,velocity=animation.velocity,startValue=animation.startValue,current=animation.current;var isOvershooting=config.overshootClamping?current>toValue&&startValue<toValue||current<toValue&&startValue>toValue:false;var isVelocity=Math.abs(velocity)<config.restSpeedThreshold;var isDisplacement=Math.abs(toValue-current)<config.restDisplacementThreshold;return{isOvershooting:isOvershooting,isVelocity:isVelocity,isDisplacement:isDisplacement};};isAnimationTerminatingCalculation.__closure={};isAnimationTerminatingCalculation.__workletHash=5378298780604;isAnimationTerminatingCalculation.__initData=_worklet_5378298780604_init_data;return isAnimationTerminatingCalculation;}();","map":{"version":3,"sources":["springUtils.ts"],"names":["checkIfConfigIsValid","config","errorMessage","forEach","prop","value","duration","console","warn","bisectRoot","min","max","func","maxIterations","ACCURACY","idx","current","Math","abs","initialCalculations","mass","skipAnimation","zeta","omega0","omega1","useDuration","stiffness","k","dampingRatio","sqrt","damping","c","m","calculateNewMassToMatchDuration","x0","v0","restSpeedThreshold","threshold","durationForMass","amplitude","exp","log","criticallyDampedSpringCalculations","animation","precalculatedValues","toValue","t","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","position","velocity","underDampedSpringCalculations","sin1","sin","cos1","cos","underDampedEnvelope","underDampedFrag1","underDampedPosition","underDampedVelocity","isAnimationTerminatingCalculation","startValue","isOvershooting","overshootClamping","isVelocity","isDisplacement","restDisplacementThreshold"],"mappings":"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","sourcesContent":["'use strict';\nimport type {\n  Animation,\n  AnimatableValue,\n  Timestamp,\n  ReduceMotion,\n} from '../commonTypes';\n\n/**\n * Spring animation configuration.\n *\n * @param mass - The weight of the spring. Reducing this value makes the animation faster. Defaults to 1.\n * @param damping - How quickly a spring slows down. Higher damping means the spring will come to rest faster. Defaults to 10.\n * @param duration - Length of the animation (in milliseconds). Defaults to 2000.\n * @param dampingRatio - How damped the spring is. Value 1 means the spring is critically damped, and value \\>1 means the spring is overdamped. Defaults to 0.5.\n * @param stiffness - How bouncy the spring is. Defaults to 100.\n * @param velocity - Initial velocity applied to the spring equation. Defaults to 0.\n * @param overshootClamping - Whether a spring can bounce over the `toValue`. Defaults to false.\n * @param restDisplacementThreshold - The displacement below which the spring will snap to toValue without further oscillations. Defaults to 0.01.\n * @param restSpeedThreshold - The speed in pixels per second from which the spring will snap to toValue without further oscillations. Defaults to 2.\n * @param reduceMotion - Determines how the animation responds to the device's reduced motion accessibility setting. Default to `ReduceMotion.System` - {@link ReduceMotion}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withSpring/#config-\n */\nexport type SpringConfig = {\n  stiffness?: number;\n  overshootClamping?: boolean;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n  velocity?: number;\n  reduceMotion?: ReduceMotion;\n} & (\n  | {\n      mass?: number;\n      damping?: number;\n      duration?: never;\n      dampingRatio?: never;\n    }\n  | {\n      mass?: never;\n      damping?: never;\n      duration?: number;\n      dampingRatio?: number;\n    }\n);\n\n// This type contains all the properties from SpringConfig, which are changed to be required, except for optional 'reduceMotion'\nexport type DefaultSpringConfig = {\n  [K in keyof Required<SpringConfig>]: K extends 'reduceMotion'\n    ? Required<SpringConfig>[K] | undefined\n    : Required<SpringConfig>[K];\n};\nexport type WithSpringConfig = SpringConfig;\n\nexport interface SpringConfigInner {\n  useDuration: boolean;\n  skipAnimation: boolean;\n}\n\nexport interface SpringAnimation extends Animation<SpringAnimation> {\n  current: AnimatableValue;\n  toValue: AnimatableValue;\n  velocity: number;\n  lastTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n  startValue: number;\n  zeta: number;\n  omega0: number;\n  omega1: number;\n}\n\nexport interface InnerSpringAnimation\n  extends Omit<SpringAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\nexport function checkIfConfigIsValid(config: DefaultSpringConfig): boolean {\n  'worklet';\n  let errorMessage = '';\n  (\n    [\n      'stiffness',\n      'damping',\n      'dampingRatio',\n      'restDisplacementThreshold',\n      'restSpeedThreshold',\n      'mass',\n    ] as const\n  ).forEach((prop) => {\n    const value = config[prop];\n    if (value <= 0) {\n      errorMessage += `, ${prop} must be grater than zero but got ${value}`;\n    }\n  });\n\n  if (config.duration < 0) {\n    errorMessage += `, duration can't be negative, got ${config.duration}`;\n  }\n\n  if (errorMessage !== '') {\n    console.warn('[Reanimated] Invalid spring config' + errorMessage);\n  }\n\n  return errorMessage === '';\n}\n\nfunction bisectRoot({\n  min,\n  max,\n  func,\n  maxIterations = 20,\n}: {\n  min: number;\n  max: number;\n  func: (x: number) => number;\n  maxIterations?: number;\n}) {\n  'worklet';\n  const ACCURACY = 0.00005;\n  let idx = maxIterations;\n  let current = (max + min) / 2;\n  while (Math.abs(func(current)) > ACCURACY && idx > 0) {\n    idx -= 1;\n\n    if (func(current) < 0) {\n      min = current;\n    } else {\n      max = current;\n    }\n    current = (min + max) / 2;\n  }\n  return current;\n}\n\nexport function initialCalculations(\n  mass = 0,\n  config: DefaultSpringConfig & SpringConfigInner\n): {\n  zeta: number;\n  omega0: number;\n  omega1: number;\n} {\n  'worklet';\n\n  if (config.skipAnimation) {\n    return { zeta: 0, omega0: 0, omega1: 0 };\n  }\n\n  if (config.useDuration) {\n    const { stiffness: k, dampingRatio: zeta } = config;\n\n    /** omega0 and omega1 denote angular frequency and natural angular frequency, see this link for formulas:\n     *  https://courses.lumenlearning.com/suny-osuniversityphysics/chapter/15-5-damped-oscillations/\n     */\n    const omega0 = Math.sqrt(k / mass);\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n\n    return { zeta, omega0, omega1 };\n  } else {\n    const { damping: c, mass: m, stiffness: k } = config;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n    return { zeta, omega0, omega1 };\n  }\n}\n\nexport function calculateNewMassToMatchDuration(\n  x0: number,\n  config: DefaultSpringConfig & SpringConfigInner,\n  v0: number\n) {\n  'worklet';\n  if (config.skipAnimation) {\n    return 0;\n  }\n\n  /** Use this formula: https://phys.libretexts.org/Bookshelves/University_Physics/Book%3A_University_Physics_(OpenStax)/Book%3A_University_Physics_I_-_Mechanics_Sound_Oscillations_and_Waves_(OpenStax)/15%3A_Oscillations/15.06%3A_Damped_Oscillations\n       * to find the asymptote and estimate the damping that gives us the expected duration \n\n            ⎛ ⎛ c⎞           ⎞           \n            ⎜-⎜──⎟ ⋅ duration⎟           \n            ⎝ ⎝2m⎠           ⎠           \n       A ⋅ e                   = threshold\n\n \n      Amplitude calculated using \"Conservation of energy\"\n                       _________________\n                      ╱      2         2\n                     ╱ m ⋅ v0  + k ⋅ x0 \n      amplitude =   ╱  ─────────────────\n                  ╲╱           k        \n\n      And replace mass with damping ratio which is provided: m = (c^2)/(4 * k * zeta^2)   \n      */\n  const {\n    stiffness: k,\n    dampingRatio: zeta,\n    restSpeedThreshold: threshold,\n    duration,\n  } = config;\n\n  const durationForMass = (mass: number) => {\n    'worklet';\n    const amplitude =\n      (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n    const c = zeta * 2 * Math.sqrt(k * mass);\n    return (\n      1000 * ((-2 * mass) / c) * Math.log((threshold * 0.01) / amplitude) -\n      duration\n    );\n  };\n\n  // Bisection turns out to be much faster than Newton's method in our case\n  return bisectRoot({ min: 0, max: 100, func: durationForMass });\n}\n\nexport function criticallyDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    v0: number;\n    x0: number;\n    omega0: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue } = animation;\n\n  const { v0, x0, omega0, t } = precalculatedValues;\n\n  const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n  const criticallyDampedPosition =\n    toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n  const criticallyDampedVelocity =\n    criticallyDampedEnvelope *\n    (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n  return {\n    position: criticallyDampedPosition,\n    velocity: criticallyDampedVelocity,\n  };\n}\n\nexport function underDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    zeta: number;\n    v0: number;\n    x0: number;\n    omega0: number;\n    omega1: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue, current, velocity } = animation;\n\n  const { zeta, t, omega0, omega1 } = precalculatedValues;\n\n  const v0 = -velocity;\n  const x0 = toValue - current;\n\n  const sin1 = Math.sin(omega1 * t);\n  const cos1 = Math.cos(omega1 * t);\n\n  // under damped\n  const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n  const underDampedFrag1 =\n    underDampedEnvelope *\n    (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n  const underDampedPosition = toValue - underDampedFrag1;\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity =\n    zeta * omega0 * underDampedFrag1 -\n    underDampedEnvelope *\n      (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n  return { position: underDampedPosition, velocity: underDampedVelocity };\n}\n\nexport function isAnimationTerminatingCalculation(\n  animation: InnerSpringAnimation,\n  config: DefaultSpringConfig\n): {\n  isOvershooting: boolean;\n  isVelocity: boolean;\n  isDisplacement: boolean;\n} {\n  'worklet';\n  const { toValue, velocity, startValue, current } = animation;\n\n  const isOvershooting = config.overshootClamping\n    ? (current > toValue && startValue < toValue) ||\n      (current < toValue && startValue > toValue)\n    : false;\n\n  const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n  const isDisplacement =\n    Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n  return { isOvershooting, isVelocity, isDisplacement };\n}\n"]},"metadata":{},"sourceType":"module"}