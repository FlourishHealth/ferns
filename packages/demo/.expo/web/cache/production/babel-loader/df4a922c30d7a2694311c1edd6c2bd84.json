{"ast":null,"code":"import*as React from'react';import*as ReactNativeWeb from\"react-native-web/dist/index\";var Option=function Option(props){return ReactNativeWeb.unstable_createElement('option',props);};export default function PickerItem(_ref){var color=_ref.color,label=_ref.label,testID=_ref.testID,value=_ref.value,_ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled;return React.createElement(Option,{disabled:enabled===false?true:undefined,style:{color:color},testID:testID,value:value,label:label},label);}","map":{"version":3,"sources":["PickerItem.js"],"names":["React","ReactNativeWeb","Option","props","unstable_createElement","PickerItem","color","label","testID","value","enabled","undefined"],"mappings":"AASA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAAA,MACO,GAAKC,CAAAA,cAAZ,mCAUA,GAAMC,CAAAA,MAAM,CAAIC,QAAVD,CAAAA,MAAM,CAAIC,KAAD,QACbF,CAAAA,cAAc,CAACG,sBAAfH,CAAsC,QAAtCA,CAAgDE,KAAhDF,CADF,GAOA,cAAe,SAASI,CAAAA,UAAT,CAAA,IAAA,CAMO,IALpBC,CAAAA,KADiC,CAAA,IAAA,CACjCA,KADiC,CAEjCC,KAFiC,CAAA,IAAA,CAEjCA,KAFiC,CAGjCC,MAHiC,CAAA,IAAA,CAGjCA,MAHiC,CAIjCC,KAJiC,CAAA,IAAA,CAIjCA,KAJiC,CAAA,YAAA,CAAA,IAAA,CAKjCC,OAAO,CAAPA,OAAO,CAAA,YAAA,UAAG,IAAA,CAAA,YAAA,CAEV,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,CACE,QAAQ,CAAEA,OAAO,GAAK,KAAZA,CAAoB,IAApBA,CAA2BC,SADvC,CAEE,KAAK,CAAE,CAACL,KAAAA,CAAAA,KAAD,CAFT,CAGE,MAAM,CAAEE,MAHV,CAIE,KAAK,CAAEC,KAJT,CAKE,KAAK,CAAEF,KALT,CAAA,CAMGA,KANH,CADF,CAUD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * @flow\n *\n */\n\nimport type {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nimport * as React from 'react';\nimport * as ReactNativeWeb from 'react-native-web';\n\ntype Props = {\n  color?: ColorValue,\n  label: string,\n  testID?: string,\n  enabled?: boolean,\n  value?: number | string,\n};\n\nconst Option = (props: any) =>\n  ReactNativeWeb.unstable_createElement('option', props);\n\n/**\n * PickerItem Component for React Native Web\n * @returns\n */\nexport default function PickerItem({\n  color,\n  label,\n  testID,\n  value,\n  enabled = true,\n}: Props): React.Node {\n  return (\n    <Option\n      disabled={enabled === false ? true : undefined}\n      style={{color}}\n      testID={testID}\n      value={value}\n      label={label}>\n      {label}\n    </Option>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}