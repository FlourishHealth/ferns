{"ast":null,"code":"import{FontAwesome5}from\"@expo/vector-icons\";import React,{useContext}from\"react\";import{iconSizeToNumber}from\"./Common\";import{ThemeContext}from\"./Theme\";export function initIcons(){console.debug(\"Initializing icons\");}export var Icon=function Icon(_ref){var color=_ref.color,size=_ref.size,name=_ref.name,prefix=_ref.prefix,testID=_ref.testID;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var iconColor=theme[color||\"primary\"];var iconSize=iconSizeToNumber(size);return React.createElement(FontAwesome5,{color:iconColor,name:name,regular:prefix===\"far\",size:iconSize,solid:!prefix||prefix===\"fas\",testID:testID});};","map":{"version":3,"sources":["../src/Icon.tsx"],"names":[],"mappings":"AAAA,OAAQ,YAAY,KAAO,oBAAoB,CAC/C,MAAO,CAAA,KAAK,EAAG,UAAU,KAAO,OAAO,CAEvC,OAAmB,gBAAgB,KAAO,UAAU,CACpD,OAAQ,YAAY,KAAO,SAAS,CAEpC,MAAM,SAAU,CAAA,SAAS,CAAA,CAAA,CACvB,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CACrC,CAIA,MAAO,IAAM,CAAA,IAAI,CAAG,QAAP,CAAA,IAAI,CAAA,IAAA,CAA0E,IAArE,CAAA,KAAK,CAAA,IAAA,CAAL,KAAK,CAAE,IAAI,CAAA,IAAA,CAAJ,IAAI,CAAE,IAAI,CAAA,IAAA,CAAJ,IAAI,CAAE,MAAM,CAAA,IAAA,CAAN,MAAM,CAAE,MAAM,CAAA,IAAA,CAAN,MAAM,CACrD,IAAA,WAAA,CAAgB,UAAU,CAAC,YAAY,CAAC,CAAjC,KAAK,CAAA,WAAA,CAAL,KAAK,CACZ,GAAM,CAAA,SAAS,CAAG,KAAK,CAAC,KAAK,EAAI,SAAS,CAAC,CAC3C,GAAM,CAAA,QAAQ,CAAG,gBAAgB,CAAC,IAAI,CAAC,CACvC,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAY,CAAA,CACX,KAAK,CAAE,SAAS,CAChB,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,MAAM,GAAK,KAAK,CACzB,IAAI,CAAE,QAAQ,CACd,KAAK,CAAE,CAAC,MAAM,EAAI,MAAM,GAAK,KAAK,CAClC,MAAM,CAAE,MAAM,CAAA,CACd,CAEN,CAAC","sourceRoot":"","sourcesContent":["import { FontAwesome5 } from \"@expo/vector-icons\";\nimport React, { useContext } from \"react\";\nimport { iconSizeToNumber } from \"./Common\";\nimport { ThemeContext } from \"./Theme\";\nexport function initIcons() {\n    console.debug(\"Initializing icons\");\n}\n// TODO: Update <Icon /> to be closer to Expo's Vector Icon, letting multiple icon packs be used,\n// etc.\nexport const Icon = ({ color, size, name, prefix, testID }) => {\n    const { theme } = useContext(ThemeContext);\n    const iconColor = theme[color || \"primary\"];\n    const iconSize = iconSizeToNumber(size);\n    return (React.createElement(FontAwesome5, { color: iconColor, name: name, regular: prefix === \"far\", size: iconSize, solid: !prefix || prefix === \"fas\", testID: testID }));\n};\n//# sourceMappingURL=Icon.js.map"]},"metadata":{},"sourceType":"module"}