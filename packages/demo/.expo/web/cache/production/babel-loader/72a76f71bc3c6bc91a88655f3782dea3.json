{"ast":null,"code":"'use strict';import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{useEffect,useRef}from'react';import{initialUpdaterRun}from'../animation';import{makeMutable,startMapper,stopMapper}from'../core';import{shouldBeUseWeb}from'../PlatformChecker';var _worklet_4899742148771_init_data={code:\"function anonymous(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}\"};export function useDerivedValue(updater,dependencies){var _updater$__closure;var initRef=useRef(null);var inputs=Object.values((_updater$__closure=updater.__closure)!=null?_updater$__closure:{});if(shouldBeUseWeb()){var _dependencies;if(!inputs.length&&(_dependencies=dependencies)!==null&&_dependencies!==void 0&&_dependencies.length){inputs=dependencies;}}if(dependencies===undefined){dependencies=[].concat(_toConsumableArray(inputs),[updater.__workletHash]);}else{dependencies.push(updater.__workletHash);}if(initRef.current===null){initRef.current=makeMutable(initialUpdaterRun(updater));}var sharedValue=initRef.current;useEffect(function(){var fun=function(){var anonymous=function anonymous(){sharedValue.value=updater();};anonymous.__closure={sharedValue:sharedValue,updater:updater};anonymous.__workletHash=4899742148771;anonymous.__initData=_worklet_4899742148771_init_data;return anonymous;}();var mapperId=startMapper(fun,inputs,[sharedValue]);return function(){stopMapper(mapperId);};},dependencies);useEffect(function(){return function(){initRef.current=null;};},[]);return sharedValue;}","map":{"version":3,"sources":["useDerivedValue.ts"],"names":["useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","shouldBeUseWeb","useDerivedValue","updater","dependencies","initRef","inputs","Object","values","__closure","length","undefined","__workletHash","push","current","sharedValue","fun","value","mapperId"],"mappings":"AAAA,YAAY,CAAA,OAAA,kBAAA,gDACZ,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,OAASC,iBAAiB,KAAQ,cAAc,CAEhD,OAASC,WAAW,CAAEC,WAAW,CAAEC,UAAU,KAAQ,SAAS,CAE9D,OAASC,cAAc,KAAQ,oBAAoB,CAAA,IAAA,gCAAA,EAAA,IAAA,iGAkBnD,MAAO,SAASC,CAAAA,eAAeA,CAC7BC,OAAmC,CACnCC,YAA6B,CACR,KAAA,kBAAA,CACrB,GAAMC,CAAAA,OAAO,CAAGT,MAAM,CAA4B,IAAI,CAAC,CACvD,GAAIU,CAAAA,MAAM,CAAGC,MAAM,CAACC,MAAM,EAAA,kBAAA,CAACL,OAAO,CAACM,SAAS,QAAA,kBAAA,CAAI,CAAC,CAAC,CAAC,CACnD,GAAIR,cAAc,CAAA,CAAE,CAAE,CAAA,GAAA,CAAA,aAAA,CACpB,GAAI,CAACK,MAAM,CAACI,MAAM,EAAA,CAAA,aAAA,CAAIN,YAAY,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,EAAZA,aAAAA,CAAcM,MAAM,CAAE,CAE1CJ,MAAM,CAAGF,YAAY,CACvB,CACF,CAGA,GAAIA,YAAY,GAAKO,SAAS,CAAE,CAC9BP,YAAY,IAAA,MAAA,CAAA,kBAAA,CAAOE,MAAM,GAAEH,OAAO,CAACS,aAAa,EAAC,CACnD,CAAC,IAAM,CACLR,YAAY,CAACS,IAAI,CAACV,OAAO,CAACS,aAAa,CAAC,CAC1C,CAEA,GAAIP,OAAO,CAACS,OAAO,GAAK,IAAI,CAAE,CAC5BT,OAAO,CAACS,OAAO,CAAGhB,WAAW,CAACD,iBAAiB,CAACM,OAAO,CAAC,CAAC,CAC3D,CAGA,GAAMY,CAAAA,WAA+B,CAAGV,OAAO,CAACS,OAAQ,CAExDnB,SAAS,CAAC,UAAM,CACd,GAAMqB,CAAAA,GAAG,CAAGA,eAAAA,SAAAA,UAAAA,UAAAA,CAAM,CAEhBD,WAAW,CAACE,KAAK,CAAGd,OAAO,CAAA,CAAE,CAC/B,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,WAAA,CADCY,WAAW,CAAA,OAAA,CAASZ,OAAO,EAAA,SAAA,CAAA,aAAA,eAAA,SAAA,CAAA,UAAA,CAAA,gCAAA,QAAA,SAAA,EAFjBa,EAGX,CACD,GAAME,CAAAA,QAAQ,CAAGnB,WAAW,CAACiB,GAAG,CAAEV,MAAM,CAAE,CAACS,WAAW,CAAC,CAAC,CACxD,MAAO,WAAM,CACXf,UAAU,CAACkB,QAAQ,CAAC,CACtB,CAAC,CACH,CAAC,CAAEd,YAAY,CAAC,CAEhBT,SAAS,CAAC,UAAM,CACd,MAAO,WAAM,CACXU,OAAO,CAACS,OAAO,CAAG,IAAI,CACxB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAOC,CAAAA,WAAW,CACpB","sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\nexport type DerivedValue<Value> = Readonly<SharedValue<Value>>;\n\n/**\n * Lets you create new shared values based on existing ones while keeping them reactive.\n *\n * @param updater - A function called whenever at least one of the shared values or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const sharedValue: SharedValue<Value> = initRef.current!;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  return sharedValue;\n}\n"]},"metadata":{},"sourceType":"module"}