{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useEffect,useRef,useState}from\"react\";import ToastContext from\"./context\";import Toast from\"../toast-container\";export var GlobalToast;var ToastProvider=function ToastProvider(_ref){var children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var toastRef=useRef(null);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),refState=_useState2[0],setRefState=_useState2[1];useEffect(function(){setRefState(toastRef.current);GlobalToast=toastRef.current;},[]);return React.createElement(ToastContext.Provider,{value:refState},children,React.createElement(Toast,_extends({ref:toastRef},props)));};export default ToastProvider;","map":{"version":3,"sources":["provider.tsx"],"names":["React","useEffect","useRef","useState","ToastContext","Toast","GlobalToast","ToastProvider","children","props","toastRef","refState","setRefState","current"],"mappings":"wcAAA,MAAOA,CAAAA,KAAP,EAAoBC,SAApB,CAA+BC,MAA/B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,YAAP,KAAwC,WAAxC,CACA,MAAOC,CAAAA,KAAP,KAA6B,oBAA7B,CAMA,MAAO,IAAIC,CAAAA,WAAJ,CAEP,GAAMC,CAAAA,aAAoC,CAAG,QAAvCA,CAAAA,aAAoC,CAAA,IAAA,CAA+B,IAAzBC,CAAAA,QAAF,CAAA,IAAA,CAAEA,QAAF,CAAeC,KAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAC3D,GAAMC,CAAAA,QAAQ,CAAGR,MAAM,CAAC,IAAD,CAAvB,CACA,IAAA,SAAA,CAAgCC,QAAQ,CAAC,CAAA,CAAD,CAAxC,CAAA,UAAA,CAAA,cAAA,CAAA,SAAA,IAAOQ,QAAD,CAAA,UAAA,IAAWC,WAAX,CAAA,UAAA,IAENX,SAAS,CAAC,UAAM,CACdW,WAAW,CAACF,QAAQ,CAACG,OAAV,CAAXD,CACAN,WAAW,CAAGI,QAAQ,CAACG,OAAvBP,CACD,CAHQ,CAGN,EAHM,CAATL,CAKA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAD,CAAc,QAAd,CAAA,CAAuB,KAAK,CAAEU,QAA9B,CAAA,CACGH,QADH,CAEE,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,CAAA,CAAO,GAAG,CAAEE,QAAZ,CAAA,CAA0BD,KAA1B,CAAA,CAFF,CADF,CAMD,CAfD,CAiBA,cAAeF,CAAAA,aAAf","sourcesContent":["import React, { FC, useEffect, useRef, useState } from \"react\";\r\nimport ToastContext, { ToastType } from \"./context\";\r\nimport Toast, { Props } from \"../toast-container\";\r\n\r\ntype PropsWithChildren = Props & {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport let GlobalToast: ToastType\r\n\r\nconst ToastProvider: FC<PropsWithChildren> = ({ children, ...props }) => {\r\n  const toastRef = useRef(null);\r\n  const [refState, setRefState] = useState({});\r\n\r\n  useEffect(() => {\r\n    setRefState(toastRef.current as any);\r\n    GlobalToast = toastRef.current as any\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={refState as any}>\r\n      {children}\r\n      <Toast ref={toastRef} {...props} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToastProvider;\r\n"]},"metadata":{},"sourceType":"module"}