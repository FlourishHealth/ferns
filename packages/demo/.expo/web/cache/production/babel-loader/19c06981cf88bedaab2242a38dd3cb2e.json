{"ast":null,"code":"'use strict';import NativeReanimatedModule from'./NativeReanimated';import{nativeShouldBeMock,isWeb,shouldBeUseWeb,isFabric}from'./PlatformChecker';import{makeShareableCloneRecursive}from'./shareables';import{initializeUIRuntime}from'./initializers';import{SensorContainer}from'./SensorContainer';export{startMapper,stopMapper}from'./mappers';export{runOnJS,runOnUI}from'./threads';export{createWorkletRuntime,runOnRuntime}from'./runtimes';export{makeShareable,makeShareableCloneRecursive}from'./shareables';export{makeMutable,makeRemote}from'./mutables';var IS_FABRIC=isFabric();export var isReanimated3=function isReanimated3(){return true;};export var isConfigured=isReanimated3;if(shouldBeUseWeb()){global._WORKLET=false;global._log=console.log;global._getAnimationTimestamp=function(){return performance.now();};}export function getViewProp(viewTag,propName){if(IS_FABRIC){throw new Error('[Reanimated] `getViewProp` is not supported on Fabric yet.');}return new Promise(function(resolve,reject){return NativeReanimatedModule.getViewProp(viewTag,propName,function(result){if(typeof result==='string'&&result.substr(0,6)==='error:'){reject(result);}else{resolve(result);}});});}function getSensorContainer(){if(!global.__sensorContainer){global.__sensorContainer=new SensorContainer();}return global.__sensorContainer;}var _worklet_10296548464238_init_data={code:\"function handleAndFlushAnimationFrame(eventTimestamp,event){const{eventHandler}=this.__closure;global.__frameTimestamp=eventTimestamp;eventHandler(event);global.__flushAnimationFrame(eventTimestamp);global.__frameTimestamp=undefined;}\"};export function registerEventHandler(eventHandler,eventName){var emitterReactTag=arguments.length>2&&arguments[2]!==undefined?arguments[2]:-1;var handleAndFlushAnimationFrame=function(){var handleAndFlushAnimationFrame=function handleAndFlushAnimationFrame(eventTimestamp,event){global.__frameTimestamp=eventTimestamp;eventHandler(event);global.__flushAnimationFrame(eventTimestamp);global.__frameTimestamp=undefined;};handleAndFlushAnimationFrame.__closure={eventHandler:eventHandler};handleAndFlushAnimationFrame.__workletHash=10296548464238;handleAndFlushAnimationFrame.__initData=_worklet_10296548464238_init_data;return handleAndFlushAnimationFrame;}();return NativeReanimatedModule.registerEventHandler(makeShareableCloneRecursive(handleAndFlushAnimationFrame),eventName,emitterReactTag);}export function unregisterEventHandler(id){return NativeReanimatedModule.unregisterEventHandler(id);}var _worklet_6547589651237_init_data={code:\"function handleAndFlushAnimationFrame(state,height){const{eventHandler}=this.__closure;const now=_getAnimationTimestamp();global.__frameTimestamp=now;eventHandler(state,height);global.__flushAnimationFrame(now);global.__frameTimestamp=undefined;}\"};export function subscribeForKeyboardEvents(eventHandler,options){var _options$isStatusBarT;var handleAndFlushAnimationFrame=function(){var handleAndFlushAnimationFrame=function handleAndFlushAnimationFrame(state,height){var now=_getAnimationTimestamp();global.__frameTimestamp=now;eventHandler(state,height);global.__flushAnimationFrame(now);global.__frameTimestamp=undefined;};handleAndFlushAnimationFrame.__closure={eventHandler:eventHandler};handleAndFlushAnimationFrame.__workletHash=6547589651237;handleAndFlushAnimationFrame.__initData=_worklet_6547589651237_init_data;return handleAndFlushAnimationFrame;}();return NativeReanimatedModule.subscribeForKeyboardEvents(makeShareableCloneRecursive(handleAndFlushAnimationFrame),(_options$isStatusBarT=options.isStatusBarTranslucentAndroid)!=null?_options$isStatusBarT:false);}export function unsubscribeFromKeyboardEvents(listenerId){return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);}export function registerSensor(sensorType,config,eventHandler){var sensorContainer=getSensorContainer();return sensorContainer.registerSensor(sensorType,config,makeShareableCloneRecursive(eventHandler));}export function initializeSensor(sensorType,config){var sensorContainer=getSensorContainer();return sensorContainer.initializeSensor(sensorType,config);}export function unregisterSensor(sensorId){var sensorContainer=getSensorContainer();return sensorContainer.unregisterSensor(sensorId);}if(!isWeb()){initializeUIRuntime();}var featuresConfig={enableLayoutAnimations:false,setByUser:false};export function enableLayoutAnimations(flag){var isCallByUser=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(isCallByUser){featuresConfig={enableLayoutAnimations:flag,setByUser:true};NativeReanimatedModule.enableLayoutAnimations(flag);}else if(!featuresConfig.setByUser&&featuresConfig.enableLayoutAnimations!==flag){featuresConfig.enableLayoutAnimations=flag;NativeReanimatedModule.enableLayoutAnimations(flag);}}export function configureLayoutAnimations(viewTag,type,config){var sharedTransitionTag=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'';NativeReanimatedModule.configureLayoutAnimation(viewTag,type,sharedTransitionTag,makeShareableCloneRecursive(config));}export function setShouldAnimateExitingForTag(viewTag,shouldAnimate){NativeReanimatedModule.setShouldAnimateExitingForTag(viewTag,shouldAnimate);}export function jsiConfigureProps(uiProps,nativeProps){if(!nativeShouldBeMock()){NativeReanimatedModule.configureProps(uiProps,nativeProps);}}","map":{"version":3,"sources":["core.ts"],"names":["NativeReanimatedModule","nativeShouldBeMock","isWeb","shouldBeUseWeb","isFabric","makeShareableCloneRecursive","initializeUIRuntime","SensorContainer","startMapper","stopMapper","runOnJS","runOnUI","createWorkletRuntime","runOnRuntime","makeShareable","makeMutable","makeRemote","IS_FABRIC","isReanimated3","isConfigured","global","_WORKLET","_log","console","log","_getAnimationTimestamp","performance","now","getViewProp","viewTag","propName","Error","Promise","resolve","reject","result","substr","getSensorContainer","__sensorContainer","registerEventHandler","eventHandler","eventName","emitterReactTag","handleAndFlushAnimationFrame","eventTimestamp","event","__frameTimestamp","__flushAnimationFrame","undefined","unregisterEventHandler","id","subscribeForKeyboardEvents","options","state","height","isStatusBarTranslucentAndroid","unsubscribeFromKeyboardEvents","listenerId","registerSensor","sensorType","config","sensorContainer","initializeSensor","unregisterSensor","sensorId","featuresConfig","enableLayoutAnimations","setByUser","flag","isCallByUser","configureLayoutAnimations","type","sharedTransitionTag","configureLayoutAnimation","setShouldAnimateExitingForTag","shouldAnimate","jsiConfigureProps","uiProps","nativeProps","configureProps"],"mappings":"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","sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport {\n  nativeShouldBeMock,\n  isWeb,\n  shouldBeUseWeb,\n  isFabric,\n} from './PlatformChecker';\nimport type {\n  AnimatedKeyboardOptions,\n  SensorConfig,\n  SensorType,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n} from './commonTypes';\nimport { makeShareableCloneRecursive } from './shareables';\nimport type {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './layoutReanimation';\nimport { initializeUIRuntime } from './initializers';\nimport type {\n  ProgressAnimationCallback,\n  SharedTransitionAnimationsFunction,\n} from './layoutReanimation/animationBuilder/commonTypes';\nimport { SensorContainer } from './SensorContainer';\n\nexport { startMapper, stopMapper } from './mappers';\nexport { runOnJS, runOnUI } from './threads';\nexport { createWorkletRuntime, runOnRuntime } from './runtimes';\nexport type { WorkletRuntime } from './runtimes';\nexport { makeShareable, makeShareableCloneRecursive } from './shareables';\nexport { makeMutable, makeRemote } from './mutables';\n\nconst IS_FABRIC = isFabric();\n\n/**\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2 or 1\n */\nexport const isReanimated3 = () => true;\n\n// Superseded by check in `/src/threads.ts`.\n// Used by `react-navigation` to detect if using Reanimated 2 or 3.\n/**\n * @deprecated This function was superseded by other checks.\n * We keep it here for backward compatibility reasons.\n * If you need to check if you are using Reanimated 3 or Reanimated 2\n * please use `isReanimated3` function instead.\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2\n */\nexport const isConfigured = isReanimated3;\n\n// this is for web implementation\nif (shouldBeUseWeb()) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = () => performance.now();\n}\n\nexport function getViewProp<T>(viewTag: number, propName: string): Promise<T> {\n  if (IS_FABRIC) {\n    throw new Error(\n      '[Reanimated] `getViewProp` is not supported on Fabric yet.'\n    );\n  }\n\n  return new Promise((resolve, reject) => {\n    return NativeReanimatedModule.getViewProp(\n      viewTag,\n      propName,\n      (result: T) => {\n        if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n          reject(result);\n        } else {\n          resolve(result);\n        }\n      }\n    );\n  });\n}\n\nfunction getSensorContainer(): SensorContainer {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\n\nexport function registerEventHandler<T>(\n  eventHandler: (event: T) => void,\n  eventName: string,\n  emitterReactTag = -1\n): number {\n  function handleAndFlushAnimationFrame(eventTimestamp: number, event: T) {\n    'worklet';\n    global.__frameTimestamp = eventTimestamp;\n    eventHandler(event);\n    global.__flushAnimationFrame(eventTimestamp);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.registerEventHandler(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    eventName,\n    emitterReactTag\n  );\n}\n\nexport function unregisterEventHandler(id: number): void {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\n\nexport function subscribeForKeyboardEvents(\n  eventHandler: (state: number, height: number) => void,\n  options: AnimatedKeyboardOptions\n): number {\n  // TODO: this should really go with the same code path as other events, that is\n  // via registerEventHandler. For now we are copying the code from there.\n  function handleAndFlushAnimationFrame(state: number, height: number) {\n    'worklet';\n    const now = _getAnimationTimestamp();\n    global.__frameTimestamp = now;\n    eventHandler(state, height);\n    global.__flushAnimationFrame(now);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.subscribeForKeyboardEvents(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    options.isStatusBarTranslucentAndroid ?? false\n  );\n}\n\nexport function unsubscribeFromKeyboardEvents(listenerId: number): void {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\n\nexport function registerSensor(\n  sensorType: SensorType,\n  config: SensorConfig,\n  eventHandler: (\n    data: Value3D | ValueRotation,\n    orientationDegrees: number\n  ) => void\n): number {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(\n    sensorType,\n    config,\n    makeShareableCloneRecursive(eventHandler)\n  );\n}\n\nexport function initializeSensor(\n  sensorType: SensorType,\n  config: SensorConfig\n): SharedValue<Value3D | ValueRotation> {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\n\nexport function unregisterSensor(sensorId: number): void {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\nif (!isWeb()) {\n  initializeUIRuntime();\n}\n\ntype FeaturesConfig = {\n  enableLayoutAnimations: boolean;\n  setByUser: boolean;\n};\n\nlet featuresConfig: FeaturesConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false,\n};\n\nexport function enableLayoutAnimations(\n  flag: boolean,\n  isCallByUser = true\n): void {\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true,\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (\n    !featuresConfig.setByUser &&\n    featuresConfig.enableLayoutAnimations !== flag\n  ) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\n\nexport function configureLayoutAnimations(\n  viewTag: number | HTMLElement,\n  type: LayoutAnimationType,\n  config:\n    | LayoutAnimationFunction\n    | Keyframe\n    | SharedTransitionAnimationsFunction\n    | ProgressAnimationCallback,\n  sharedTransitionTag = ''\n): void {\n  NativeReanimatedModule.configureLayoutAnimation(\n    viewTag as number, // On web this function is no-op, therefore we can cast viewTag to number\n    type,\n    sharedTransitionTag,\n    makeShareableCloneRecursive(config)\n  );\n}\n\nexport function setShouldAnimateExitingForTag(\n  viewTag: number | HTMLElement,\n  shouldAnimate: boolean\n) {\n  NativeReanimatedModule.setShouldAnimateExitingForTag(\n    viewTag as number,\n    shouldAnimate\n  );\n}\n\nexport function jsiConfigureProps(\n  uiProps: string[],\n  nativeProps: string[]\n): void {\n  if (!nativeShouldBeMock()) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}