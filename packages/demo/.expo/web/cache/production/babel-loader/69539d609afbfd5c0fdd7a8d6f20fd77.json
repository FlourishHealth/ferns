{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import React from\"react\";import{Box}from\"./Box\";import{CheckBox}from\"./CheckBox\";import{USSTATESLIST}from\"./Constants\";import{CustomSelect}from\"./CustomSelect\";import{FieldWithLabels}from\"./FieldWithLabels\";import{SelectList}from\"./SelectList\";import{Signature}from\"./Signature\";import{Switch}from\"./Switch\";import{Text}from\"./Text\";import{TextArea}from\"./TextArea\";import{TextField}from\"./TextField\";import{UnifiedAddressAutoCompleteField}from\"./UnifiedAddressAutoComplete\";export var Field=function Field(_ref){var name=_ref.name,label=_ref.label,labelColor=_ref.labelColor,height=_ref.height,type=_ref.type,rows=_ref.rows,value=_ref.value,_onChange=_ref.onChange,_onBlur=_ref.onBlur,onStart=_ref.onStart,onEnd=_ref.onEnd,options=_ref.options,placeholder=_ref.placeholder,disabled=_ref.disabled,errorMessage=_ref.errorMessage,errorMessageColor=_ref.errorMessageColor,helperText=_ref.helperText,helperTextColor=_ref.helperTextColor,_ref$includeCounty=_ref.includeCounty,includeCounty=_ref$includeCounty===void 0?false:_ref$includeCounty,googleMapsApiKey=_ref.googleMapsApiKey,googlePlacesMobileStyles=_ref.googlePlacesMobileStyles,testID=_ref.testID,transformValue=_ref.transformValue;var _handleAddressChange=function handleAddressChange(field,newValue){_onChange(Object.assign(Object.assign({},value),_defineProperty({},field,newValue)));_onBlur&&_onBlur(Object.assign(Object.assign({},value),_defineProperty({},field,newValue)));};var _handleAutoCompleteChange=function handleAutoCompleteChange(newValue){_onChange(Object.assign(Object.assign({},value),newValue));};var handleSwitchChange=function handleSwitchChange(switchValue){_onChange(switchValue);_onBlur&&_onBlur(switchValue);};var renderField=function renderField(){if(type===\"select\"){if(!options){console.error(\"Field with type=select require options\");return undefined;}return React.createElement(SelectList,{disabled:disabled,id:name,options:options,placeholder:placeholder,testID:testID,value:value,onChange:function onChange(result){_onChange(result);_onBlur&&_onBlur(result);}});}else if(type===\"multiselect\"){if(options===undefined){console.error(\"Field with type=multiselect require options\");return undefined;}return React.createElement(Box,{width:\"100%\"},options.map(function(o){return React.createElement(Box,{key:o.label+o.value,alignItems:\"center\",direction:\"row\",justifyContent:\"between\",width:\"100%\"},React.createElement(Box,{flex:\"shrink\",marginRight:2},React.createElement(Text,{weight:\"bold\"},o.label)),React.createElement(Box,null,React.createElement(CheckBox,{key:o.label+o.value,checked:(value!==null&&value!==void 0?value:[]).includes(o.value),disabled:disabled,name:name,size:\"sm\",testID:`${testID}-${o.value}`,onChange:function onChange(result){var newValue;if(result.value){if(value.includes(o.value)){console.warn(`Tried to add value that already exists: ${o.value}`);return;}newValue=[].concat(_toConsumableArray(value),[o.value]);}else{newValue=value.filter(function(v){return v!==o.value;});}_onChange(newValue);_onBlur&&_onBlur(newValue);}})));}));}else if(type===\"textarea\"){return React.createElement(TextArea,{disabled:disabled,height:height!==null&&height!==void 0?height:100,id:name,placeholder:Boolean(value)?\"\":placeholder,rows:rows,testID:testID,value:String(value),onBlur:_onBlur,onChange:function onChange(result){return _onChange(result.value);}});}else if(type===\"boolean\"){return React.createElement(Switch,{disabled:disabled,id:name,name:name,switched:Boolean(value),testID:testID,onChange:function onChange(result){handleSwitchChange(result);}});}else if(type&&[\"date\",\"time\",\"datetime\"].includes(type)){return React.createElement(TextField,{disabled:disabled,id:name,placeholder:placeholder,testID:testID,transformValue:transformValue,type:type,value:value,onBlur:function onBlur(result){_onBlur&&_onBlur(result.value);},onChange:function onChange(result){return _onChange(result.value);}});}else if(type===\"address\"){var addressValue=value?value:{};var _addressValue$address=addressValue.address1,address1=_addressValue$address===void 0?\"\":_addressValue$address,_addressValue$address2=addressValue.address2,address2=_addressValue$address2===void 0?\"\":_addressValue$address2,_addressValue$city=addressValue.city,city=_addressValue$city===void 0?\"\":_addressValue$city,_addressValue$state=addressValue.state,state=_addressValue$state===void 0?\"\":_addressValue$state,_addressValue$zipcode=addressValue.zipcode,zipcode=_addressValue$zipcode===void 0?\"\":_addressValue$zipcode,_addressValue$countyN=addressValue.countyName,countyName=_addressValue$countyN===void 0?\"\":_addressValue$countyN,_addressValue$countyC=addressValue.countyCode,countyCode=_addressValue$countyC===void 0?\"\":_addressValue$countyC;return React.createElement(React.Fragment,null,React.createElement(UnifiedAddressAutoCompleteField,{disabled:disabled,googleMapsApiKey:googleMapsApiKey,googlePlacesMobileStyles:googlePlacesMobileStyles,handleAddressChange:function handleAddressChange(result){return _handleAddressChange(\"address1\",result.value);},handleAutoCompleteChange:function handleAutoCompleteChange(result){return _handleAutoCompleteChange(result);},includeCounty:includeCounty,inputValue:address1,testID:`${testID}-address1`}),React.createElement(TextField,{disabled:disabled,id:\"address2\",label:\"Apt, suite, etc\",testID:`${testID}-address2`,type:\"text\",value:address2,onChange:function onChange(result){return _handleAddressChange(\"address2\",result.value);}}),React.createElement(TextField,{disabled:disabled,id:\"city\",label:\"City\",testID:`${testID}-city`,type:\"text\",value:city,onChange:function onChange(result){return _handleAddressChange(\"city\",result.value);}}),React.createElement(SelectList,{disabled:disabled,id:\"state\",label:\"State\",options:USSTATESLIST,placeholder:\"Select state\",style:{borderRadius:16},testID:`${testID}-state`,value:state,onChange:function onChange(result){_handleAddressChange(\"state\",result);}}),React.createElement(TextField,{disabled:disabled,id:\"zipcode\",label:\"Zipcode\",testID:`${testID}-zip`,type:\"text\",value:zipcode,onChange:function onChange(result){return _handleAddressChange(\"zipcode\",result.value);}}),includeCounty&&(React.createElement(React.Fragment,null,React.createElement(TextField,{disabled:disabled,id:\"countyName\",label:\"County Name\",testID:`${testID}-county`,type:\"text\",value:countyName,onChange:function onChange(result){return _handleAddressChange(\"countyName\",result.value);}}),React.createElement(TextField,{disabled:disabled,id:\"countyCode\",label:\"County Code\",testID:`${testID}-county-code`,type:\"number\",value:countyCode,onChange:function onChange(result){return _handleAddressChange(\"countyCode\",result.value);}}))));}else if(type===\"customSelect\"){if(!options){console.error(\"Field with type=customSelect require options\");return null;}return React.createElement(CustomSelect,{disabled:disabled,options:options,placeholder:placeholder,value:value,onChange:function onChange(val){_onChange(val);_onBlur&&_onBlur(val);}});}else if(type===\"number\"){return React.createElement(TextField,{disabled:disabled,id:name,placeholder:placeholder,testID:testID,type:\"number\",value:value,onBlur:function onBlur(result){_onBlur&&_onBlur(result.value);},onChange:function onChange(result){_onChange(result.value);}});}else if(type===\"signature\"){return React.createElement(Signature,{onChange:_onChange,onEnd:onEnd,onStart:onStart});}else{var tfType=\"text\";var tfValue=value;if(type&&[\"date\",\"time\",\"datetime\",\"email\",\"phoneNumber\",\"password\",\"url\"].includes(type)){tfType=type;}else if(type===\"percent\"||type===\"currency\"){tfType=\"text\";}var autoComplete=\"on\";if(tfType===\"password\"){autoComplete=\"current-password\";}else if(tfType===\"email\"){autoComplete=\"username\";}if(type===\"percent\"){tfValue=`${Number(value).toFixed(0)}%`;}else if(type===\"currency\"){tfValue=`$${Number(value).toFixed(2)}`;}return React.createElement(TextField,{autoComplete:autoComplete,disabled:disabled,id:name,placeholder:placeholder,testID:testID,type:tfType,value:tfValue,onBlur:function onBlur(result){_onBlur&&_onBlur(result.value);},onChange:function onChange(result){return _onChange(result.value);}});}};var children=renderField();return React.createElement(Box,{marginBottom:5},React.createElement(FieldWithLabels,{errorMessage:errorMessage,errorMessageColor:errorMessageColor,helperText:helperText,helperTextColor:helperTextColor,label:label,labelColor:labelColor},children));};","map":{"version":3,"sources":["../src/Field.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Box } from \"./Box\";\nimport { CheckBox } from \"./CheckBox\";\nimport { USSTATESLIST } from \"./Constants\";\nimport { CustomSelect } from \"./CustomSelect\";\nimport { FieldWithLabels } from \"./FieldWithLabels\";\nimport { SelectList } from \"./SelectList\";\nimport { Signature } from \"./Signature\";\nimport { Switch } from \"./Switch\";\nimport { Text } from \"./Text\";\nimport { TextArea } from \"./TextArea\";\nimport { TextField } from \"./TextField\";\nimport { UnifiedAddressAutoCompleteField } from \"./UnifiedAddressAutoComplete\";\nexport const Field = ({ name, label, labelColor, height, type, rows, value, onChange, onBlur, onStart, onEnd, options, placeholder, disabled, errorMessage, errorMessageColor, helperText, helperTextColor, includeCounty = false, googleMapsApiKey, googlePlacesMobileStyles, testID, transformValue, }) => {\n    const handleAddressChange = (field, newValue) => {\n        onChange(Object.assign(Object.assign({}, value), { [field]: newValue }));\n        onBlur && onBlur(Object.assign(Object.assign({}, value), { [field]: newValue }));\n    };\n    const handleAutoCompleteChange = (newValue) => {\n        onChange(Object.assign(Object.assign({}, value), newValue));\n    };\n    const handleSwitchChange = (switchValue) => {\n        onChange(switchValue);\n        onBlur && onBlur(switchValue);\n    };\n    const renderField = () => {\n        if (type === \"select\") {\n            if (!options) {\n                console.error(\"Field with type=select require options\");\n                return undefined;\n            }\n            return (React.createElement(SelectList, { disabled: disabled, id: name, options: options, placeholder: placeholder, testID: testID, value: value, onChange: (result) => {\n                    onChange(result);\n                    onBlur && onBlur(result);\n                } }));\n        }\n        else if (type === \"multiselect\") {\n            if (options === undefined) {\n                console.error(\"Field with type=multiselect require options\");\n                return undefined;\n            }\n            return (React.createElement(Box, { width: \"100%\" }, options.map((o) => (React.createElement(Box, { key: o.label + o.value, alignItems: \"center\", direction: \"row\", justifyContent: \"between\", width: \"100%\" },\n                React.createElement(Box, { flex: \"shrink\", marginRight: 2 },\n                    React.createElement(Text, { weight: \"bold\" }, o.label)),\n                React.createElement(Box, null,\n                    React.createElement(CheckBox, { key: o.label + o.value, checked: (value !== null && value !== void 0 ? value : []).includes(o.value), disabled: disabled, name: name, size: \"sm\", testID: `${testID}-${o.value}`, onChange: (result) => {\n                            let newValue;\n                            if (result.value) {\n                                if (value.includes(o.value)) {\n                                    console.warn(`Tried to add value that already exists: ${o.value}`);\n                                    return;\n                                }\n                                newValue = [...value, o.value];\n                            }\n                            else {\n                                newValue = value.filter((v) => v !== o.value);\n                            }\n                            onChange(newValue);\n                            onBlur && onBlur(newValue);\n                        } })))))));\n        }\n        else if (type === \"textarea\") {\n            return (React.createElement(TextArea, { disabled: disabled, height: height !== null && height !== void 0 ? height : 100, id: name, placeholder: Boolean(value) ? \"\" : placeholder, rows: rows, testID: testID, value: String(value), onBlur: onBlur, onChange: (result) => onChange(result.value) }));\n        }\n        else if (type === \"boolean\") {\n            return (React.createElement(Switch, { disabled: disabled, id: name, name: name, switched: Boolean(value), testID: testID, onChange: (result) => {\n                    handleSwitchChange(result);\n                } }));\n        }\n        else if (type && [\"date\", \"time\", \"datetime\"].includes(type)) {\n            return (React.createElement(TextField, { disabled: disabled, id: name, placeholder: placeholder, testID: testID, transformValue: transformValue, type: type, value: value, onBlur: (result) => {\n                    onBlur && onBlur(result.value);\n                }, onChange: (result) => onChange(result.value) }));\n        }\n        else if (type === \"address\") {\n            const addressValue = value ? value : {};\n            const { address1 = \"\", address2 = \"\", city = \"\", state = \"\", zipcode = \"\", countyName = \"\", countyCode = \"\", } = addressValue;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(UnifiedAddressAutoCompleteField, { disabled: disabled, googleMapsApiKey: googleMapsApiKey, googlePlacesMobileStyles: googlePlacesMobileStyles, handleAddressChange: (result) => handleAddressChange(\"address1\", result.value), handleAutoCompleteChange: (result) => handleAutoCompleteChange(result), includeCounty: includeCounty, inputValue: address1, testID: `${testID}-address1` }),\n                React.createElement(TextField, { disabled: disabled, id: \"address2\", label: \"Apt, suite, etc\", testID: `${testID}-address2`, type: \"text\", value: address2, onChange: (result) => handleAddressChange(\"address2\", result.value) }),\n                React.createElement(TextField, { disabled: disabled, id: \"city\", label: \"City\", testID: `${testID}-city`, type: \"text\", value: city, onChange: (result) => handleAddressChange(\"city\", result.value) }),\n                React.createElement(SelectList, { disabled: disabled, id: \"state\", label: \"State\", options: USSTATESLIST, placeholder: \"Select state\", style: { borderRadius: 16 }, testID: `${testID}-state`, value: state, onChange: (result) => {\n                        handleAddressChange(\"state\", result);\n                    } }),\n                React.createElement(TextField, { disabled: disabled, id: \"zipcode\", label: \"Zipcode\", testID: `${testID}-zip`, type: \"text\", value: zipcode, onChange: (result) => handleAddressChange(\"zipcode\", result.value) }),\n                includeCounty && (React.createElement(React.Fragment, null,\n                    React.createElement(TextField, { disabled: disabled, id: \"countyName\", label: \"County Name\", testID: `${testID}-county`, type: \"text\", value: countyName, onChange: (result) => handleAddressChange(\"countyName\", result.value) }),\n                    React.createElement(TextField, { disabled: disabled, id: \"countyCode\", label: \"County Code\", testID: `${testID}-county-code`, type: \"number\", value: countyCode, onChange: (result) => handleAddressChange(\"countyCode\", result.value) })))));\n        }\n        else if (type === \"customSelect\") {\n            if (!options) {\n                console.error(\"Field with type=customSelect require options\");\n                return null;\n            }\n            return (React.createElement(CustomSelect, { disabled: disabled, options: options, placeholder: placeholder, value: value, onChange: (val) => {\n                    onChange(val);\n                    onBlur && onBlur(val);\n                } }));\n        }\n        else if (type === \"number\") {\n            return (React.createElement(TextField, { disabled: disabled, id: name, placeholder: placeholder, testID: testID, type: \"number\", value: value, onBlur: (result) => {\n                    onBlur && onBlur(result.value);\n                }, onChange: (result) => {\n                    onChange(result.value);\n                } }));\n        }\n        else if (type === \"signature\") {\n            return React.createElement(Signature, { onChange: onChange, onEnd: onEnd, onStart: onStart });\n        }\n        else {\n            let tfType = \"text\";\n            let tfValue = value;\n            // Number is supported differently because we need fractional numbers and they don't work\n            // well on iOS.\n            if (type &&\n                [\"date\", \"time\", \"datetime\", \"email\", \"phoneNumber\", \"password\", \"url\"].includes(type)) {\n                tfType = type;\n            }\n            else if (type === \"percent\" || type === \"currency\") {\n                tfType = \"text\";\n            }\n            let autoComplete = \"on\";\n            if (tfType === \"password\") {\n                autoComplete = \"current-password\";\n            }\n            else if (tfType === \"email\") {\n                autoComplete = \"username\";\n            }\n            if (type === \"percent\") {\n                tfValue = `${Number(value).toFixed(0)}%`;\n            }\n            else if (type === \"currency\") {\n                tfValue = `$${Number(value).toFixed(2)}`;\n            }\n            return (React.createElement(TextField, { autoComplete: autoComplete, disabled: disabled, id: name, placeholder: placeholder, testID: testID, type: tfType, value: tfValue, onBlur: (result) => {\n                    onBlur && onBlur(result.value);\n                }, onChange: (result) => onChange(result.value) }));\n        }\n    };\n    const children = renderField();\n    return (React.createElement(Box, { marginBottom: 5 },\n        React.createElement(FieldWithLabels, { errorMessage,\n            errorMessageColor,\n            helperText,\n            helperTextColor,\n            label,\n            labelColor }, children)));\n};\n//# sourceMappingURL=Field.js.map"]},"metadata":{},"sourceType":"module"}