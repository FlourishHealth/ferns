{"ast":null,"code":"'use strict';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import NativeReanimatedModule from'./NativeReanimated';import{SensorType}from'./commonTypes';import{makeMutable}from'./mutables';function initSensorData(sensorType){if(sensorType===SensorType.ROTATION){return makeMutable({qw:0,qx:0,qy:0,qz:0,yaw:0,pitch:0,roll:0,interfaceOrientation:0});}else{return makeMutable({x:0,y:0,z:0,interfaceOrientation:0});}}var Sensor=function(){function Sensor(sensorType,config){_classCallCheck(this,Sensor);_defineProperty(this,\"listenersNumber\",0);_defineProperty(this,\"sensorId\",null);_defineProperty(this,\"sensorType\",void 0);_defineProperty(this,\"data\",void 0);_defineProperty(this,\"config\",void 0);this.sensorType=sensorType;this.config=config;this.data=initSensorData(sensorType);}_createClass(Sensor,[{key:\"register\",value:function register(eventHandler){var config=this.config;var sensorType=this.sensorType;this.sensorId=NativeReanimatedModule.registerSensor(sensorType,config.interval==='auto'?-1:config.interval,config.iosReferenceFrame,eventHandler);return this.sensorId!==-1;}},{key:\"isRunning\",value:function isRunning(){return this.sensorId!==-1&&this.sensorId!==null;}},{key:\"isAvailable\",value:function isAvailable(){return this.sensorId!==-1;}},{key:\"getSharedValue\",value:function getSharedValue(){return this.data;}},{key:\"unregister\",value:function unregister(){if(this.sensorId!==null&&this.sensorId!==-1){NativeReanimatedModule.unregisterSensor(this.sensorId);}this.sensorId=null;}}]);return Sensor;}();export{Sensor as default};","map":{"version":3,"sources":["Sensor.ts"],"names":["NativeReanimatedModule","SensorType","makeMutable","initSensorData","sensorType","ROTATION","qw","qx","qy","qz","yaw","pitch","roll","interfaceOrientation","x","y","z","Sensor","_defineProperty","constructor","config","data","register","eventHandler","sensorId","registerSensor","interval","iosReferenceFrame","isRunning","isAvailable","getSharedValue","unregister","unregisterSensor"],"mappings":"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","sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport type {\n  SensorConfig,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n  ShareableRef,\n} from './commonTypes';\nimport { SensorType } from './commonTypes';\nimport { makeMutable } from './mutables';\n\nfunction initSensorData(\n  sensorType: SensorType\n): SharedValue<Value3D | ValueRotation> {\n  if (sensorType === SensorType.ROTATION) {\n    return makeMutable<Value3D | ValueRotation>({\n      qw: 0,\n      qx: 0,\n      qy: 0,\n      qz: 0,\n      yaw: 0,\n      pitch: 0,\n      roll: 0,\n      interfaceOrientation: 0,\n    });\n  } else {\n    return makeMutable<Value3D | ValueRotation>({\n      x: 0,\n      y: 0,\n      z: 0,\n      interfaceOrientation: 0,\n    });\n  }\n}\n\nexport default class Sensor {\n  public listenersNumber = 0;\n  private sensorId: number | null = null;\n  private sensorType: SensorType;\n  private data: SharedValue<Value3D | ValueRotation>;\n  private config: SensorConfig;\n\n  constructor(sensorType: SensorType, config: SensorConfig) {\n    this.sensorType = sensorType;\n    this.config = config;\n    this.data = initSensorData(sensorType);\n  }\n\n  register(\n    eventHandler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ) {\n    const config = this.config;\n    const sensorType = this.sensorType;\n    this.sensorId = NativeReanimatedModule.registerSensor(\n      sensorType,\n      config.interval === 'auto' ? -1 : config.interval,\n      config.iosReferenceFrame,\n      eventHandler\n    );\n    return this.sensorId !== -1;\n  }\n\n  isRunning() {\n    return this.sensorId !== -1 && this.sensorId !== null;\n  }\n\n  isAvailable() {\n    return this.sensorId !== -1;\n  }\n\n  getSharedValue() {\n    return this.data;\n  }\n\n  unregister() {\n    if (this.sensorId !== null && this.sensorId !== -1) {\n      NativeReanimatedModule.unregisterSensor(this.sensorId);\n    }\n    this.sensorId = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}