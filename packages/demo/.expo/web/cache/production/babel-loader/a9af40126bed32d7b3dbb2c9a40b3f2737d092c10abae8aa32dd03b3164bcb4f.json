{"ast":null,"code":"'use strict';import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _worklet_1707959502623_init_data={code:\"function isAffineMatrixFlat(x){return Array.isArray(x)&&x.length===16&&x.every(function(element){return typeof element==='number'&&!isNaN(element);});}\"};export var isAffineMatrixFlat=function(){var isAffineMatrixFlat=function isAffineMatrixFlat(x){return Array.isArray(x)&&x.length===16&&x.every(function(element){return typeof element==='number'&&!isNaN(element);});};isAffineMatrixFlat.__closure={};isAffineMatrixFlat.__workletHash=1707959502623;isAffineMatrixFlat.__initData=_worklet_1707959502623_init_data;return isAffineMatrixFlat;}();var _worklet_10460689553819_init_data={code:\"function isAffineMatrix(x){return Array.isArray(x)&&x.length===4&&x.every(function(row){return Array.isArray(row)&&row.length===4&&row.every(function(element){return typeof element==='number'&&!isNaN(element);});});}\"};export var isAffineMatrix=function(){var isAffineMatrix=function isAffineMatrix(x){return Array.isArray(x)&&x.length===4&&x.every(function(row){return Array.isArray(row)&&row.length===4&&row.every(function(element){return typeof element==='number'&&!isNaN(element);});});};isAffineMatrix.__closure={};isAffineMatrix.__workletHash=10460689553819;isAffineMatrix.__initData=_worklet_10460689553819_init_data;return isAffineMatrix;}();var _worklet_2702927761571_init_data={code:\"function flatten(matrix){return matrix.flat();}\"};export var flatten=function(){var flatten=function flatten(matrix){return matrix.flat();};flatten.__closure={};flatten.__workletHash=2702927761571;flatten.__initData=_worklet_2702927761571_init_data;return flatten;}();var _worklet_7629642405327_init_data={code:\"function unflatten(m){return[[m[0],m[1],m[2],m[3]],[m[4],m[5],m[6],m[7]],[m[8],m[9],m[10],m[11]],[m[12],m[13],m[14],m[15]]];}\"};export var unflatten=function(){var unflatten=function unflatten(m){return[[m[0],m[1],m[2],m[3]],[m[4],m[5],m[6],m[7]],[m[8],m[9],m[10],m[11]],[m[12],m[13],m[14],m[15]]];};unflatten.__closure={};unflatten.__workletHash=7629642405327;unflatten.__initData=_worklet_7629642405327_init_data;return unflatten;}();var _worklet_832061382511_init_data={code:\"function maybeFlattenMatrix(matrix){const{isAffineMatrix,flatten}=this.__closure;return isAffineMatrix(matrix)?flatten(matrix):matrix;}\"};var maybeFlattenMatrix=function(){var maybeFlattenMatrix=function maybeFlattenMatrix(matrix){return isAffineMatrix(matrix)?flatten(matrix):matrix;};maybeFlattenMatrix.__closure={isAffineMatrix:isAffineMatrix,flatten:flatten};maybeFlattenMatrix.__workletHash=832061382511;maybeFlattenMatrix.__initData=_worklet_832061382511_init_data;return maybeFlattenMatrix;}();var _worklet_9003387220364_init_data={code:\"function multiplyMatrices(a,b){return[[a[0][0]*b[0][0]+a[0][1]*b[1][0]+a[0][2]*b[2][0]+a[0][3]*b[3][0],a[0][0]*b[0][1]+a[0][1]*b[1][1]+a[0][2]*b[2][1]+a[0][3]*b[3][1],a[0][0]*b[0][2]+a[0][1]*b[1][2]+a[0][2]*b[2][2]+a[0][3]*b[3][2],a[0][0]*b[0][3]+a[0][1]*b[1][3]+a[0][2]*b[2][3]+a[0][3]*b[3][3]],[a[1][0]*b[0][0]+a[1][1]*b[1][0]+a[1][2]*b[2][0]+a[1][3]*b[3][0],a[1][0]*b[0][1]+a[1][1]*b[1][1]+a[1][2]*b[2][1]+a[1][3]*b[3][1],a[1][0]*b[0][2]+a[1][1]*b[1][2]+a[1][2]*b[2][2]+a[1][3]*b[3][2],a[1][0]*b[0][3]+a[1][1]*b[1][3]+a[1][2]*b[2][3]+a[1][3]*b[3][3]],[a[2][0]*b[0][0]+a[2][1]*b[1][0]+a[2][2]*b[2][0]+a[2][3]*b[3][0],a[2][0]*b[0][1]+a[2][1]*b[1][1]+a[2][2]*b[2][1]+a[2][3]*b[3][1],a[2][0]*b[0][2]+a[2][1]*b[1][2]+a[2][2]*b[2][2]+a[2][3]*b[3][2],a[2][0]*b[0][3]+a[2][1]*b[1][3]+a[2][2]*b[2][3]+a[2][3]*b[3][3]],[a[3][0]*b[0][0]+a[3][1]*b[1][0]+a[3][2]*b[2][0]+a[3][3]*b[3][0],a[3][0]*b[0][1]+a[3][1]*b[1][1]+a[3][2]*b[2][1]+a[3][3]*b[3][1],a[3][0]*b[0][2]+a[3][1]*b[1][2]+a[3][2]*b[2][2]+a[3][3]*b[3][2],a[3][0]*b[0][3]+a[3][1]*b[1][3]+a[3][2]*b[2][3]+a[3][3]*b[3][3]]];}\"};export var multiplyMatrices=function(){var multiplyMatrices=function multiplyMatrices(a,b){return[[a[0][0]*b[0][0]+a[0][1]*b[1][0]+a[0][2]*b[2][0]+a[0][3]*b[3][0],a[0][0]*b[0][1]+a[0][1]*b[1][1]+a[0][2]*b[2][1]+a[0][3]*b[3][1],a[0][0]*b[0][2]+a[0][1]*b[1][2]+a[0][2]*b[2][2]+a[0][3]*b[3][2],a[0][0]*b[0][3]+a[0][1]*b[1][3]+a[0][2]*b[2][3]+a[0][3]*b[3][3]],[a[1][0]*b[0][0]+a[1][1]*b[1][0]+a[1][2]*b[2][0]+a[1][3]*b[3][0],a[1][0]*b[0][1]+a[1][1]*b[1][1]+a[1][2]*b[2][1]+a[1][3]*b[3][1],a[1][0]*b[0][2]+a[1][1]*b[1][2]+a[1][2]*b[2][2]+a[1][3]*b[3][2],a[1][0]*b[0][3]+a[1][1]*b[1][3]+a[1][2]*b[2][3]+a[1][3]*b[3][3]],[a[2][0]*b[0][0]+a[2][1]*b[1][0]+a[2][2]*b[2][0]+a[2][3]*b[3][0],a[2][0]*b[0][1]+a[2][1]*b[1][1]+a[2][2]*b[2][1]+a[2][3]*b[3][1],a[2][0]*b[0][2]+a[2][1]*b[1][2]+a[2][2]*b[2][2]+a[2][3]*b[3][2],a[2][0]*b[0][3]+a[2][1]*b[1][3]+a[2][2]*b[2][3]+a[2][3]*b[3][3]],[a[3][0]*b[0][0]+a[3][1]*b[1][0]+a[3][2]*b[2][0]+a[3][3]*b[3][0],a[3][0]*b[0][1]+a[3][1]*b[1][1]+a[3][2]*b[2][1]+a[3][3]*b[3][1],a[3][0]*b[0][2]+a[3][1]*b[1][2]+a[3][2]*b[2][2]+a[3][3]*b[3][2],a[3][0]*b[0][3]+a[3][1]*b[1][3]+a[3][2]*b[2][3]+a[3][3]*b[3][3]]];};multiplyMatrices.__closure={};multiplyMatrices.__workletHash=9003387220364;multiplyMatrices.__initData=_worklet_9003387220364_init_data;return multiplyMatrices;}();var _worklet_13621555220883_init_data={code:\"function subtractMatrices(maybeFlatA,maybeFlatB){const{isAffineMatrixFlat,maybeFlattenMatrix,unflatten}=this.__closure;const isFlatOnStart=isAffineMatrixFlat(maybeFlatA);const a=maybeFlattenMatrix(maybeFlatA);const b=maybeFlattenMatrix(maybeFlatB);const c=a.map(function(_,i){return a[i]-b[i];});return isFlatOnStart?c:unflatten(c);}\"};export var subtractMatrices=function(){var subtractMatrices=function subtractMatrices(maybeFlatA,maybeFlatB){var isFlatOnStart=isAffineMatrixFlat(maybeFlatA);var a=maybeFlattenMatrix(maybeFlatA);var b=maybeFlattenMatrix(maybeFlatB);var c=a.map(function(_,i){return a[i]-b[i];});return isFlatOnStart?c:unflatten(c);};subtractMatrices.__closure={isAffineMatrixFlat:isAffineMatrixFlat,maybeFlattenMatrix:maybeFlattenMatrix,unflatten:unflatten};subtractMatrices.__workletHash=13621555220883;subtractMatrices.__initData=_worklet_13621555220883_init_data;return subtractMatrices;}();var _worklet_12613533663840_init_data={code:\"function addMatrices(maybeFlatA,maybeFlatB){const{isAffineMatrixFlat,maybeFlattenMatrix,unflatten}=this.__closure;const isFlatOnStart=isAffineMatrixFlat(maybeFlatA);const a=maybeFlattenMatrix(maybeFlatA);const b=maybeFlattenMatrix(maybeFlatB);const c=a.map(function(_,i){return a[i]+b[i];});return isFlatOnStart?c:unflatten(c);}\"};export var addMatrices=function(){var addMatrices=function addMatrices(maybeFlatA,maybeFlatB){var isFlatOnStart=isAffineMatrixFlat(maybeFlatA);var a=maybeFlattenMatrix(maybeFlatA);var b=maybeFlattenMatrix(maybeFlatB);var c=a.map(function(_,i){return a[i]+b[i];});return isFlatOnStart?c:unflatten(c);};addMatrices.__closure={isAffineMatrixFlat:isAffineMatrixFlat,maybeFlattenMatrix:maybeFlattenMatrix,unflatten:unflatten};addMatrices.__workletHash=12613533663840;addMatrices.__initData=_worklet_12613533663840_init_data;return addMatrices;}();var _worklet_719755965988_init_data={code:\"function scaleMatrix(maybeFlatA,scalar){const{isAffineMatrixFlat,maybeFlattenMatrix,unflatten}=this.__closure;const isFlatOnStart=isAffineMatrixFlat(maybeFlatA);const a=maybeFlattenMatrix(maybeFlatA);const b=a.map(function(x){return x*scalar;});return isFlatOnStart?b:unflatten(b);}\"};export var scaleMatrix=function(){var scaleMatrix=function scaleMatrix(maybeFlatA,scalar){var isFlatOnStart=isAffineMatrixFlat(maybeFlatA);var a=maybeFlattenMatrix(maybeFlatA);var b=a.map(function(x){return x*scalar;});return isFlatOnStart?b:unflatten(b);};scaleMatrix.__closure={isAffineMatrixFlat:isAffineMatrixFlat,maybeFlattenMatrix:maybeFlattenMatrix,unflatten:unflatten};scaleMatrix.__workletHash=719755965988;scaleMatrix.__initData=_worklet_719755965988_init_data;return scaleMatrix;}();var _worklet_15188867736942_init_data={code:\"function getRotationMatrix(angle){let axis=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'z';const cos=Math.cos(angle);const sin=Math.sin(angle);switch(axis){case'z':return[[cos,sin,0,0],[-sin,cos,0,0],[0,0,1,0],[0,0,0,1]];case'y':return[[cos,0,-sin,0],[0,1,0,0],[sin,0,cos,0],[0,0,0,1]];case'x':return[[1,0,0,0],[0,cos,sin,0],[0,-sin,cos,0],[0,0,0,1]];}}\"};export var getRotationMatrix=function(){var getRotationMatrix=function getRotationMatrix(angle){var axis=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'z';var cos=Math.cos(angle);var sin=Math.sin(angle);switch(axis){case'z':return[[cos,sin,0,0],[-sin,cos,0,0],[0,0,1,0],[0,0,0,1]];case'y':return[[cos,0,-sin,0],[0,1,0,0],[sin,0,cos,0],[0,0,0,1]];case'x':return[[1,0,0,0],[0,cos,sin,0],[0,-sin,cos,0],[0,0,0,1]];}};getRotationMatrix.__closure={};getRotationMatrix.__workletHash=15188867736942;getRotationMatrix.__initData=_worklet_15188867736942_init_data;return getRotationMatrix;}();var _worklet_1147516857584_init_data={code:\"function norm3d(x,y,z){return Math.sqrt(x*x+y*y+z*z);}\"};var norm3d=function(){var norm3d=function norm3d(x,y,z){return Math.sqrt(x*x+y*y+z*z);};norm3d.__closure={};norm3d.__workletHash=1147516857584;norm3d.__initData=_worklet_1147516857584_init_data;return norm3d;}();var _worklet_10025689255618_init_data={code:\"function transposeMatrix(matrix){const{flatten}=this.__closure;const m=flatten(matrix);return[[m[0],m[4],m[8],m[12]],[m[1],m[5],m[9],m[13]],[m[2],m[6],m[10],m[14]],[m[3],m[7],m[11],m[15]]];}\"};var transposeMatrix=function(){var transposeMatrix=function transposeMatrix(matrix){var m=flatten(matrix);return[[m[0],m[4],m[8],m[12]],[m[1],m[5],m[9],m[13]],[m[2],m[6],m[10],m[14]],[m[3],m[7],m[11],m[15]]];};transposeMatrix.__closure={flatten:flatten};transposeMatrix.__workletHash=10025689255618;transposeMatrix.__initData=_worklet_10025689255618_init_data;return transposeMatrix;}();var _worklet_12756525216035_init_data={code:\"function assertVectorsHaveEqualLengths(a,b){const{__DEV__}=this.__closure;if(__DEV__&&a.length!==b.length){throw new Error(\\\"[Reanimated] Cannot calculate inner product of two vectors of different lengths. Length of \\\"+a+\\\" is \\\"+a.length+\\\" and length of \\\"+b+\\\" is \\\"+b.length+\\\".\\\");}}\"};var assertVectorsHaveEqualLengths=function(){var assertVectorsHaveEqualLengths=function assertVectorsHaveEqualLengths(a,b){if(false&&a.length!==b.length){throw new Error(`[Reanimated] Cannot calculate inner product of two vectors of different lengths. Length of ${a} is ${a.length} and length of ${b} is ${b.length}.`);}};assertVectorsHaveEqualLengths.__closure={__DEV__:false};assertVectorsHaveEqualLengths.__workletHash=12756525216035;assertVectorsHaveEqualLengths.__initData=_worklet_12756525216035_init_data;return assertVectorsHaveEqualLengths;}();var _worklet_7216976607474_init_data={code:\"function innerProduct(a,b){const{assertVectorsHaveEqualLengths}=this.__closure;assertVectorsHaveEqualLengths(a,b);return a.reduce(function(acc,_,i){return acc+a[i]*b[i];},0);}\"};var innerProduct=function(){var innerProduct=function innerProduct(a,b){assertVectorsHaveEqualLengths(a,b);return a.reduce(function(acc,_,i){return acc+a[i]*b[i];},0);};innerProduct.__closure={assertVectorsHaveEqualLengths:assertVectorsHaveEqualLengths};innerProduct.__workletHash=7216976607474;innerProduct.__initData=_worklet_7216976607474_init_data;return innerProduct;}();var _worklet_16215146979505_init_data={code:\"function projection(u,a){const{assertVectorsHaveEqualLengths,innerProduct}=this.__closure;assertVectorsHaveEqualLengths(u,a);const s=innerProduct(u,a)/innerProduct(u,u);return u.map(function(e){return e*s;});}\"};var projection=function(){var projection=function projection(u,a){assertVectorsHaveEqualLengths(u,a);var s=innerProduct(u,a)/innerProduct(u,u);return u.map(function(e){return e*s;});};projection.__closure={assertVectorsHaveEqualLengths:assertVectorsHaveEqualLengths,innerProduct:innerProduct};projection.__workletHash=16215146979505;projection.__initData=_worklet_16215146979505_init_data;return projection;}();var _worklet_2650969212825_init_data={code:\"function subtractVectors(a,b){const{assertVectorsHaveEqualLengths}=this.__closure;assertVectorsHaveEqualLengths(a,b);return a.map(function(_,i){return a[i]-b[i];});}\"};var subtractVectors=function(){var subtractVectors=function subtractVectors(a,b){assertVectorsHaveEqualLengths(a,b);return a.map(function(_,i){return a[i]-b[i];});};subtractVectors.__closure={assertVectorsHaveEqualLengths:assertVectorsHaveEqualLengths};subtractVectors.__workletHash=2650969212825;subtractVectors.__initData=_worklet_2650969212825_init_data;return subtractVectors;}();var _worklet_16040459946099_init_data={code:\"function scaleVector(u,a){return u.map(function(e){return e*a;});}\"};var scaleVector=function(){var scaleVector=function scaleVector(u,a){return u.map(function(e){return e*a;});};scaleVector.__closure={};scaleVector.__workletHash=16040459946099;scaleVector.__initData=_worklet_16040459946099_init_data;return scaleVector;}();var _worklet_9359996019682_init_data={code:\"function gramSchmidtAlgorithm(matrix){const{subtractVectors,projection,scaleVector,innerProduct,transposeMatrix}=this.__closure;const[a0,a1,a2,a3]=matrix;const u0=a0;const u1=subtractVectors(a1,projection(u0,a1));const u2=subtractVectors(subtractVectors(a2,projection(u0,a2)),projection(u1,a2));const u3=subtractVectors(subtractVectors(subtractVectors(a3,projection(u0,a3)),projection(u1,a3)),projection(u2,a3));const[e0,e1,e2,e3]=[u0,u1,u2,u3].map(function(u){return scaleVector(u,1/Math.sqrt(innerProduct(u,u)));});const rotationMatrix=[[e0[0],e1[0],e2[0],e3[0]],[e0[1],e1[1],e2[1],e3[1]],[e0[2],e1[2],e2[2],e3[2]],[e0[3],e1[3],e2[3],e3[3]]];const skewMatrix=[[innerProduct(e0,a0),innerProduct(e0,a1),innerProduct(e0,a2),innerProduct(e0,a3)],[0,innerProduct(e1,a1),innerProduct(e1,a2),innerProduct(e1,a3)],[0,0,innerProduct(e2,a2),innerProduct(e2,a3)],[0,0,0,innerProduct(e3,a3)]];return{rotationMatrix:transposeMatrix(rotationMatrix),skewMatrix:transposeMatrix(skewMatrix)};}\"};var gramSchmidtAlgorithm=function(){var gramSchmidtAlgorithm=function gramSchmidtAlgorithm(matrix){var _matrix=_slicedToArray(matrix,4),a0=_matrix[0],a1=_matrix[1],a2=_matrix[2],a3=_matrix[3];var u0=a0;var u1=subtractVectors(a1,projection(u0,a1));var u2=subtractVectors(subtractVectors(a2,projection(u0,a2)),projection(u1,a2));var u3=subtractVectors(subtractVectors(subtractVectors(a3,projection(u0,a3)),projection(u1,a3)),projection(u2,a3));var _map=[u0,u1,u2,u3].map(function(u){return scaleVector(u,1/Math.sqrt(innerProduct(u,u)));}),_map2=_slicedToArray(_map,4),e0=_map2[0],e1=_map2[1],e2=_map2[2],e3=_map2[3];var rotationMatrix=[[e0[0],e1[0],e2[0],e3[0]],[e0[1],e1[1],e2[1],e3[1]],[e0[2],e1[2],e2[2],e3[2]],[e0[3],e1[3],e2[3],e3[3]]];var skewMatrix=[[innerProduct(e0,a0),innerProduct(e0,a1),innerProduct(e0,a2),innerProduct(e0,a3)],[0,innerProduct(e1,a1),innerProduct(e1,a2),innerProduct(e1,a3)],[0,0,innerProduct(e2,a2),innerProduct(e2,a3)],[0,0,0,innerProduct(e3,a3)]];return{rotationMatrix:transposeMatrix(rotationMatrix),skewMatrix:transposeMatrix(skewMatrix)};};gramSchmidtAlgorithm.__closure={subtractVectors:subtractVectors,projection:projection,scaleVector:scaleVector,innerProduct:innerProduct,transposeMatrix:transposeMatrix};gramSchmidtAlgorithm.__workletHash=9359996019682;gramSchmidtAlgorithm.__initData=_worklet_9359996019682_init_data;return gramSchmidtAlgorithm;}();var _worklet_1694375123899_init_data={code:\"function decomposeMatrix(unknownTypeMatrix){const{maybeFlattenMatrix,norm3d,gramSchmidtAlgorithm}=this.__closure;const matrix=maybeFlattenMatrix(unknownTypeMatrix);if(matrix[15]===0){throw new Error('[Reanimated] Invalid transform matrix.');}matrix.forEach(function(_,i){return matrix[i]/=matrix[15];});const translationMatrix=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[matrix[12],matrix[13],matrix[14],1]];const sx=matrix[15]*norm3d(matrix[0],matrix[4],matrix[8]);const sy=matrix[15]*norm3d(matrix[1],matrix[5],matrix[9]);const sz=matrix[15]*norm3d(matrix[2],matrix[6],matrix[10]);const scaleMatrix=[[sx,0,0,0],[0,sy,0,0],[0,0,sz,0],[0,0,0,1]];const rotationAndSkewMatrix=[[matrix[0]/sx,matrix[1]/sx,matrix[2]/sx,0],[matrix[4]/sy,matrix[5]/sy,matrix[6]/sy,0],[matrix[8]/sz,matrix[9]/sz,matrix[10]/sz,0],[0,0,0,1]];const{rotationMatrix:rotationMatrix,skewMatrix:skewMatrix}=gramSchmidtAlgorithm(rotationAndSkewMatrix);return{translationMatrix:translationMatrix,scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,skewMatrix:skewMatrix};}\"};export var decomposeMatrix=function(){var decomposeMatrix=function decomposeMatrix(unknownTypeMatrix){var matrix=maybeFlattenMatrix(unknownTypeMatrix);if(matrix[15]===0){throw new Error('[Reanimated] Invalid transform matrix.');}matrix.forEach(function(_,i){return matrix[i]/=matrix[15];});var translationMatrix=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[matrix[12],matrix[13],matrix[14],1]];var sx=matrix[15]*norm3d(matrix[0],matrix[4],matrix[8]);var sy=matrix[15]*norm3d(matrix[1],matrix[5],matrix[9]);var sz=matrix[15]*norm3d(matrix[2],matrix[6],matrix[10]);var scaleMatrix=[[sx,0,0,0],[0,sy,0,0],[0,0,sz,0],[0,0,0,1]];var rotationAndSkewMatrix=[[matrix[0]/sx,matrix[1]/sx,matrix[2]/sx,0],[matrix[4]/sy,matrix[5]/sy,matrix[6]/sy,0],[matrix[8]/sz,matrix[9]/sz,matrix[10]/sz,0],[0,0,0,1]];var _gramSchmidtAlgorithm=gramSchmidtAlgorithm(rotationAndSkewMatrix),rotationMatrix=_gramSchmidtAlgorithm.rotationMatrix,skewMatrix=_gramSchmidtAlgorithm.skewMatrix;return{translationMatrix:translationMatrix,scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,skewMatrix:skewMatrix};};decomposeMatrix.__closure={maybeFlattenMatrix:maybeFlattenMatrix,norm3d:norm3d,gramSchmidtAlgorithm:gramSchmidtAlgorithm};decomposeMatrix.__workletHash=1694375123899;decomposeMatrix.__initData=_worklet_1694375123899_init_data;return decomposeMatrix;}();var _worklet_11620715816479_init_data={code:\"function decomposeMatrixIntoMatricesAndAngles(matrix){const{decomposeMatrix}=this.__closure;const{scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,translationMatrix:translationMatrix,skewMatrix:skewMatrix}=decomposeMatrix(matrix);const sinRy=-rotationMatrix[0][2];const ry=Math.asin(sinRy);let rx;let rz;if(sinRy===1||sinRy===-1){rz=0;rx=Math.atan2(sinRy*rotationMatrix[0][1],sinRy*rotationMatrix[0][2]);}else{rz=Math.atan2(rotationMatrix[0][1],rotationMatrix[0][0]);rx=Math.atan2(rotationMatrix[1][2],rotationMatrix[2][2]);}return{scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,translationMatrix:translationMatrix,skewMatrix:skewMatrix,rx:rx||0,ry:ry||0,rz:rz||0};}\"};export var decomposeMatrixIntoMatricesAndAngles=function(){var decomposeMatrixIntoMatricesAndAngles=function decomposeMatrixIntoMatricesAndAngles(matrix){var _decomposeMatrix=decomposeMatrix(matrix),scaleMatrix=_decomposeMatrix.scaleMatrix,rotationMatrix=_decomposeMatrix.rotationMatrix,translationMatrix=_decomposeMatrix.translationMatrix,skewMatrix=_decomposeMatrix.skewMatrix;var sinRy=-rotationMatrix[0][2];var ry=Math.asin(sinRy);var rx;var rz;if(sinRy===1||sinRy===-1){rz=0;rx=Math.atan2(sinRy*rotationMatrix[0][1],sinRy*rotationMatrix[0][2]);}else{rz=Math.atan2(rotationMatrix[0][1],rotationMatrix[0][0]);rx=Math.atan2(rotationMatrix[1][2],rotationMatrix[2][2]);}return{scaleMatrix:scaleMatrix,rotationMatrix:rotationMatrix,translationMatrix:translationMatrix,skewMatrix:skewMatrix,rx:rx||0,ry:ry||0,rz:rz||0};};decomposeMatrixIntoMatricesAndAngles.__closure={decomposeMatrix:decomposeMatrix};decomposeMatrixIntoMatricesAndAngles.__workletHash=11620715816479;decomposeMatrixIntoMatricesAndAngles.__initData=_worklet_11620715816479_init_data;return decomposeMatrixIntoMatricesAndAngles;}();","map":{"version":3,"names":["_slicedToArray","_worklet_1707959502623_init_data","code","isAffineMatrixFlat","x","Array","isArray","length","every","element","isNaN","__closure","__workletHash","__initData","_worklet_10460689553819_init_data","isAffineMatrix","row","_worklet_2702927761571_init_data","flatten","matrix","flat","_worklet_7629642405327_init_data","unflatten","m","_worklet_832061382511_init_data","maybeFlattenMatrix","_worklet_9003387220364_init_data","multiplyMatrices","a","b","_worklet_13621555220883_init_data","subtractMatrices","maybeFlatA","maybeFlatB","isFlatOnStart","c","map","_","i","_worklet_12613533663840_init_data","addMatrices","_worklet_719755965988_init_data","scaleMatrix","scalar","_worklet_15188867736942_init_data","getRotationMatrix","angle","axis","arguments","undefined","cos","Math","sin","_worklet_1147516857584_init_data","norm3d","y","z","sqrt","_worklet_10025689255618_init_data","transposeMatrix","_worklet_12756525216035_init_data","assertVectorsHaveEqualLengths","Error","__DEV__","_worklet_7216976607474_init_data","innerProduct","reduce","acc","_worklet_16215146979505_init_data","projection","u","s","e","_worklet_2650969212825_init_data","subtractVectors","_worklet_16040459946099_init_data","scaleVector","_worklet_9359996019682_init_data","gramSchmidtAlgorithm","_matrix","a0","a1","a2","a3","u0","u1","u2","u3","_map","_map2","e0","e1","e2","e3","rotationMatrix","skewMatrix","_worklet_1694375123899_init_data","decomposeMatrix","unknownTypeMatrix","forEach","translationMatrix","sx","sy","sz","rotationAndSkewMatrix","_gramSchmidtAlgorithm","_worklet_11620715816479_init_data","decomposeMatrixIntoMatricesAndAngles","_decomposeMatrix","sinRy","ry","asin","rx","rz","atan2"],"sources":["/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/animation/transformationMatrix/matrixUtils.tsx"],"sourcesContent":["'use strict';\ntype FixedLengthArray<\n  T,\n  L extends number,\n  PassedObject = [T, ...Array<T>]\n> = PassedObject & {\n  readonly length: L;\n  [I: number]: T;\n};\n\nexport type AffineMatrix = FixedLengthArray<FixedLengthArray<number, 4>, 4>;\n\nexport type AffineMatrixFlat = FixedLengthArray<number, 16>;\n\ntype TransformMatrixDecomposition = Record<\n  'translationMatrix' | 'scaleMatrix' | 'rotationMatrix' | 'skewMatrix',\n  AffineMatrix\n>;\n\ntype Axis = 'x' | 'y' | 'z';\n\ninterface TansformMatrixDecompositionWithAngles\n  extends TransformMatrixDecomposition {\n  rx: number;\n  ry: number;\n  rz: number;\n}\n\nexport function isAffineMatrixFlat(x: unknown): x is AffineMatrixFlat {\n  'worklet';\n  return (\n    Array.isArray(x) &&\n    x.length === 16 &&\n    x.every((element) => typeof element === 'number' && !isNaN(element))\n  );\n}\n\n// ts-prune-ignore-next This function is exported to be tested\nexport function isAffineMatrix(x: unknown): x is AffineMatrix {\n  'worklet';\n  return (\n    Array.isArray(x) &&\n    x.length === 4 &&\n    x.every(\n      (row) =>\n        Array.isArray(row) &&\n        row.length === 4 &&\n        row.every((element) => typeof element === 'number' && !isNaN(element))\n    )\n  );\n}\n\nexport function flatten(matrix: AffineMatrix): AffineMatrixFlat {\n  'worklet';\n  return matrix.flat() as AffineMatrixFlat;\n}\n\n// ts-prune-ignore-next This function is exported to be tested\nexport function unflatten(m: AffineMatrixFlat): AffineMatrix {\n  'worklet';\n  return [\n    [m[0], m[1], m[2], m[3]],\n    [m[4], m[5], m[6], m[7]],\n    [m[8], m[9], m[10], m[11]],\n    [m[12], m[13], m[14], m[15]],\n  ] as AffineMatrix;\n}\n\nfunction maybeFlattenMatrix(\n  matrix: AffineMatrix | AffineMatrixFlat\n): AffineMatrixFlat {\n  'worklet';\n  return isAffineMatrix(matrix) ? flatten(matrix) : matrix;\n}\n\nexport function multiplyMatrices(\n  a: AffineMatrix,\n  b: AffineMatrix\n): AffineMatrix {\n  'worklet';\n  return [\n    [\n      a[0][0] * b[0][0] +\n        a[0][1] * b[1][0] +\n        a[0][2] * b[2][0] +\n        a[0][3] * b[3][0],\n\n      a[0][0] * b[0][1] +\n        a[0][1] * b[1][1] +\n        a[0][2] * b[2][1] +\n        a[0][3] * b[3][1],\n\n      a[0][0] * b[0][2] +\n        a[0][1] * b[1][2] +\n        a[0][2] * b[2][2] +\n        a[0][3] * b[3][2],\n\n      a[0][0] * b[0][3] +\n        a[0][1] * b[1][3] +\n        a[0][2] * b[2][3] +\n        a[0][3] * b[3][3],\n    ],\n    [\n      a[1][0] * b[0][0] +\n        a[1][1] * b[1][0] +\n        a[1][2] * b[2][0] +\n        a[1][3] * b[3][0],\n\n      a[1][0] * b[0][1] +\n        a[1][1] * b[1][1] +\n        a[1][2] * b[2][1] +\n        a[1][3] * b[3][1],\n\n      a[1][0] * b[0][2] +\n        a[1][1] * b[1][2] +\n        a[1][2] * b[2][2] +\n        a[1][3] * b[3][2],\n\n      a[1][0] * b[0][3] +\n        a[1][1] * b[1][3] +\n        a[1][2] * b[2][3] +\n        a[1][3] * b[3][3],\n    ],\n    [\n      a[2][0] * b[0][0] +\n        a[2][1] * b[1][0] +\n        a[2][2] * b[2][0] +\n        a[2][3] * b[3][0],\n\n      a[2][0] * b[0][1] +\n        a[2][1] * b[1][1] +\n        a[2][2] * b[2][1] +\n        a[2][3] * b[3][1],\n\n      a[2][0] * b[0][2] +\n        a[2][1] * b[1][2] +\n        a[2][2] * b[2][2] +\n        a[2][3] * b[3][2],\n\n      a[2][0] * b[0][3] +\n        a[2][1] * b[1][3] +\n        a[2][2] * b[2][3] +\n        a[2][3] * b[3][3],\n    ],\n    [\n      a[3][0] * b[0][0] +\n        a[3][1] * b[1][0] +\n        a[3][2] * b[2][0] +\n        a[3][3] * b[3][0],\n\n      a[3][0] * b[0][1] +\n        a[3][1] * b[1][1] +\n        a[3][2] * b[2][1] +\n        a[3][3] * b[3][1],\n\n      a[3][0] * b[0][2] +\n        a[3][1] * b[1][2] +\n        a[3][2] * b[2][2] +\n        a[3][3] * b[3][2],\n\n      a[3][0] * b[0][3] +\n        a[3][1] * b[1][3] +\n        a[3][2] * b[2][3] +\n        a[3][3] * b[3][3],\n    ],\n  ];\n}\n\nexport function subtractMatrices<T extends AffineMatrixFlat | AffineMatrix>(\n  maybeFlatA: T,\n  maybeFlatB: T\n): T {\n  'worklet';\n  const isFlatOnStart = isAffineMatrixFlat(maybeFlatA);\n  const a: AffineMatrixFlat = maybeFlattenMatrix(maybeFlatA);\n  const b: AffineMatrixFlat = maybeFlattenMatrix(maybeFlatB);\n\n  const c = a.map((_, i) => a[i] - b[i]) as AffineMatrixFlat;\n  return isFlatOnStart ? (c as T) : (unflatten(c) as T);\n}\n\nexport function addMatrices<T extends AffineMatrixFlat | AffineMatrix>(\n  maybeFlatA: T,\n  maybeFlatB: T\n): T {\n  'worklet';\n  const isFlatOnStart = isAffineMatrixFlat(maybeFlatA);\n  const a = maybeFlattenMatrix(maybeFlatA);\n  const b = maybeFlattenMatrix(maybeFlatB);\n\n  const c = a.map((_, i) => a[i] + b[i]) as AffineMatrixFlat;\n  return isFlatOnStart ? (c as T) : (unflatten(c) as T);\n}\n\nexport function scaleMatrix<T extends AffineMatrixFlat | AffineMatrix>(\n  maybeFlatA: T,\n  scalar: number\n): T {\n  'worklet';\n  const isFlatOnStart = isAffineMatrixFlat(maybeFlatA);\n  const a = maybeFlattenMatrix(maybeFlatA);\n\n  const b = a.map((x) => x * scalar) as AffineMatrixFlat;\n  return isFlatOnStart ? (b as T) : (unflatten(b) as T);\n}\n\nexport function getRotationMatrix(\n  angle: number,\n  axis: Axis = 'z'\n): AffineMatrix {\n  'worklet';\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  switch (axis) {\n    case 'z':\n      return [\n        [cos, sin, 0, 0],\n        [-sin, cos, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n      ];\n    case 'y':\n      return [\n        [cos, 0, -sin, 0],\n        [0, 1, 0, 0],\n        [sin, 0, cos, 0],\n        [0, 0, 0, 1],\n      ];\n    case 'x':\n      return [\n        [1, 0, 0, 0],\n        [0, cos, sin, 0],\n        [0, -sin, cos, 0],\n        [0, 0, 0, 1],\n      ];\n  }\n}\n\nfunction norm3d(x: number, y: number, z: number) {\n  'worklet';\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\nfunction transposeMatrix(matrix: AffineMatrix): AffineMatrix {\n  'worklet';\n  const m = flatten(matrix);\n  return [\n    [m[0], m[4], m[8], m[12]],\n    [m[1], m[5], m[9], m[13]],\n    [m[2], m[6], m[10], m[14]],\n    [m[3], m[7], m[11], m[15]],\n  ];\n}\n\nfunction assertVectorsHaveEqualLengths(a: number[], b: number[]) {\n  'worklet';\n  if (__DEV__ && a.length !== b.length) {\n    throw new Error(\n      `[Reanimated] Cannot calculate inner product of two vectors of different lengths. Length of ${a} is ${a.length} and length of ${b} is ${b.length}.`\n    );\n  }\n}\n\nfunction innerProduct(a: number[], b: number[]) {\n  'worklet';\n  assertVectorsHaveEqualLengths(a, b);\n  return a.reduce((acc, _, i) => acc + a[i] * b[i], 0);\n}\n\nfunction projection(u: number[], a: number[]) {\n  'worklet';\n  assertVectorsHaveEqualLengths(u, a);\n  const s = innerProduct(u, a) / innerProduct(u, u);\n  return u.map((e) => e * s);\n}\n\nfunction subtractVectors(a: number[], b: number[]) {\n  'worklet';\n  assertVectorsHaveEqualLengths(a, b);\n  return a.map((_, i) => a[i] - b[i]);\n}\n\nfunction scaleVector(u: number[], a: number) {\n  'worklet';\n  return u.map((e) => e * a);\n}\n\nfunction gramSchmidtAlgorithm(matrix: AffineMatrix): {\n  rotationMatrix: AffineMatrix;\n  skewMatrix: AffineMatrix;\n} {\n  // Gram-Schmidt orthogonalization decomposes any matrix with non-zero determinant into an orthogonal and a triangular matrix\n  // These matrices are equal to rotation and skew matrices respectively, because we apply it to transformation matrix\n  // That is expected to already have extracted the remaining transforms (scale & translation)\n  'worklet';\n  const [a0, a1, a2, a3] = matrix;\n\n  const u0 = a0;\n  const u1 = subtractVectors(a1, projection(u0, a1));\n  const u2 = subtractVectors(\n    subtractVectors(a2, projection(u0, a2)),\n    projection(u1, a2)\n  );\n  const u3 = subtractVectors(\n    subtractVectors(\n      subtractVectors(a3, projection(u0, a3)),\n      projection(u1, a3)\n    ),\n    projection(u2, a3)\n  );\n\n  const [e0, e1, e2, e3] = [u0, u1, u2, u3].map((u) =>\n    scaleVector(u, 1 / Math.sqrt(innerProduct(u, u)))\n  );\n\n  const rotationMatrix: AffineMatrix = [\n    [e0[0], e1[0], e2[0], e3[0]],\n    [e0[1], e1[1], e2[1], e3[1]],\n    [e0[2], e1[2], e2[2], e3[2]],\n    [e0[3], e1[3], e2[3], e3[3]],\n  ];\n\n  const skewMatrix: AffineMatrix = [\n    [\n      innerProduct(e0, a0),\n      innerProduct(e0, a1),\n      innerProduct(e0, a2),\n      innerProduct(e0, a3),\n    ],\n    [0, innerProduct(e1, a1), innerProduct(e1, a2), innerProduct(e1, a3)],\n    [0, 0, innerProduct(e2, a2), innerProduct(e2, a3)],\n    [0, 0, 0, innerProduct(e3, a3)],\n  ];\n  return {\n    rotationMatrix: transposeMatrix(rotationMatrix),\n    skewMatrix: transposeMatrix(skewMatrix),\n  };\n}\n\n// ts-prune-ignore-next This function is exported to be tested\nexport function decomposeMatrix(\n  unknownTypeMatrix: AffineMatrixFlat | AffineMatrix\n): TransformMatrixDecomposition {\n  'worklet';\n  const matrix = maybeFlattenMatrix(unknownTypeMatrix);\n\n  // normalize matrix\n  if (matrix[15] === 0) {\n    throw new Error('[Reanimated] Invalid transform matrix.');\n  }\n  matrix.forEach((_, i) => (matrix[i] /= matrix[15]));\n\n  const translationMatrix: AffineMatrix = [\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [matrix[12], matrix[13], matrix[14], 1],\n  ];\n  const sx = matrix[15] * norm3d(matrix[0], matrix[4], matrix[8]);\n  const sy = matrix[15] * norm3d(matrix[1], matrix[5], matrix[9]);\n  const sz = matrix[15] * norm3d(matrix[2], matrix[6], matrix[10]);\n\n  const scaleMatrix: AffineMatrix = [\n    [sx, 0, 0, 0],\n    [0, sy, 0, 0],\n    [0, 0, sz, 0],\n    [0, 0, 0, 1],\n  ];\n\n  const rotationAndSkewMatrix: AffineMatrix = [\n    [matrix[0] / sx, matrix[1] / sx, matrix[2] / sx, 0],\n    [matrix[4] / sy, matrix[5] / sy, matrix[6] / sy, 0],\n    [matrix[8] / sz, matrix[9] / sz, matrix[10] / sz, 0],\n    [0, 0, 0, 1],\n  ];\n\n  const { rotationMatrix, skewMatrix } = gramSchmidtAlgorithm(\n    rotationAndSkewMatrix\n  );\n\n  return {\n    translationMatrix,\n    scaleMatrix,\n    rotationMatrix,\n    skewMatrix,\n  };\n}\n\nexport function decomposeMatrixIntoMatricesAndAngles(\n  matrix: AffineMatrixFlat | AffineMatrix\n): TansformMatrixDecompositionWithAngles {\n  'worklet';\n  const { scaleMatrix, rotationMatrix, translationMatrix, skewMatrix } =\n    decomposeMatrix(matrix);\n\n  const sinRy = -rotationMatrix[0][2];\n\n  const ry = Math.asin(sinRy);\n  let rx;\n  let rz;\n  if (sinRy === 1 || sinRy === -1) {\n    rz = 0;\n    rx = Math.atan2(sinRy * rotationMatrix[0][1], sinRy * rotationMatrix[0][2]);\n  } else {\n    rz = Math.atan2(rotationMatrix[0][1], rotationMatrix[0][0]);\n    rx = Math.atan2(rotationMatrix[1][2], rotationMatrix[2][2]);\n  }\n\n  return {\n    scaleMatrix,\n    rotationMatrix,\n    translationMatrix,\n    skewMatrix,\n    rx: rx || 0,\n    ry: ry || 0,\n    rz: rz || 0,\n  };\n}\n"],"mappings":"AAAA,YAAY,QAAAA,cAAA,gDAAAC,gCAAA,EAAAC,IAAA,4JA4BZ,UAAgB,CAAAC,kBAAkB,CAA3B,eAAAA,kBAAA,UAAAA,mBAA4BC,CAAU,CAAyB,CAEpE,MACE,CAAAC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAChBA,CAAC,CAACG,MAAM,GAAK,EAAE,EACfH,CAAC,CAACI,KAAK,CAAE,SAAAC,OAAO,QAAK,OAAO,CAAAA,OAAO,GAAK,QAAQ,EAAI,CAACC,KAAK,CAACD,OAAO,CAAC,GAAC,CAExE,EAAAN,kBAAA,CAAAQ,SAAA,IAAAR,kBAAA,CAAAS,aAAA,eAAAT,kBAAA,CAAAU,UAAA,CAAAZ,gCAAA,QAAAE,kBAAA,EAPO,GAOP,IAAAW,iCAAA,EAAAZ,IAAA,6NAGA,UAAgB,CAAAa,cAAc,CAAvB,eAAAA,cAAA,UAAAA,eAAwBX,CAAU,CAAqB,CAE5D,MACE,CAAAC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAChBA,CAAC,CAACG,MAAM,GAAK,CAAC,EACdH,CAAC,CAACI,KAAK,CACJ,SAAAQ,GAAG,QACF,CAAAX,KAAK,CAACC,OAAO,CAACU,GAAG,CAAC,EAClBA,GAAG,CAACT,MAAM,GAAK,CAAC,EAChBS,GAAG,CAACR,KAAK,CAAE,SAAAC,OAAO,QAAK,OAAO,CAAAA,OAAO,GAAK,QAAQ,EAAI,CAACC,KAAK,CAACD,OAAO,CAAC,GAAC,GACzE,CAEL,EAAAM,cAAA,CAAAJ,SAAA,IAAAI,cAAA,CAAAH,aAAA,gBAAAG,cAAA,CAAAF,UAAA,CAAAC,iCAAA,QAAAC,cAAA,EAZO,GAYP,IAAAE,gCAAA,EAAAf,IAAA,oDAEA,UAAgB,CAAAgB,OAAO,CAAhB,eAAAA,OAAA,UAAAA,QAAiBC,MAAoB,CAAoB,CAE9D,MAAO,CAAAA,MAAM,CAACC,IAAI,EAAE,CACtB,EAAAF,OAAA,CAAAP,SAAA,IAAAO,OAAA,CAAAN,aAAA,eAAAM,OAAA,CAAAL,UAAA,CAAAI,gCAAA,QAAAC,OAAA,EAHO,GAGP,IAAAG,gCAAA,EAAAnB,IAAA,kIAGA,UAAgB,CAAAoB,SAAS,CAAlB,eAAAA,SAAA,UAAAA,UAAmBC,CAAmB,CAAgB,CAE3D,MAAO,CACL,CAACA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CACxB,CAACA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CACxB,CAACA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAC,CAAEA,CAAC,CAAC,EAAE,CAAC,CAAEA,CAAC,CAAC,EAAE,CAAC,CAAC,CAC1B,CAACA,CAAC,CAAC,EAAE,CAAC,CAAEA,CAAC,CAAC,EAAE,CAAC,CAAEA,CAAC,CAAC,EAAE,CAAC,CAAEA,CAAC,CAAC,EAAE,CAAC,CAAC,CAC7B,CACH,EAAAD,SAAA,CAAAX,SAAA,IAAAW,SAAA,CAAAV,aAAA,eAAAU,SAAA,CAAAT,UAAA,CAAAQ,gCAAA,QAAAC,SAAA,EARO,GAQP,IAAAE,+BAAA,EAAAtB,IAAA,+IAES,CAAAuB,kBAAkB,CAA3B,eAAAA,kBAAA,UAAAA,mBACEN,MAAuC,CACrB,CAElB,MAAO,CAAAJ,cAAc,CAACI,MAAM,CAAC,CAAGD,OAAO,CAACC,MAAM,CAAC,CAAGA,MAAM,CAC1D,EAAAM,kBAAA,CAAAd,SAAA,EAAAI,cAAA,CADSA,cAAc,CAAAG,OAAA,CAAWA,OAAO,EAAAO,kBAAA,CAAAb,aAAA,cAAAa,kBAAA,CAAAZ,UAAA,CAAAW,+BAAA,QAAAC,kBAAA,EAJzC,OAAAC,gCAAA,EAAAxB,IAAA,qjCAOA,UAAgB,CAAAyB,gBAAgB,CAAzB,eAAAA,gBAAA,UAAAA,iBACLC,CAAe,CACfC,CAAe,CACD,CAEd,MAAO,CACL,CACED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpB,CACD,CACED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpB,CACD,CACED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpB,CACD,CACED,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAEnBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACfD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAGC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}