{"ast":null,"code":"'use strict';import{useRef}from'react';import{makeMutable}from'./core';var _worklet_4365650429626_init_data={code:\"function anonymous(descriptors){const{item}=this.__closure;const index=descriptors.findIndex(function(descriptor){return descriptor.tag===item.tag;});if(index!==-1){descriptors[index]=item;}else{descriptors.push(item);}return descriptors;}\"};var _worklet_6739515972732_init_data={code:\"function anonymous(descriptors){const{viewTag}=this.__closure;const index=descriptors.findIndex(function(descriptor){return descriptor.tag===viewTag;});if(index!==-1){descriptors.splice(index,1);}return descriptors;}\"};export function makeViewDescriptorsSet(){var shareableViewDescriptors=makeMutable([]);var data={shareableViewDescriptors:shareableViewDescriptors,add:function add(item){shareableViewDescriptors.modify(function(){var anonymous=function anonymous(descriptors){var index=descriptors.findIndex(function(descriptor){return descriptor.tag===item.tag;});if(index!==-1){descriptors[index]=item;}else{descriptors.push(item);}return descriptors;};anonymous.__closure={item:item};anonymous.__workletHash=4365650429626;anonymous.__initData=_worklet_4365650429626_init_data;return anonymous;}(),false);},remove:function remove(viewTag){shareableViewDescriptors.modify(function(){var anonymous=function anonymous(descriptors){var index=descriptors.findIndex(function(descriptor){return descriptor.tag===viewTag;});if(index!==-1){descriptors.splice(index,1);}return descriptors;};anonymous.__closure={viewTag:viewTag};anonymous.__workletHash=6739515972732;anonymous.__initData=_worklet_6739515972732_init_data;return anonymous;}(),false);}};return data;}export function useViewRefSet(){var ref=useRef(null);if(ref.current===null){var data={items:new Set(),add:function add(item){if(data.items.has(item))return;data.items.add(item);},remove:function remove(item){data.items.delete(item);}};ref.current=data;}return ref.current;}","map":{"version":3,"sources":["ViewDescriptorsSet.ts"],"names":["useRef","makeMutable","makeViewDescriptorsSet","shareableViewDescriptors","data","add","item","modify","descriptors","index","findIndex","descriptor","tag","push","remove","viewTag","splice","useViewRefSet","ref","current","items","Set","has","delete"],"mappings":"AAAA,YAAY,CACZ,OAASA,MAAM,KAAQ,OAAO,CAC9B,OAASC,WAAW,KAAQ,QAAQ,CAAA,IAAA,gCAAA,EAAA,IAAA,wPAAA,gCAAA,EAAA,IAAA,6NAgBpC,MAAO,SAASC,CAAAA,sBAAsBA,CAAAA,CAAuB,CAC3D,GAAMC,CAAAA,wBAAwB,CAAGF,WAAW,CAAe,EAAE,CAAC,CAC9D,GAAMG,CAAAA,IAAwB,CAAG,CAC/BD,wBAAwB,CAAxBA,wBAAwB,CACxBE,GAAG,CAAGC,SAAAA,IAAAA,IAAgB,CAAK,CACzBH,wBAAwB,CAACI,MAAM,CAAEC,eAAAA,SAAAA,UAAAA,UAAAA,WAAyB,CAAK,CAE7D,GAAMC,CAAAA,KAAK,CAAGD,WAAW,CAACE,SAAS,CAChCC,SAAAA,UAAU,QAAKA,CAAAA,UAAU,CAACC,GAAG,GAAKN,IAAI,CAACM,GAAG,GAC5C,CACD,GAAIH,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBD,WAAW,CAACC,KAAK,CAAC,CAAGH,IAAI,CAC3B,CAAC,IAAM,CACLE,WAAW,CAACK,IAAI,CAACP,IAAI,CAAC,CACxB,CACA,MAAOE,CAAAA,WAAW,CACpB,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,IAAA,CARsCF,IAAI,EAAA,SAAA,CAAA,aAAA,eAAA,SAAA,CAAA,UAAA,CAAA,gCAAA,QAAA,SAAA,EAHVE,GAW9B,KAAK,CAAC,CACX,CAAC,CAEDM,MAAM,CAAGC,SAAAA,OAAAA,OAAe,CAAK,CAC3BZ,wBAAwB,CAACI,MAAM,CAAEC,eAAAA,SAAAA,UAAAA,UAAAA,WAAyB,CAAK,CAE7D,GAAMC,CAAAA,KAAK,CAAGD,WAAW,CAACE,SAAS,CAChCC,SAAAA,UAAU,QAAKA,CAAAA,UAAU,CAACC,GAAG,GAAKG,OAAO,GAC3C,CACD,GAAIN,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBD,WAAW,CAACQ,MAAM,CAACP,KAAK,CAAE,CAAC,CAAC,CAC9B,CACA,MAAOD,CAAAA,WAAW,CACpB,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,OAAA,CANsCO,OAAO,EAAA,SAAA,CAAA,aAAA,eAAA,SAAA,CAAA,UAAA,CAAA,gCAAA,QAAA,SAAA,EAHbP,GAS9B,KAAK,CAAC,CACX,CACF,CAAC,CACD,MAAOJ,CAAAA,IAAI,CACb,CAEA,MAAO,SAASa,CAAAA,aAAaA,CAAAA,CAAqB,CAChD,GAAMC,CAAAA,GAAG,CAAGlB,MAAM,CAAuB,IAAI,CAAC,CAC9C,GAAIkB,GAAG,CAACC,OAAO,GAAK,IAAI,CAAE,CACxB,GAAMf,CAAAA,IAAmB,CAAG,CAC1BgB,KAAK,CAAE,GAAIC,CAAAA,GAAG,CAAA,CAAE,CAEhBhB,GAAG,CAAGC,SAAAA,IAAAA,IAAO,CAAK,CAChB,GAAIF,IAAI,CAACgB,KAAK,CAACE,GAAG,CAAChB,IAAI,CAAC,CAAE,OAC1BF,IAAI,CAACgB,KAAK,CAACf,GAAG,CAACC,IAAI,CAAC,CACtB,CAAC,CAEDQ,MAAM,CAAGR,SAAAA,OAAAA,IAAO,CAAK,CACnBF,IAAI,CAACgB,KAAK,CAACG,MAAM,CAACjB,IAAI,CAAC,CACzB,CACF,CAAC,CACDY,GAAG,CAACC,OAAO,CAAGf,IAAI,CACpB,CAEA,MAAOc,CAAAA,GAAG,CAACC,OAAO,CACpB","sourcesContent":["'use strict';\nimport { useRef } from 'react';\nimport { makeMutable } from './core';\nimport type { SharedValue } from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\n\nexport interface ViewRefSet<T> {\n  items: Set<T>;\n  add: (item: T) => void;\n  remove: (item: T) => void;\n}\n\nexport interface ViewDescriptorsSet {\n  shareableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const shareableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    shareableViewDescriptors,\n    add: (item: Descriptor) => {\n      shareableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      }, false);\n    },\n\n    remove: (viewTag: number) => {\n      shareableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      }, false);\n    },\n  };\n  return data;\n}\n\nexport function useViewRefSet<T>(): ViewRefSet<T> {\n  const ref = useRef<ViewRefSet<T> | null>(null);\n  if (ref.current === null) {\n    const data: ViewRefSet<T> = {\n      items: new Set(),\n\n      add: (item: T) => {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n\n      remove: (item: T) => {\n        data.items.delete(item);\n      },\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module"}