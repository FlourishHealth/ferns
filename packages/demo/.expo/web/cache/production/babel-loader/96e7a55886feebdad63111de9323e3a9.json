{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _toArray from\"@babel/runtime/helpers/toArray\";import{Platform}from'expo-modules-core';import*as rtlDetect from'rtl-detect';var getNavigatorLocales=function getNavigatorLocales(){return Platform.isDOMAvailable?navigator.languages||[navigator.language]:[];};var WEB_LANGUAGE_CHANGE_EVENT='languagechange';var USES_FAHRENHEIT=['AG','BZ','VG','FM','MH','MS','KN','BS','CY','TC','US','LR','PW','KY'];export function addLocaleListener(listener){addEventListener(WEB_LANGUAGE_CHANGE_EVENT,listener);return{remove:function remove(){return removeEventListener(WEB_LANGUAGE_CHANGE_EVENT,listener);}};}export function addCalendarListener(listener){addEventListener(WEB_LANGUAGE_CHANGE_EVENT,listener);return{remove:function remove(){return removeEventListener(WEB_LANGUAGE_CHANGE_EVENT,listener);}};}export function removeSubscription(subscription){subscription.remove();}export default{get currency(){return null;},get decimalSeparator(){return 1.1.toLocaleString().substring(1,2);},get digitGroupingSeparator(){var value=1000 .toLocaleString();return value.length===5?value.substring(1,2):'';},get isRTL(){var _rtlDetect$isRtlLang;return(_rtlDetect$isRtlLang=rtlDetect.isRtlLang(this.locale))!=null?_rtlDetect$isRtlLang:false;},get isMetric(){var region=this.region;switch(region){case'US':case'LR':case'MM':return false;}return true;},get locale(){if(!Platform.isDOMAvailable){return'';}var locale=navigator.language||navigator['systemLanguage']||navigator['browserLanguage']||navigator['userLanguage']||this.locales[0];return locale;},get locales(){if(!Platform.isDOMAvailable){return[];}var _navigator=navigator,_navigator$languages=_navigator.languages,languages=_navigator$languages===void 0?[]:_navigator$languages;return Array.from(languages);},get timezone(){var defaultTimeZone='Etc/UTC';if(typeof Intl==='undefined'){return defaultTimeZone;}return Intl.DateTimeFormat().resolvedOptions().timeZone||defaultTimeZone;},get isoCurrencyCodes(){return[];},get region(){var locale=this.locale;var _ref=typeof locale==='string'?locale.split('-'):[],_ref2=_toArray(_ref),suffixes=_ref2.slice(1);for(var suffix of suffixes){if(suffix.length===2){return suffix.toUpperCase();}}return null;},getLocales:function getLocales(){var locales=getNavigatorLocales();return locales==null?void 0:locales.map(function(languageTag){var locale=typeof Intl!=='undefined'?new Intl.Locale(languageTag):{region:null,textInfo:null,language:null};var region=locale.region,textInfo=locale.textInfo,language=locale.language;var digitGroupingSeparator=Array.from(10000 .toLocaleString(languageTag)).filter(function(c){return c>'9'||c<'0';})[0]||null;var decimalSeparator=1.1.toLocaleString(languageTag).substring(1,2);var temperatureUnit=region?regionToTemperatureUnit(region):null;return{languageTag:languageTag,languageCode:language||languageTag.split('-')[0]||'en',textDirection:(textInfo==null?void 0:textInfo.direction)||null,digitGroupingSeparator:digitGroupingSeparator,decimalSeparator:decimalSeparator,measurementSystem:null,currencyCode:null,currencySymbol:null,regionCode:region||null,temperatureUnit:temperatureUnit};});},getCalendars:function getCalendars(){var _ref3,_locale$calendars,_locale$timeZones,_startsWith,_ref4,_locale$hourCycles,_locale$weekInfo;var locale=(_ref3=typeof Intl!=='undefined'?Intl.DateTimeFormat().resolvedOptions():null)!=null?_ref3:null;return[{calendar:(locale==null?void 0:locale.calendar)||(locale==null?void 0:(_locale$calendars=locale.calendars)==null?void 0:_locale$calendars[0])||null,timeZone:(locale==null?void 0:locale.timeZone)||(locale==null?void 0:(_locale$timeZones=locale.timeZones)==null?void 0:_locale$timeZones[0])||null,uses24hourClock:(_startsWith=(_ref4=(locale==null?void 0:locale.hourCycle)||(locale==null?void 0:(_locale$hourCycles=locale.hourCycles)==null?void 0:_locale$hourCycles[0]))==null?void 0:_ref4.startsWith('h2'))!=null?_startsWith:null,firstWeekday:(locale==null?void 0:(_locale$weekInfo=locale.weekInfo)==null?void 0:_locale$weekInfo.firstDay)||null}];},getLocalizationAsync:function(){var _getLocalizationAsync=_asyncToGenerator(function*(){var currency=this.currency,decimalSeparator=this.decimalSeparator,digitGroupingSeparator=this.digitGroupingSeparator,isoCurrencyCodes=this.isoCurrencyCodes,isMetric=this.isMetric,isRTL=this.isRTL,locale=this.locale,locales=this.locales,region=this.region,timezone=this.timezone;return{currency:currency,decimalSeparator:decimalSeparator,digitGroupingSeparator:digitGroupingSeparator,isoCurrencyCodes:isoCurrencyCodes,isMetric:isMetric,isRTL:isRTL,locale:locale,locales:locales,region:region,timezone:timezone};});function getLocalizationAsync(){return _getLocalizationAsync.apply(this,arguments);}return getLocalizationAsync;}()};function regionToTemperatureUnit(region){return USES_FAHRENHEIT.includes(region)?'fahrenheit':'celsius';}","map":{"version":3,"sources":["../src/ExpoLocalization.ts"],"names":[],"mappings":"4HACA,OAAS,QAAQ,KAAsB,mBAAmB,CAC1D,MAAO,GAAK,CAAA,SAAS,KAAM,YAAY,CAIvC,GAAM,CAAA,mBAAmB,CAAG,QAAtB,CAAA,mBAAmB,CAAA,CAAQ,CAC/B,MAAO,CAAA,QAAQ,CAAC,cAAc,CAAG,SAAS,CAAC,SAAS,EAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAG,EAAE,CACnF,CAAC,CAaD,GAAM,CAAA,yBAAyB,CAAG,gBAAgB,CAElD,GAAM,CAAA,eAAe,CAAG,CACtB,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACJ,IAAI,CACL,CAED,MAAM,SAAU,CAAA,iBAAiB,CAAC,QAAyB,CAAA,CACzD,gBAAgB,CAAC,yBAAyB,CAAE,QAAQ,CAAC,CACrD,MAAO,CACL,MAAM,CAAE,SAAA,OAAA,QAAM,CAAA,mBAAmB,CAAC,yBAAyB,CAAE,QAAQ,CAAC,E,CACvE,CACH,CAEA,MAAM,SAAU,CAAA,mBAAmB,CAAC,QAAyB,CAAA,CAC3D,gBAAgB,CAAC,yBAAyB,CAAE,QAAQ,CAAC,CACrD,MAAO,CACL,MAAM,CAAE,SAAA,OAAA,QAAM,CAAA,mBAAmB,CAAC,yBAAyB,CAAE,QAAQ,CAAC,E,CACvE,CACH,CAEA,MAAM,SAAU,CAAA,kBAAkB,CAAC,YAA0B,CAAA,CAC3D,YAAY,CAAC,MAAM,CAAA,CAAE,CACvB,CAEA,cAAe,CACb,GAAI,CAAA,QAAQ,CAAA,CAAA,CAEV,MAAO,KAAI,CACb,CAAC,CACD,GAAI,CAAA,gBAAgB,CAAA,CAAA,CAClB,MAAQ,IAAG,CAAE,cAAc,CAAA,CAAE,CAAC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAC/C,CAAC,CACD,GAAI,CAAA,sBAAsB,CAAA,CAAA,CACxB,GAAM,CAAA,KAAK,CAAI,IAAI,EAAE,cAAc,CAAA,CAAE,CACrC,MAAO,CAAA,KAAK,CAAC,MAAM,GAAK,CAAC,CAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAG,EAAE,CACxD,CAAC,CACD,GAAI,CAAA,KAAK,CAAA,CAAA,KAAA,oBAAA,CACP,OAAA,oBAAA,CAAO,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAA,oBAAA,CAAI,KAAK,CAClD,CAAC,CACD,GAAI,CAAA,QAAQ,CAAA,CAAA,CACV,GAAQ,CAAA,MAAM,CAAK,IAAI,CAAf,MAAM,CACd,OAAQ,MAAM,EACZ,IAAK,IAAI,CACT,IAAK,IAAI,CACT,IAAK,IAAI,CACP,MAAO,MAAK,CACf,CACD,MAAO,KAAI,CACb,CAAC,CACD,GAAI,CAAA,MAAM,CAAA,CAAA,CACR,GAAI,CAAC,QAAQ,CAAC,cAAc,CAAE,CAC5B,MAAO,EAAE,CACV,CACD,GAAM,CAAA,MAAM,CACV,SAAS,CAAC,QAAQ,EAClB,SAAS,CAAC,gBAAgB,CAAC,EAC3B,SAAS,CAAC,iBAAiB,CAAC,EAC5B,SAAS,CAAC,cAAc,CAAC,EACzB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CACjB,MAAO,CAAA,MAAM,CACf,CAAC,CACD,GAAI,CAAA,OAAO,CAAA,CAAA,CACT,GAAI,CAAC,QAAQ,CAAC,cAAc,CAAE,CAC5B,MAAO,EAAE,CACV,CACD,IAAA,UAAA,CAA2B,SAAS,CAAA,oBAAA,CAAA,UAAA,CAA5B,SAAS,CAAT,SAAS,CAAA,oBAAA,UAAG,EAAE,CAAA,oBAAA,CACtB,MAAO,CAAA,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAC9B,CAAC,CACD,GAAI,CAAA,QAAQ,CAAA,CAAA,CACV,GAAM,CAAA,eAAe,CAAG,SAAS,CACjC,GAAI,MAAO,CAAA,IAAI,GAAK,WAAW,CAAE,CAC/B,MAAO,CAAA,eAAe,CACvB,CACD,MAAO,CAAA,IAAI,CAAC,cAAc,CAAA,CAAE,CAAC,eAAe,CAAA,CAAE,CAAC,QAAQ,EAAI,eAAe,CAC5E,CAAC,CACD,GAAI,CAAA,gBAAgB,CAAA,CAAA,CAElB,MAAO,EAAE,CACX,CAAC,CACD,GAAI,CAAA,MAAM,CAAA,CAAA,CAGR,GAAQ,CAAA,MAAM,CAAK,IAAI,CAAf,MAAM,CACd,IAAA,IAAA,CAAwB,MAAO,CAAA,MAAM,GAAK,QAAQ,CAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAG,EAAE,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,EAA/D,QAAQ,CAAA,KAAA,CAAA,KAAA,IACpB,IAAK,GAAM,CAAA,MAAM,GAAI,CAAA,QAAQ,CAAE,CAC7B,GAAI,MAAM,CAAC,MAAM,GAAK,CAAC,CAAE,CACvB,MAAO,CAAA,MAAM,CAAC,WAAW,CAAA,CAAE,CAC5B,CACF,CACD,MAAO,KAAI,CACb,CAAC,CAED,UAAU,UAAA,WAAA,CAAA,CACR,GAAM,CAAA,OAAO,CAAG,mBAAmB,CAAA,CAAE,CACrC,MAAO,CAAA,OAAO,cAAP,OAAO,CAAE,GAAG,CAAC,SAAC,WAAW,CAAI,CAGlC,GAAM,CAAA,MAAM,CACV,MAAO,CAAA,IAAI,GAAK,WAAW,CACtB,GAAI,CAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAA+B,CAC3D,CAAE,MAAM,CAAE,IAAI,CAAE,QAAQ,CAAE,IAAI,CAAE,QAAQ,CAAE,IAAI,CAAE,CACtD,GAAQ,CAAA,MAAM,CAAyB,MAAM,CAArC,MAAM,CAAE,QAAQ,CAAe,MAAM,CAA7B,QAAQ,CAAE,QAAQ,CAAK,MAAM,CAAnB,QAAQ,CAGlC,GAAM,CAAA,sBAAsB,CAC1B,KAAK,CAAC,IAAI,CAAE,KAAK,EAAE,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,SAAC,CAAC,QAAK,CAAA,CAAC,CAAG,GAAG,EAAI,CAAC,CAAG,GAAG,GAAC,CAAC,CAAC,CAAC,EACpF,IAAI,CACN,GAAM,CAAA,gBAAgB,CAAI,GAAG,CAAE,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAC1E,GAAM,CAAA,eAAe,CAAG,MAAM,CAAG,uBAAuB,CAAC,MAAM,CAAC,CAAG,IAAI,CAEvE,MAAO,CACL,WAAW,CAAX,WAAW,CACX,YAAY,CAAE,QAAQ,EAAI,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAI,IAAI,CAC3D,aAAa,CAAG,CAAA,QAAQ,cAAR,QAAQ,CAAE,SAA2B,GAAI,IAAI,CAC7D,sBAAsB,CAAtB,sBAAsB,CACtB,gBAAgB,CAAhB,gBAAgB,CAChB,iBAAiB,CAAE,IAAI,CACvB,YAAY,CAAE,IAAI,CAClB,cAAc,CAAE,IAAI,CACpB,UAAU,CAAE,MAAM,EAAI,IAAI,CAC1B,eAAe,CAAf,e,CACD,CACH,CAAC,CAAC,CACJ,CAAC,CACD,YAAY,UAAA,aAAA,CAAA,KAAA,KAAA,CAAA,iBAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,gBAAA,CACV,GAAM,CAAA,MAAM,EAAA,KAAA,CAAK,MAAO,CAAA,IAAI,GAAK,WAAW,CACxC,IAAI,CAAC,cAAc,CAAA,CAAE,CAAC,eAAe,CAAA,CAAE,CACvC,IAAI,QAAA,KAAA,CAAK,IAAyC,CACtD,MAAO,CACL,CACE,QAAQ,CAAI,CAAA,MAAM,cAAN,MAAM,CAAE,QAAQ,IAAI,MAAM,eAAA,iBAAA,CAAN,MAAM,CAAE,SAAS,eAAjB,iBAAA,CAAoB,CAAC,CAAC,GAA4B,IAAI,CACtF,QAAQ,CAAE,CAAA,MAAM,cAAN,MAAM,CAAE,QAAQ,IAAI,MAAM,eAAA,iBAAA,CAAN,MAAM,CAAE,SAAS,eAAjB,iBAAA,CAAoB,CAAC,CAAC,GAAI,IAAI,CAC5D,eAAe,EAAA,WAAA,EAAA,KAAA,CAAG,CAAA,MAAM,cAAN,MAAM,CAAE,SAAS,IAAI,MAAM,eAAA,kBAAA,CAAN,MAAM,CAAE,UAAU,eAAlB,kBAAA,CAAqB,CAAC,CAAC,gBAA7C,KAAA,CAAgD,UAAU,CAAC,IAAI,CAAC,QAAA,WAAA,CAAI,IAAI,CACzF,YAAY,CAAE,CAAA,MAAM,eAAA,gBAAA,CAAN,MAAM,CAAE,QAAQ,eAAhB,gBAAA,CAAkB,QAAQ,GAAI,I,CAC7C,CACF,CACH,CAAC,CAEK,oBAAoB,gBAAA,qBAAA,CAAA,iBAAA,YAAA,CACxB,GACE,CAAA,QAAQ,CAUN,IAAI,CAVN,QAAQ,CACR,gBAAgB,CASd,IAAI,CATN,gBAAgB,CAChB,sBAAsB,CAQpB,IAAI,CARN,sBAAsB,CACtB,gBAAgB,CAOd,IAAI,CAPN,gBAAgB,CAChB,QAAQ,CAMN,IAAI,CANN,QAAQ,CACR,KAAK,CAKH,IAAI,CALN,KAAK,CACL,MAAM,CAIJ,IAAI,CAJN,MAAM,CACN,OAAO,CAGL,IAAI,CAHN,OAAO,CACP,MAAM,CAEJ,IAAI,CAFN,MAAM,CACN,QAAQ,CACN,IAAI,CADN,QAAQ,CAEV,MAAO,CACL,QAAQ,CAAR,QAAQ,CACR,gBAAgB,CAAhB,gBAAgB,CAChB,sBAAsB,CAAtB,sBAAsB,CACtB,gBAAgB,CAAhB,gBAAgB,CAChB,QAAQ,CAAR,QAAQ,CACR,KAAK,CAAL,KAAK,CACL,MAAM,CAAN,MAAM,CACN,OAAO,CAAP,OAAO,CACP,MAAM,CAAN,MAAM,CACN,QAAQ,CAAR,Q,CACD,CACH,CAAC,WAAA,qBAAA,SAAA,qBAAA,CAAA,KAAA,MAAA,SAAA,UAAA,oBAAA,I,CACF,CAED,QAAS,CAAA,uBAAuB,CAAC,MAAc,CAAA,CAC7C,MAAO,CAAA,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAG,YAAY,CAAG,SAAS,CACpE","sourcesContent":["/* eslint-env browser */\nimport { Platform, Subscription } from 'expo-modules-core';\nimport * as rtlDetect from 'rtl-detect';\n\nimport { Localization, Calendar, Locale, CalendarIdentifier } from './Localization.types';\n\nconst getNavigatorLocales = () => {\n  return Platform.isDOMAvailable ? navigator.languages || [navigator.language] : [];\n};\n\ntype ExtendedLocale = Intl.Locale &\n  // typescript definitions for navigator language don't include some modern Intl properties\n  Partial<{\n    textInfo: { direction: 'ltr' | 'rtl' };\n    timeZones: string[];\n    weekInfo: { firstDay: number };\n    hourCycles: string[];\n    timeZone: string;\n    calendars: string[];\n  }>;\n\nconst WEB_LANGUAGE_CHANGE_EVENT = 'languagechange';\n// https://wisevoter.com/country-rankings/countries-that-use-fahrenheit/\nconst USES_FAHRENHEIT = [\n  'AG',\n  'BZ',\n  'VG',\n  'FM',\n  'MH',\n  'MS',\n  'KN',\n  'BS',\n  'CY',\n  'TC',\n  'US',\n  'LR',\n  'PW',\n  'KY',\n];\n\nexport function addLocaleListener(listener: (event) => void): Subscription {\n  addEventListener(WEB_LANGUAGE_CHANGE_EVENT, listener);\n  return {\n    remove: () => removeEventListener(WEB_LANGUAGE_CHANGE_EVENT, listener),\n  };\n}\n\nexport function addCalendarListener(listener: (event) => void): Subscription {\n  addEventListener(WEB_LANGUAGE_CHANGE_EVENT, listener);\n  return {\n    remove: () => removeEventListener(WEB_LANGUAGE_CHANGE_EVENT, listener),\n  };\n}\n\nexport function removeSubscription(subscription: Subscription) {\n  subscription.remove();\n}\n\nexport default {\n  get currency(): string | null {\n    // TODO: Add support\n    return null;\n  },\n  get decimalSeparator(): string {\n    return (1.1).toLocaleString().substring(1, 2);\n  },\n  get digitGroupingSeparator(): string {\n    const value = (1000).toLocaleString();\n    return value.length === 5 ? value.substring(1, 2) : '';\n  },\n  get isRTL(): boolean {\n    return rtlDetect.isRtlLang(this.locale) ?? false;\n  },\n  get isMetric(): boolean {\n    const { region } = this;\n    switch (region) {\n      case 'US': // USA\n      case 'LR': // Liberia\n      case 'MM': // Myanmar\n        return false;\n    }\n    return true;\n  },\n  get locale(): string {\n    if (!Platform.isDOMAvailable) {\n      return '';\n    }\n    const locale =\n      navigator.language ||\n      navigator['systemLanguage'] ||\n      navigator['browserLanguage'] ||\n      navigator['userLanguage'] ||\n      this.locales[0];\n    return locale;\n  },\n  get locales(): string[] {\n    if (!Platform.isDOMAvailable) {\n      return [];\n    }\n    const { languages = [] } = navigator;\n    return Array.from(languages);\n  },\n  get timezone(): string {\n    const defaultTimeZone = 'Etc/UTC';\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n  get isoCurrencyCodes(): string[] {\n    // TODO(Bacon): Add this - very low priority\n    return [];\n  },\n  get region(): string | null {\n    // There is no way to obtain the current region, as is possible on native.\n    // Instead, use the country-code from the locale when possible (e.g. \"en-US\").\n    const { locale } = this;\n    const [, ...suffixes] = typeof locale === 'string' ? locale.split('-') : [];\n    for (const suffix of suffixes) {\n      if (suffix.length === 2) {\n        return suffix.toUpperCase();\n      }\n    }\n    return null;\n  },\n\n  getLocales(): Locale[] {\n    const locales = getNavigatorLocales();\n    return locales?.map((languageTag) => {\n      // TextInfo is an experimental API that is not available in all browsers.\n      // We might want to consider using a locale lookup table instead.\n      const locale =\n        typeof Intl !== 'undefined'\n          ? (new Intl.Locale(languageTag) as unknown as ExtendedLocale)\n          : { region: null, textInfo: null, language: null };\n      const { region, textInfo, language } = locale;\n\n      // Properties added only for compatibility with native, use `toLocaleString` instead.\n      const digitGroupingSeparator =\n        Array.from((10000).toLocaleString(languageTag)).filter((c) => c > '9' || c < '0')[0] ||\n        null; // using 1e5 instead of 1e4 since for some locales (like pl-PL) 1e4 does not use digit grouping\n      const decimalSeparator = (1.1).toLocaleString(languageTag).substring(1, 2);\n      const temperatureUnit = region ? regionToTemperatureUnit(region) : null;\n\n      return {\n        languageTag,\n        languageCode: language || languageTag.split('-')[0] || 'en',\n        textDirection: (textInfo?.direction as 'ltr' | 'rtl') || null,\n        digitGroupingSeparator,\n        decimalSeparator,\n        measurementSystem: null,\n        currencyCode: null,\n        currencySymbol: null,\n        regionCode: region || null,\n        temperatureUnit,\n      };\n    });\n  },\n  getCalendars(): Calendar[] {\n    const locale = ((typeof Intl !== 'undefined'\n      ? Intl.DateTimeFormat().resolvedOptions()\n      : null) ?? null) as unknown as null | ExtendedLocale;\n    return [\n      {\n        calendar: ((locale?.calendar || locale?.calendars?.[0]) as CalendarIdentifier) || null,\n        timeZone: locale?.timeZone || locale?.timeZones?.[0] || null,\n        uses24hourClock: (locale?.hourCycle || locale?.hourCycles?.[0])?.startsWith('h2') ?? null, //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle\n        firstWeekday: locale?.weekInfo?.firstDay || null,\n      },\n    ];\n  },\n\n  async getLocalizationAsync(): Promise<Omit<Localization, 'getCalendars' | 'getLocales'>> {\n    const {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    } = this;\n    return {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    };\n  },\n};\n\nfunction regionToTemperatureUnit(region: string) {\n  return USES_FAHRENHEIT.includes(region) ? 'fahrenheit' : 'celsius';\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}