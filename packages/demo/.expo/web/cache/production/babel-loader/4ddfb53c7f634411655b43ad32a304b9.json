{"ast":null,"code":"'use strict';import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import{Easing}from'../../Easing';import{withDelay,withSequence,withTiming}from'../../animation';import{ReduceMotion}from'../../commonTypes';import{getReduceMotionFromConfig}from'../../animation/util';var _worklet_12845701016023_init_data={code:\"function anonymous(){const{keyframes,delayFunction,delay,withTiming,Easing,withSequence,_this,initialValues,makeKeyframeKey,callback}=this.__closure;const animations={};const addAnimation=function(key){const keyframePoints=keyframes[key];if(keyframePoints.length===0){return;}const animation=delayFunction(delay,keyframePoints.length===1?withTiming(keyframePoints[0].value,{duration:keyframePoints[0].duration,easing:keyframePoints[0].easing?keyframePoints[0].easing:Easing.linear}):withSequence.apply(_this,keyframePoints.map(function(keyframePoint){return withTiming(keyframePoint.value,{duration:keyframePoint.duration,easing:keyframePoint.easing?keyframePoint.easing:Easing.linear});})));if(key.includes('transform')){if(!('transform'in animations)){animations.transform=[];}animations.transform.push({[key.split(':')[1]]:animation});}else{animations[key]=animation;}};Object.keys(initialValues).forEach(function(key){if(key.includes('transform')){initialValues[key].forEach(function(transformProp,index){Object.keys(transformProp).forEach(function(transformPropKey){addAnimation(makeKeyframeKey(index,transformPropKey));});});}else{addAnimation(key);}});return{animations:animations,initialValues:initialValues,callback:callback};}\"};var _worklet_13836389523485_init_data={code:\"function anonymous(delay,animation){const{withDelay,reduceMotion}=this.__closure;return withDelay(delay,animation,reduceMotion);}\"};var _worklet_5312609872546_init_data={code:\"function anonymous(_,animation){const{getReduceMotionFromConfig,reduceMotion}=this.__closure;animation.reduceMotion=getReduceMotionFromConfig(reduceMotion);return animation;}\"};var InnerKeyframe=function(){function InnerKeyframe(definitions){var _this=this;_classCallCheck(this,InnerKeyframe);_defineProperty(this,\"durationV\",void 0);_defineProperty(this,\"delayV\",void 0);_defineProperty(this,\"reduceMotionV\",ReduceMotion.System);_defineProperty(this,\"callbackV\",void 0);_defineProperty(this,\"definitions\",void 0);_defineProperty(this,\"build\",function(){var delay=_this.delayV;var delayFunction=_this.getDelayFunction();var _this$parseDefinition=_this.parseDefinitions(),keyframes=_this$parseDefinition.keyframes,initialValues=_this$parseDefinition.initialValues;var callback=_this.callbackV;return function(){var anonymous=function anonymous(){var animations={};var addAnimation=function addAnimation(key){var keyframePoints=keyframes[key];if(keyframePoints.length===0){return;}var animation=delayFunction(delay,keyframePoints.length===1?withTiming(keyframePoints[0].value,{duration:keyframePoints[0].duration,easing:keyframePoints[0].easing?keyframePoints[0].easing:Easing.linear}):withSequence.apply(_this,keyframePoints.map(function(keyframePoint){return withTiming(keyframePoint.value,{duration:keyframePoint.duration,easing:keyframePoint.easing?keyframePoint.easing:Easing.linear});})));if(key.includes('transform')){if(!('transform'in animations)){animations.transform=[];}animations.transform.push(_defineProperty2({},key.split(':')[1],animation));}else{animations[key]=animation;}};Object.keys(initialValues).forEach(function(key){if(key.includes('transform')){initialValues[key].forEach(function(transformProp,index){Object.keys(transformProp).forEach(function(transformPropKey){addAnimation(makeKeyframeKey(index,transformPropKey));});});}else{addAnimation(key);}});return{animations:animations,initialValues:initialValues,callback:callback};};anonymous.__closure={keyframes:keyframes,delayFunction:delayFunction,delay:delay,withTiming:withTiming,Easing:Easing,withSequence:withSequence,_this:_this,initialValues:initialValues,makeKeyframeKey:makeKeyframeKey,callback:callback};anonymous.__workletHash=12845701016023;anonymous.__initData=_worklet_12845701016023_init_data;return anonymous;}();});this.definitions=definitions;}_createClass(InnerKeyframe,[{key:\"parseDefinitions\",value:function parseDefinitions(){var _this2=this;var parsedKeyframes={};if(this.definitions.from){if(this.definitions['0']){throw new Error(\"[Reanimated] You cannot provide both keyframe 0 and 'from' as they both specified initial values.\");}this.definitions['0']=this.definitions.from;delete this.definitions.from;}if(this.definitions.to){if(this.definitions['100']){throw new Error(\"[Reanimated] You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\");}this.definitions['100']=this.definitions.to;delete this.definitions.to;}if(!this.definitions['0']){throw new Error(\"[Reanimated] Please provide 0 or 'from' keyframe with initial state of your object.\");}var initialValues=this.definitions['0'];Object.keys(initialValues).forEach(function(styleProp){if(styleProp==='transform'){if(!Array.isArray(initialValues.transform)){return;}initialValues.transform.forEach(function(transformStyle,index){Object.keys(transformStyle).forEach(function(transformProp){parsedKeyframes[makeKeyframeKey(index,transformProp)]=[];});});}else{parsedKeyframes[styleProp]=[];}});var duration=this.durationV?this.durationV:500;var animationKeyPoints=Array.from(Object.keys(this.definitions));var getAnimationDuration=function getAnimationDuration(key,currentKeyPoint){var maxDuration=currentKeyPoint/100*duration;var currentDuration=parsedKeyframes[key].reduce(function(acc,value){return acc+value.duration;},0);return maxDuration-currentDuration;};var addKeyPoint=function addKeyPoint(_ref){var key=_ref.key,value=_ref.value,currentKeyPoint=_ref.currentKeyPoint,easing=_ref.easing;if(!(key in parsedKeyframes)){throw new Error(\"[Reanimated] Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\");}parsedKeyframes[key].push({duration:getAnimationDuration(key,currentKeyPoint),value:value,easing:easing});};animationKeyPoints.filter(function(value){return parseInt(value)!==0;}).sort(function(a,b){return parseInt(a)-parseInt(b);}).forEach(function(keyPoint){if(parseInt(keyPoint)<0||parseInt(keyPoint)>100){throw new Error('[Reanimated] Keyframe should be in between range 0 - 100.');}var keyframe=_this2.definitions[keyPoint];var easing=keyframe.easing;delete keyframe.easing;var addKeyPointWith=function addKeyPointWith(key,value){return addKeyPoint({key:key,value:value,currentKeyPoint:parseInt(keyPoint),easing:easing});};Object.keys(keyframe).forEach(function(key){if(key==='transform'){if(!Array.isArray(keyframe.transform)){return;}keyframe.transform.forEach(function(transformStyle,index){Object.keys(transformStyle).forEach(function(transformProp){addKeyPointWith(makeKeyframeKey(index,transformProp),transformStyle[transformProp]);});});}else{addKeyPointWith(key,keyframe[key]);}});});return{initialValues:initialValues,keyframes:parsedKeyframes};}},{key:\"duration\",value:function duration(durationMs){this.durationV=durationMs;return this;}},{key:\"delay\",value:function delay(delayMs){this.delayV=delayMs;return this;}},{key:\"withCallback\",value:function withCallback(callback){this.callbackV=callback;return this;}},{key:\"reduceMotion\",value:function reduceMotion(reduceMotionV){this.reduceMotionV=reduceMotionV;return this;}},{key:\"getDelayFunction\",value:function getDelayFunction(){var delay=this.delayV;var reduceMotion=this.reduceMotionV;return delay?function(){var anonymous=function anonymous(delay,animation){return withDelay(delay,animation,reduceMotion);};anonymous.__closure={withDelay:withDelay,reduceMotion:reduceMotion};anonymous.__workletHash=13836389523485;anonymous.__initData=_worklet_13836389523485_init_data;return anonymous;}():function(){var anonymous=function anonymous(_,animation){animation.reduceMotion=getReduceMotionFromConfig(reduceMotion);return animation;};anonymous.__closure={getReduceMotionFromConfig:getReduceMotionFromConfig,reduceMotion:reduceMotion};anonymous.__workletHash=5312609872546;anonymous.__initData=_worklet_5312609872546_init_data;return anonymous;}();}}]);return InnerKeyframe;}();function makeKeyframeKey(index,transformProp){return`${index}_transform:${transformProp}`;}export var Keyframe=InnerKeyframe;","map":{"version":3,"sources":["Keyframe.ts"],"names":["Easing","withDelay","withSequence","withTiming","ReduceMotion","getReduceMotionFromConfig","InnerKeyframe","System","_defineProperty","constructor","definitions","parseDefinitions","parsedKeyframes","from","Error","to","initialValues","Object","keys","forEach","styleProp","Array","isArray","transform","transformStyle","index","transformProp","makeKeyframeKey","duration","durationV","animationKeyPoints","getAnimationDuration","key","currentKeyPoint","maxDuration","currentDuration","reduce","acc","value","addKeyPoint","_ref","easing","push","filter","parseInt","sort","a","b","keyPoint","keyframe","addKeyPointWith","keyframes","durationMs","delay","delayMs","delayV","withCallback","callback","callbackV","reduceMotion","reduceMotionV","getDelayFunction","animation","_","delayFunction","animations","addAnimation","keyframePoints","length","linear","apply","map","keyframePoint","includes","split","transformPropKey","Keyframe"],"mappings":"AAAA,YAAY,CAAA,OAAA,gBAAA,oDAAA,eAAA,oDAAA,YAAA,0CAAC,QAAA,CAAA,eAAA,CAAA,GAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,cAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,YAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,YAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,MAAA,OAAA,CAAA,GAAA,GAAA,QAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,GAAA,MAAA,CAAA,KAAA,GAAA,QAAA,EAAA,KAAA,GAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA,GAAA,IAAA,GAAA,SAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA,GAAA,MAAA,CAAA,GAAA,GAAA,QAAA,CAAA,MAAA,CAAA,GAAA,CAAA,KAAA,IAAA,CAAA,SAAA,CAAA,8CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA,CAAA,CAEb,OAASA,MAAM,KAAQ,cAAc,CACrC,OAASC,SAAS,CAAEC,YAAY,CAAEC,UAAU,KAAQ,iBAAiB,CAUrE,OAASC,YAAY,KAAQ,mBAAmB,CAChD,OAASC,yBAAyB,KAAQ,sBAAsB,CAAA,IAAA,iCAAA,EAAA,IAAA,6tCAAA,iCAAA,EAAA,IAAA,0IAAA,gCAAA,EAAA,IAAA,sLAW1DC,CAAAA,aAAa,YAWjBG,SAAAA,cAAYC,WAA0C,CAAEF,KAAAA,KAAAA,MAAAA,eAAAA,MAAAA,aAAAA,EAAAA,eAAAA,CAAAA,IAAAA,CAAAA,WAAAA,CAAAA,IAAAA,EAAAA,CAAAA,CAAAA,eAAAA,CAAAA,IAAAA,CAAAA,QAAAA,CAAAA,IAAAA,EAAAA,CAAAA,CAAAA,eAAAA,CAAAA,IAAAA,CAAAA,eAAAA,CAR1BJ,YAAY,CAACG,MAAMC,CAAAA,CAAAA,eAAAA,CAAAA,IAAAA,CAAAA,WAAAA,CAAAA,IAAAA,EAAAA,CAAAA,CAAAA,eAAAA,CAAAA,IAAAA,CAAAA,aAAAA,CAAAA,IAAAA,EAAAA,CAAAA,CAAAA,eAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CA0LzC,UAAkC,CACxC,GAAM6C,CAAAA,KAAK,CAAG,KAAI,CAACE,MAAM,CACzB,GAAMS,CAAAA,aAAa,CAAG,KAAI,CAACH,gBAAgB,CAAA,CAAE,CAC7C,IAAA,qBAAA,CAAqC,KAAI,CAAClD,gBAAgB,CAAA,CAAE,CAApDwC,SAAS,CAAA,qBAAA,CAATA,SAAS,CAAEnC,aAAAA,CAAAA,qBAAAA,CAAAA,aAAAA,CACnB,GAAMyC,CAAAA,QAAQ,CAAG,KAAI,CAACC,SAAS,CAE/B,MAAO,gBAAA,SAAA,UAAA,UAAA,CAAM,CAEX,GAAMO,CAAAA,UAAwC,CAAG,CAAC,CAAC,CAMnD,GAAMC,CAAAA,YAAY,CAAIlC,QAAhBkC,CAAAA,YAAY,CAAIlC,GAAW,CAAK,CACpC,GAAMmC,CAAAA,cAAc,CAAGhB,SAAS,CAACnB,GAAG,CAAC,CAErC,GAAImC,cAAc,CAACC,MAAM,GAAK,CAAC,CAAE,CAC/B,OACF,CACA,GAAMN,CAAAA,SAAS,CAAGE,aAAa,CAC7BX,KAAK,CACLc,cAAc,CAACC,MAAM,GAAK,CAAC,CACvBjE,UAAU,CAACgE,cAAc,CAAC,CAAC,CAAC,CAAC7B,KAAK,CAAE,CAClCV,QAAQ,CAAEuC,cAAc,CAAC,CAAC,CAAC,CAACvC,QAAQ,CACpCa,MAAM,CAAE0B,cAAc,CAAC,CAAC,CAAC,CAAC1B,MAAM,CAC5B0B,cAAc,CAAC,CAAC,CAAC,CAAC1B,MAAM,CACxBzC,MAAM,CAACqE,MACb,CAAC,CAAC,CACFnE,YAAY,CAACoE,KAAK,CAChB,KAAI,CACJH,cAAc,CAACI,GAAG,CAAEC,SAAAA,aAA4B,QAC9CrE,CAAAA,UAAU,CAACqE,aAAa,CAAClC,KAAK,CAAE,CAC9BV,QAAQ,CAAE4C,aAAa,CAAC5C,QAAQ,CAChCa,MAAM,CAAE+B,aAAa,CAAC/B,MAAM,CACxB+B,aAAa,CAAC/B,MAAM,CACpBzC,MAAM,CAACqE,MACb,CAAC,CAAC,GACH,CACF,CACN,CACD,GAAIrC,GAAG,CAACyC,QAAQ,CAAC,WAAW,CAAC,CAAE,CAC7B,GAAI,EAAE,WAAW,EAAIR,CAAAA,UAAU,CAAC,CAAE,CAChCA,UAAU,CAAC1C,SAAS,CAAG,EAAE,CAC3B,CAEA0C,UAAU,CAAC1C,SAAS,CAAEmB,IAAI,CAAA,gBAAA,IACvBV,GAAG,CAAC0C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAGZ,SAAAA,CACtB,CAAC,CACJ,CAAC,IAAM,CACLG,UAAU,CAACjC,GAAG,CAAC,CAAG8B,SAAS,CAC7B,CACF,CAAC,CACD7C,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,OAAO,CAAEa,SAAAA,GAAW,CAAK,CAClD,GAAIA,GAAG,CAACyC,QAAQ,CAAC,WAAW,CAAC,CAAE,CAC7BzD,aAAa,CAACgB,GAAG,CAAC,CAACb,OAAO,CACxB,SAACO,aAA8C,CAAED,KAAa,CAAK,CACjER,MAAM,CAACC,IAAI,CAACQ,aAAa,CAAC,CAACP,OAAO,CAAEwD,SAAAA,gBAAwB,CAAK,CAC/DT,YAAY,CAACvC,eAAe,CAACF,KAAK,CAAEkD,gBAAgB,CAAC,CAAC,CACxD,CAAC,CAAC,CACJ,CAAC,CACF,CACH,CAAC,IAAM,CACLT,YAAY,CAAClC,GAAG,CAAC,CACnB,CACF,CAAC,CAAC,CACF,MAAO,CACLiC,UAAU,CAAEA,UAAU,CACtBjD,aAAa,CAAEA,aAAa,CAC5ByC,QAAQ,CAAEA,QACZ,CAAC,CACH,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,SAAA,CAxD0BN,SAAS,CAAA,aAAA,CAKda,aAAa,CAAA,KAAA,CAC7BX,KAAK,CAAA,UAAA,CAEDlD,UAAU,CAAA,MAAA,CAIJH,MAAM,CAAA,YAAA,CAEZE,YAAY,CAAA,KAAA,CACV,KAAI,CAAA,aAAA,CAuBFc,aAAa,CAAA,eAAA,CAKFW,eAAe,CAAA,QAAA,CAW1B8B,QAAAA,EAAAA,SAAAA,CAAAA,aAAAA,gBAAAA,SAAAA,CAAAA,UAAAA,CAAAA,iCAAAA,QAAAA,SAAAA,EA/DP,GAkET,CAAC,CAAA,CAzPC,IAAI,CAAC/C,WAAW,CAAGA,WAAW,CAChC,CAAA,YAAA,CAAA,aAAA,GAAA,GAAA,oBAAA,KAAA,CAEQC,SAAAA,iBAAAA,CAA8C,KAAA,MAAA,MAKpD,GAAMC,CAAAA,eAAgD,CAAG,CAAC,CAAC,CAI3D,GAAI,IAAI,CAACF,WAAW,CAACG,IAAI,CAAE,CACzB,GAAI,IAAI,CAACH,WAAW,CAAC,GAAG,CAAC,CAAE,CACzB,KAAM,IAAII,CAAAA,KAAK,CACb,mGAAmG,CACpG,CACH,CACA,IAAI,CAACJ,WAAW,CAAC,GAAG,CAAC,CAAG,IAAI,CAACA,WAAW,CAACG,IAAI,CAC7C,MAAO,KAAI,CAACH,WAAW,CAACG,IAAI,CAC9B,CACA,GAAI,IAAI,CAACH,WAAW,CAACK,EAAE,CAAE,CACvB,GAAI,IAAI,CAACL,WAAW,CAAC,KAAK,CAAC,CAAE,CAC3B,KAAM,IAAII,CAAAA,KAAK,CACb,uHAAuH,CACxH,CACH,CACA,IAAI,CAACJ,WAAW,CAAC,KAAK,CAAC,CAAG,IAAI,CAACA,WAAW,CAACK,EAAE,CAC7C,MAAO,KAAI,CAACL,WAAW,CAACK,EAAE,CAC5B,CAKA,GAAI,CAAC,IAAI,CAACL,WAAW,CAAC,GAAG,CAAC,CAAE,CAC1B,KAAM,IAAII,CAAAA,KAAK,CACb,qFAAqF,CACtF,CACH,CACA,GAAME,CAAAA,aAAyB,CAAG,IAAI,CAACN,WAAW,CAAC,GAAG,CAAe,CAIrEO,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,OAAO,CAAEC,SAAAA,SAAiB,CAAK,CACxD,GAAIA,SAAS,GAAK,WAAW,CAAE,CAC7B,GAAI,CAACC,KAAK,CAACC,OAAO,CAACN,aAAa,CAACO,SAAS,CAAC,CAAE,CAC3C,OACF,CACAP,aAAa,CAACO,SAAS,CAACJ,OAAO,CAAC,SAACK,cAAc,CAAEC,KAAK,CAAK,CACzDR,MAAM,CAACC,IAAI,CAACM,cAAc,CAAC,CAACL,OAAO,CAAEO,SAAAA,aAAqB,CAAK,CAC7Dd,eAAe,CAACe,eAAe,CAACF,KAAK,CAAEC,aAAa,CAAC,CAAC,CAAG,EAAE,CAC7D,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,IAAM,CACLd,eAAe,CAACQ,SAAS,CAAC,CAAG,EAAE,CACjC,CACF,CAAC,CAAC,CAEF,GAAMQ,CAAAA,QAAgB,CAAG,IAAI,CAACC,SAAS,CAAG,IAAI,CAACA,SAAS,CAAG,GAAG,CAC9D,GAAMC,CAAAA,kBAAiC,CAAGT,KAAK,CAACR,IAAI,CAClDI,MAAM,CAACC,IAAI,CAAC,IAAI,CAACR,WAAW,CAAC,CAC9B,CAED,GAAMqB,CAAAA,oBAAoB,CAAGA,QAAvBA,CAAAA,oBAAoB,CACxBC,GAAW,CACXC,eAAuB,CACZ,CACX,GAAMC,CAAAA,WAAW,CAAID,eAAe,CAAG,GAAG,CAAIL,QAAQ,CACtD,GAAMO,CAAAA,eAAe,CAAGvB,eAAe,CAACoB,GAAG,CAAC,CAACI,MAAM,CACjD,SAACC,GAAW,CAAEC,KAAoB,QAAKD,CAAAA,GAAG,CAAGC,KAAK,CAACV,QAAQ,GAC3D,CAAC,CACF,CACD,MAAOM,CAAAA,WAAW,CAAGC,eAAe,CACtC,CAAC,CAKD,GAAMI,CAAAA,WAAW,CAAGC,QAAdD,CAAAA,WAAW,CAAGC,IAAAA,CAUR,CAVS,GACnBR,CAAAA,GAAG,CASJ,IAAA,CATCA,GAAG,CACHM,KAAK,CAQN,IAAA,CARCA,KAAK,CACLL,eAAe,CAOhB,IAAA,CAPCA,eAAe,CACfQ,MAAAA,CAMD,IAAA,CANCA,MAAAA,CAOA,GAAI,EAAET,GAAG,GAAIpB,CAAAA,eAAe,CAAC,CAAE,CAC7B,KAAM,IAAIE,CAAAA,KAAK,CACb,4HAA4H,CAC7H,CACH,CACAF,eAAe,CAACoB,GAAG,CAAC,CAACU,IAAI,CAAC,CACxBd,QAAQ,CAAEG,oBAAoB,CAACC,GAAG,CAAEC,eAAe,CAAC,CACpDK,KAAK,CAAEA,KAAK,CACZG,MAAM,CAAEA,MACV,CAAC,CAAC,CACJ,CAAC,CACDX,kBAAkB,CACfa,MAAM,CAAEL,SAAAA,KAAa,QAAKM,CAAAA,QAAQ,CAACN,KAAK,CAAC,GAAK,CAAC,GAAC,CAChDO,IAAI,CAAC,SAACC,CAAS,CAAEC,CAAS,QAAKH,CAAAA,QAAQ,CAACE,CAAC,CAAC,CAAGF,QAAQ,CAACG,CAAC,CAAC,GAAC,CACzD5B,OAAO,CAAE6B,SAAAA,QAAgB,CAAK,CAC7B,GAAIJ,QAAQ,CAACI,QAAQ,CAAC,CAAG,CAAC,EAAIJ,QAAQ,CAACI,QAAQ,CAAC,CAAG,GAAG,CAAE,CACtD,KAAM,IAAIlC,CAAAA,KAAK,CACb,2DAA2D,CAC5D,CACH,CACA,GAAMmC,CAAAA,QAAuB,CAAG,MAAI,CAACvC,WAAW,CAACsC,QAAQ,CAAC,CAC1D,GAAMP,CAAAA,MAAM,CAAGQ,QAAQ,CAACR,MAAM,CAC9B,MAAOQ,CAAAA,QAAQ,CAACR,MAAM,CACtB,GAAMS,CAAAA,eAAe,CAAGA,QAAlBA,CAAAA,eAAe,CAAIlB,GAAW,CAAEM,KAAsB,QAC1DC,CAAAA,WAAW,CAAC,CACVP,GAAG,CAAHA,GAAG,CACHM,KAAK,CAALA,KAAK,CACLL,eAAe,CAAEW,QAAQ,CAACI,QAAQ,CAAC,CACnCP,MAAAA,CAAAA,MACF,CAAC,CAAC,GACJxB,MAAM,CAACC,IAAI,CAAC+B,QAAQ,CAAC,CAAC9B,OAAO,CAAEa,SAAAA,GAAW,CAAK,CAC7C,GAAIA,GAAG,GAAK,WAAW,CAAE,CACvB,GAAI,CAACX,KAAK,CAACC,OAAO,CAAC2B,QAAQ,CAAC1B,SAAS,CAAC,CAAE,CACtC,OACF,CACA0B,QAAQ,CAAC1B,SAAS,CAACJ,OAAO,CACxB,SAACK,cAAsC,CAAEC,KAAK,CAAK,CACjDR,MAAM,CAACC,IAAI,CAACM,cAAc,CAAC,CAACL,OAAO,CAAEO,SAAAA,aAAqB,CAAK,CAC7DwB,eAAe,CACbvB,eAAe,CAACF,KAAK,CAAEC,aAAa,CAAC,CACrCF,cAAc,CAACE,aAAa,CAAC,CAC9B,CACH,CAAC,CAAC,CACJ,CAAC,CACF,CACH,CAAC,IAAM,CACLwB,eAAe,CAAClB,GAAG,CAAEiB,QAAQ,CAACjB,GAAG,CAAC,CAAC,CACrC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,MAAO,CAAEhB,aAAa,CAAEA,aAAa,CAAEmC,SAAS,CAAEvC,eAAgB,CAAC,CACrE,CAAA,GAAA,GAAA,YAAA,KAAA,CAEAgB,SAAAA,SAASwB,UAAkB,CAAiB,CAC1C,IAAI,CAACvB,SAAS,CAAGuB,UAAU,CAC3B,MAAO,KAAI,CACb,CAAA,GAAA,GAAA,SAAA,KAAA,CAEAC,SAAAA,MAAMC,OAAe,CAAiB,CACpC,IAAI,CAACC,MAAM,CAAGD,OAAO,CACrB,MAAO,KAAI,CACb,CAAA,GAAA,GAAA,gBAAA,KAAA,CAEAE,SAAAA,aAAaC,QAAqC,CAAiB,CACjE,IAAI,CAACC,SAAS,CAAGD,QAAQ,CACzB,MAAO,KAAI,CACb,CAAA,GAAA,GAAA,gBAAA,KAAA,CAEAE,SAAAA,aAAaC,aAA2B,CAAQ,CAC9C,IAAI,CAACA,aAAa,CAAGA,aAAa,CAClC,MAAO,KAAI,CACb,CAAA,GAAA,GAAA,oBAAA,KAAA,CAEQC,SAAAA,iBAAAA,CAAsC,CAC5C,GAAMR,CAAAA,KAAK,CAAG,IAAI,CAACE,MAAM,CACzB,GAAMI,CAAAA,YAAY,CAAG,IAAI,CAACC,aAAa,CACvC,MAAOP,CAAAA,KAAK,CACR,eAAA,SAAA,UAAA,UAACA,KAAK,CAAES,SAAS,CAAK,CAEpB,MAAO7D,CAAAA,SAAS,CAACoD,KAAK,CAAES,SAAS,CAAEH,YAAY,CAAC,CAClD,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,SAAA,CADQ1D,SAAS,CAAA,YAAA,CAAmB0D,YAAY,EAAA,SAAA,CAAA,aAAA,gBAAA,SAAA,CAAA,UAAA,CAAA,iCAAA,QAAA,SAAA,EAFjD,GAIA,eAAA,SAAA,UAAA,UAACI,CAAC,CAAED,SAAS,CAAK,CAEhBA,SAAS,CAACH,YAAY,CAAGtD,yBAAyB,CAACsD,YAAY,CAAC,CAChE,MAAOG,CAAAA,SAAS,CAClB,CAAC,CAAA,SAAA,CAAA,SAAA,EAAA,yBAAA,CAF0BzD,yBAAyB,CAAA,YAAA,CAACsD,YAAY,EAAA,SAAA,CAAA,aAAA,eAAA,SAAA,CAAA,UAAA,CAAA,gCAAA,QAAA,SAAA,EAFjE,EAIC,CACP,CAAA,WAAA,aAAA,KA6EF,QAAShC,CAAAA,eAAeA,CAACF,KAAa,CAAEC,aAAqB,CAAE,CAC7D,MAAQ,GAAED,KAAM,cAAaC,aAAc,EAAC,CAC9C,CAYA,MAAO,IAAMkD,CAAAA,QAAQ,CAAGtE,aAAqD","sourcesContent":["'use strict';\nimport type { EasingFunction } from '../../Easing';\nimport { Easing } from '../../Easing';\nimport { withDelay, withSequence, withTiming } from '../../animation';\nimport type {\n  AnimationFunction,\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n  KeyframeProps,\n  StylePropsWithArrayTransform,\n} from './commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport type { TransformArrayItem } from '../../helperTypes';\nimport { ReduceMotion } from '../../commonTypes';\nimport { getReduceMotionFromConfig } from '../../animation/util';\n\ninterface KeyframePoint {\n  duration: number;\n  value: number | string;\n  easing?: EasingFunction;\n}\ninterface ParsedKeyframesDefinition {\n  initialValues: StyleProps;\n  keyframes: Record<string, KeyframePoint[]>;\n}\nclass InnerKeyframe implements IEntryExitAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  reduceMotionV: ReduceMotion = ReduceMotion.System;\n  callbackV?: (finished: boolean) => void;\n  definitions: Record<string, KeyframeProps>;\n\n  /*\n    Keyframe definition should be passed in the constructor as the map\n    which keys are between range 0 - 100 (%) and correspond to the point in the animation progress.\n  */\n  constructor(definitions: Record<string, KeyframeProps>) {\n    this.definitions = definitions;\n  }\n\n  private parseDefinitions(): ParsedKeyframesDefinition {\n    /* \n        Each style property contain an array with all their key points: \n        value, duration of transition to that value, and optional easing function (defaults to Linear)\n    */\n    const parsedKeyframes: Record<string, KeyframePoint[]> = {};\n    /*\n      Parsing keyframes 'from' and 'to'.\n    */\n    if (this.definitions.from) {\n      if (this.definitions['0']) {\n        throw new Error(\n          \"[Reanimated] You cannot provide both keyframe 0 and 'from' as they both specified initial values.\"\n        );\n      }\n      this.definitions['0'] = this.definitions.from;\n      delete this.definitions.from;\n    }\n    if (this.definitions.to) {\n      if (this.definitions['100']) {\n        throw new Error(\n          \"[Reanimated] You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\"\n        );\n      }\n      this.definitions['100'] = this.definitions.to;\n      delete this.definitions.to;\n    }\n    /* \n       One of the assumptions is that keyframe  0 is required to properly set initial values.\n       Every other keyframe should contain properties from the set provided as initial values.\n    */\n    if (!this.definitions['0']) {\n      throw new Error(\n        \"[Reanimated] Please provide 0 or 'from' keyframe with initial state of your object.\"\n      );\n    }\n    const initialValues: StyleProps = this.definitions['0'] as StyleProps;\n    /*\n      Initialize parsedKeyframes for properties provided in initial keyframe\n    */\n    Object.keys(initialValues).forEach((styleProp: string) => {\n      if (styleProp === 'transform') {\n        if (!Array.isArray(initialValues.transform)) {\n          return;\n        }\n        initialValues.transform.forEach((transformStyle, index) => {\n          Object.keys(transformStyle).forEach((transformProp: string) => {\n            parsedKeyframes[makeKeyframeKey(index, transformProp)] = [];\n          });\n        });\n      } else {\n        parsedKeyframes[styleProp] = [];\n      }\n    });\n\n    const duration: number = this.durationV ? this.durationV : 500;\n    const animationKeyPoints: Array<string> = Array.from(\n      Object.keys(this.definitions)\n    );\n\n    const getAnimationDuration = (\n      key: string,\n      currentKeyPoint: number\n    ): number => {\n      const maxDuration = (currentKeyPoint / 100) * duration;\n      const currentDuration = parsedKeyframes[key].reduce(\n        (acc: number, value: KeyframePoint) => acc + value.duration,\n        0\n      );\n      return maxDuration - currentDuration;\n    };\n\n    /* \n       Other keyframes can't contain properties that were not specified in initial keyframe.\n    */\n    const addKeyPoint = ({\n      key,\n      value,\n      currentKeyPoint,\n      easing,\n    }: {\n      key: string;\n      value: string | number;\n      currentKeyPoint: number;\n      easing?: EasingFunction;\n    }): void => {\n      if (!(key in parsedKeyframes)) {\n        throw new Error(\n          \"[Reanimated] Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\"\n        );\n      }\n      parsedKeyframes[key].push({\n        duration: getAnimationDuration(key, currentKeyPoint),\n        value: value,\n        easing: easing,\n      });\n    };\n    animationKeyPoints\n      .filter((value: string) => parseInt(value) !== 0)\n      .sort((a: string, b: string) => parseInt(a) - parseInt(b))\n      .forEach((keyPoint: string) => {\n        if (parseInt(keyPoint) < 0 || parseInt(keyPoint) > 100) {\n          throw new Error(\n            '[Reanimated] Keyframe should be in between range 0 - 100.'\n          );\n        }\n        const keyframe: KeyframeProps = this.definitions[keyPoint];\n        const easing = keyframe.easing;\n        delete keyframe.easing;\n        const addKeyPointWith = (key: string, value: string | number) =>\n          addKeyPoint({\n            key,\n            value,\n            currentKeyPoint: parseInt(keyPoint),\n            easing,\n          });\n        Object.keys(keyframe).forEach((key: string) => {\n          if (key === 'transform') {\n            if (!Array.isArray(keyframe.transform)) {\n              return;\n            }\n            keyframe.transform.forEach(\n              (transformStyle: { [key: string]: any }, index) => {\n                Object.keys(transformStyle).forEach((transformProp: string) => {\n                  addKeyPointWith(\n                    makeKeyframeKey(index, transformProp),\n                    transformStyle[transformProp]\n                  );\n                });\n              }\n            );\n          } else {\n            addKeyPointWith(key, keyframe[key]);\n          }\n        });\n      });\n    return { initialValues: initialValues, keyframes: parsedKeyframes };\n  }\n\n  duration(durationMs: number): InnerKeyframe {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  delay(delayMs: number): InnerKeyframe {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  withCallback(callback: (finsihed: boolean) => void): InnerKeyframe {\n    this.callbackV = callback;\n    return this;\n  }\n\n  reduceMotion(reduceMotionV: ReduceMotion): this {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  private getDelayFunction(): AnimationFunction {\n    const delay = this.delayV;\n    const reduceMotion = this.reduceMotionV;\n    return delay\n      ? (delay, animation) => {\n          'worklet';\n          return withDelay(delay, animation, reduceMotion);\n        }\n      : (_, animation) => {\n          'worklet';\n          animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n          return animation;\n        };\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delay = this.delayV;\n    const delayFunction = this.getDelayFunction();\n    const { keyframes, initialValues } = this.parseDefinitions();\n    const callback = this.callbackV;\n\n    return () => {\n      'worklet';\n      const animations: StylePropsWithArrayTransform = {};\n\n      /* \n            For each style property, an animations sequence is created that corresponds with its key points.\n            Transform style properties require special handling because of their nested structure.\n      */\n      const addAnimation = (key: string) => {\n        const keyframePoints = keyframes[key];\n        // in case if property was only passed as initial value\n        if (keyframePoints.length === 0) {\n          return;\n        }\n        const animation = delayFunction(\n          delay,\n          keyframePoints.length === 1\n            ? withTiming(keyframePoints[0].value, {\n                duration: keyframePoints[0].duration,\n                easing: keyframePoints[0].easing\n                  ? keyframePoints[0].easing\n                  : Easing.linear,\n              })\n            : withSequence.apply(\n                this,\n                keyframePoints.map((keyframePoint: KeyframePoint) =>\n                  withTiming(keyframePoint.value, {\n                    duration: keyframePoint.duration,\n                    easing: keyframePoint.easing\n                      ? keyframePoint.easing\n                      : Easing.linear,\n                  })\n                )\n              )\n        );\n        if (key.includes('transform')) {\n          if (!('transform' in animations)) {\n            animations.transform = [];\n          }\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          animations.transform!.push(<TransformArrayItem>{\n            [key.split(':')[1]]: animation,\n          });\n        } else {\n          animations[key] = animation;\n        }\n      };\n      Object.keys(initialValues).forEach((key: string) => {\n        if (key.includes('transform')) {\n          initialValues[key].forEach(\n            (transformProp: Record<string, number | string>, index: number) => {\n              Object.keys(transformProp).forEach((transformPropKey: string) => {\n                addAnimation(makeKeyframeKey(index, transformPropKey));\n              });\n            }\n          );\n        } else {\n          addAnimation(key);\n        }\n      });\n      return {\n        animations: animations,\n        initialValues: initialValues,\n        callback: callback,\n      };\n    };\n  };\n}\n\nfunction makeKeyframeKey(index: number, transformProp: string) {\n  return `${index}_transform:${transformProp}`;\n}\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\nexport declare class ReanimatedKeyframe {\n  constructor(definitions: Record<string, KeyframeProps>);\n  duration(durationMs: number): ReanimatedKeyframe;\n  delay(delayMs: number): ReanimatedKeyframe;\n  reduceMotion(reduceMotionV: ReduceMotion): ReanimatedKeyframe;\n  withCallback(callback: (finished: boolean) => void): ReanimatedKeyframe;\n}\n\n// TODO TYPESCRIPT This temporary cast is to get rid of .d.ts file.\nexport const Keyframe = InnerKeyframe as unknown as typeof ReanimatedKeyframe;\n"]},"metadata":{},"sourceType":"module"}