{"ast":null,"code":"'use strict';export function flattenArray(array){if(!Array.isArray(array)){return[array];}var resultArr=[];var _flattenArray=function _flattenArray(arr){arr.forEach(function(item){if(Array.isArray(item)){_flattenArray(item);}else{resultArr.push(item);}});};_flattenArray(array);return resultArr;}export var has=function has(key,x){if(typeof x==='function'||typeof x==='object'){if(x===null||x===undefined){return false;}else{return key in x;}}return false;};","map":{"version":3,"sources":["utils.ts"],"names":["flattenArray","array","Array","isArray","resultArr","_flattenArray","arr","forEach","item","push","has","key","x","undefined"],"mappings":"AAAA,YAAY,CAGZ,MAAO,SAASA,CAAAA,YAAYA,CAAIC,KAAqB,CAAO,CAC1D,GAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAAE,CACzB,MAAO,CAACA,KAAK,CAAC,CAChB,CACA,GAAMG,CAAAA,SAAc,CAAG,EAAE,CAEzB,GAAMC,CAAAA,aAAa,CAAIC,QAAjBD,CAAAA,aAAa,CAAIC,GAAqB,CAAW,CACrDA,GAAG,CAACC,OAAO,CAAEC,SAAAA,IAAI,CAAK,CACpB,GAAIN,KAAK,CAACC,OAAO,CAACK,IAAI,CAAC,CAAE,CACvBH,aAAa,CAACG,IAAI,CAAC,CACrB,CAAC,IAAM,CACLJ,SAAS,CAACK,IAAI,CAACD,IAAI,CAAC,CACtB,CACF,CAAC,CAAC,CACJ,CAAC,CACDH,aAAa,CAACJ,KAAK,CAAC,CACpB,MAAOG,CAAAA,SAAS,CAClB,CAEA,MAAO,IAAMM,CAAAA,GAAG,CAAGA,QAANA,CAAAA,GAAG,CACdC,GAAM,CACNC,CAAU,CACkC,CAC5C,GAAI,MAAOA,CAAAA,CAAC,GAAK,UAAU,EAAI,MAAOA,CAAAA,CAAC,GAAK,QAAQ,CAAE,CACpD,GAAIA,CAAC,GAAK,IAAI,EAAIA,CAAC,GAAKC,SAAS,CAAE,CACjC,MAAO,MAAK,CACd,CAAC,IAAM,CACL,MAAOF,CAAAA,GAAG,GAAIC,CAAAA,CAAC,CACjB,CACF,CACA,MAAO,MAAK,CACd,CAAC","sourcesContent":["'use strict';\nimport type { NestedArray } from './commonTypes';\n\nexport function flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nexport const has = <K extends string>(\n  key: K,\n  x: unknown\n): x is typeof x & { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n"]},"metadata":{},"sourceType":"module"}