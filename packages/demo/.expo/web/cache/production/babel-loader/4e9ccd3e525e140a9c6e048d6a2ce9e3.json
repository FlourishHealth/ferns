{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"shouldCancelWhenOutside\",\"maxDeltaX\",\"maxDeltaY\",\"numberOfTaps\",\"minDurationMs\",\"maxDelayMs\",\"maxDurationMs\",\"maxDist\",\"minPointers\",\"maxPointers\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import Hammer from'@egjs/hammerjs';import DiscreteGestureHandler from'./DiscreteGestureHandler';import{isnan}from'./utils';var TapGestureHandler=function(_DiscreteGestureHandl){_inherits(TapGestureHandler,_DiscreteGestureHandl);var _super=_createSuper(TapGestureHandler);function TapGestureHandler(){var _this;_classCallCheck(this,TapGestureHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"_shouldFireEndEvent\",null);_defineProperty(_assertThisInitialized(_this),\"_timer\",void 0);_defineProperty(_assertThisInitialized(_this),\"_multiTapTimer\",void 0);_defineProperty(_assertThisInitialized(_this),\"onSuccessfulTap\",function(ev){if(_this._getPendingGestures().length){_this._shouldFireEndEvent=ev;return;}if(ev.eventType===Hammer.INPUT_END){_this.sendEvent(_objectSpread(_objectSpread({},ev),{},{eventType:Hammer.INPUT_MOVE}));}_this.sendEvent(_objectSpread(_objectSpread({},ev),{},{isFinal:true}));_this.onGestureEnded(ev);});return _this;}_createClass(TapGestureHandler,[{key:\"name\",get:function get(){return'tap';}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Tap;}},{key:\"maxDelayMs\",get:function get(){return isnan(this.config.maxDelayMs)?300:this.config.maxDelayMs;}},{key:\"simulateCancelEvent\",value:function simulateCancelEvent(inputData){if(this.isGestureRunning){this.cancelEvent(inputData);}}},{key:\"onGestureActivated\",value:function onGestureActivated(ev){if(this.isGestureRunning){this.onSuccessfulTap(ev);}}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this2=this;_get(_getPrototypeOf(TapGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(!this.hasGestureFailed&&!this.isGestureRunning&&!ev.isFinal){var gesture=this.hammer.get(this.name);if(gesture.options.enable(gesture,ev)){clearTimeout(this._multiTapTimer);this.onStart(ev);this.sendEvent(ev);}}if(ev.isFinal&&ev.maxPointers>1){setTimeout(function(){if(_this2.isGestureRunning){_this2.cancelEvent(ev);}});}if(this.hasGestureFailed){return;}if(ev.isFinal){if(ev.maxPointers>1){setTimeout(function(){if(_this2.isGestureRunning){_this2.cancelEvent(ev);}});}clearTimeout(this._timer);this._timer=setTimeout(function(){_this2.hasGestureFailed=true;_this2.cancelEvent(ev);},this.maxDelayMs);}else if(!this.hasGestureFailed&&!this.isGestureRunning){var _gesture2=this.hammer.get(this.name);if(_gesture2.options.enable(_gesture2,ev)){clearTimeout(this._multiTapTimer);this.onStart(ev);this.sendEvent(ev);}}}},{key:\"getHammerConfig\",value:function getHammerConfig(){return _objectSpread(_objectSpread({},_get(_getPrototypeOf(TapGestureHandler.prototype),\"getHammerConfig\",this).call(this)),{},{event:this.name,taps:isnan(this.config.numberOfTaps)?1:this.config.numberOfTaps,interval:this.maxDelayMs,time:isnan(this.config.maxDurationMs)||this.config.maxDurationMs==null?250:this.config.maxDurationMs});}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref){var _ref$shouldCancelWhen=_ref.shouldCancelWhenOutside,shouldCancelWhenOutside=_ref$shouldCancelWhen===void 0?true:_ref$shouldCancelWhen,_ref$maxDeltaX=_ref.maxDeltaX,maxDeltaX=_ref$maxDeltaX===void 0?Number.NaN:_ref$maxDeltaX,_ref$maxDeltaY=_ref.maxDeltaY,maxDeltaY=_ref$maxDeltaY===void 0?Number.NaN:_ref$maxDeltaY,_ref$numberOfTaps=_ref.numberOfTaps,numberOfTaps=_ref$numberOfTaps===void 0?1:_ref$numberOfTaps,_ref$minDurationMs=_ref.minDurationMs,minDurationMs=_ref$minDurationMs===void 0?525:_ref$minDurationMs,_ref$maxDelayMs=_ref.maxDelayMs,maxDelayMs=_ref$maxDelayMs===void 0?Number.NaN:_ref$maxDelayMs,_ref$maxDurationMs=_ref.maxDurationMs,maxDurationMs=_ref$maxDurationMs===void 0?Number.NaN:_ref$maxDurationMs,_ref$maxDist=_ref.maxDist,maxDist=_ref$maxDist===void 0?2:_ref$maxDist,_ref$minPointers=_ref.minPointers,minPointers=_ref$minPointers===void 0?1:_ref$minPointers,_ref$maxPointers=_ref.maxPointers,maxPointers=_ref$maxPointers===void 0?1:_ref$maxPointers,props=_objectWithoutProperties(_ref,_excluded);return _get(_getPrototypeOf(TapGestureHandler.prototype),\"updateGestureConfig\",this).call(this,_objectSpread({shouldCancelWhenOutside:shouldCancelWhenOutside,numberOfTaps:numberOfTaps,maxDeltaX:maxDeltaX,maxDeltaY:maxDeltaY,minDurationMs:minDurationMs,maxDelayMs:maxDelayMs,maxDist:maxDist,minPointers:minPointers,maxPointers:maxPointers},props));}},{key:\"onGestureEnded\",value:function onGestureEnded(){var _get2;clearTimeout(this._timer);for(var _len2=arguments.length,props=new Array(_len2),_key2=0;_key2<_len2;_key2++){props[_key2]=arguments[_key2];}(_get2=_get(_getPrototypeOf(TapGestureHandler.prototype),\"onGestureEnded\",this)).call.apply(_get2,[this].concat(props));}},{key:\"onWaitingEnded\",value:function onWaitingEnded(_gesture){if(this._shouldFireEndEvent){this.onSuccessfulTap(this._shouldFireEndEvent);this._shouldFireEndEvent=null;}}}]);return TapGestureHandler;}(DiscreteGestureHandler);export default TapGestureHandler;","map":{"version":3,"sources":["TapGestureHandler.ts"],"names":["Hammer","DiscreteGestureHandler","isnan","TapGestureHandler","name","NativeGestureClass","Tap","maxDelayMs","config","simulateCancelEvent","inputData","isGestureRunning","cancelEvent","onGestureActivated","ev","onSuccessfulTap","_getPendingGestures","length","_shouldFireEndEvent","eventType","INPUT_END","sendEvent","INPUT_MOVE","isFinal","onGestureEnded","onRawEvent","hasGestureFailed","gesture","hammer","get","options","enable","clearTimeout","_multiTapTimer","onStart","maxPointers","setTimeout","_timer","getHammerConfig","event","taps","numberOfTaps","interval","time","maxDurationMs","updateGestureConfig","shouldCancelWhenOutside","maxDeltaX","Number","NaN","maxDeltaY","minDurationMs","maxDist","minPointers","props","onWaitingEnded","_gesture"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport { isnan } from './utils';\n\nclass TapGestureHandler extends DiscreteGestureHandler {\n  private _shouldFireEndEvent: HammerInputExt | null = null;\n  private _timer: any;\n  private _multiTapTimer: any; // TODO unused?\n  get name() {\n    return 'tap';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Tap;\n  }\n\n  get maxDelayMs() {\n    // @ts-ignore TODO(TS) trace down config\n    return isnan(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n  }\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    if (this.isGestureRunning) {\n      this.cancelEvent(inputData);\n    }\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    if (this.isGestureRunning) {\n      this.onSuccessfulTap(ev);\n    }\n  }\n\n  onSuccessfulTap = (ev: HammerInputExt) => {\n    if (this._getPendingGestures().length) {\n      this._shouldFireEndEvent = ev;\n      return;\n    }\n    if (ev.eventType === Hammer.INPUT_END) {\n      this.sendEvent({ ...ev, eventType: Hammer.INPUT_MOVE });\n    }\n    // When handler gets activated it will turn into State.END immediately.\n    this.sendEvent({ ...ev, isFinal: true });\n    this.onGestureEnded(ev);\n  };\n\n  onRawEvent(ev: HammerInput) {\n    super.onRawEvent(ev);\n\n    // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n    if (\n      !this.hasGestureFailed &&\n      !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal\n    ) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore TODO(TS) trace down config\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n    if (ev.isFinal && ev.maxPointers > 1) {\n      setTimeout(() => {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    }\n\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      // Handle case where one finger presses slightly\n      // after the first finger on a multi-tap event\n      if (ev.maxPointers > 1) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n\n      // Clear last timer\n      clearTimeout(this._timer);\n      // Create time out for multi-taps.\n      this._timer = setTimeout(() => {\n        this.hasGestureFailed = true;\n        this.cancelEvent(ev);\n      }, this.maxDelayMs);\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore TODO(TS) trace down config\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      event: this.name,\n      // @ts-ignore TODO(TS) trace down config\n      taps: isnan(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n      interval: this.maxDelayMs,\n      time:\n        // @ts-ignore TODO(TS) trace down config\n        isnan(this.config.maxDurationMs) || this.config.maxDurationMs == null\n          ? 250\n          : // @ts-ignore TODO(TS) trace down config\n            this.config.maxDurationMs,\n    };\n  }\n\n  updateGestureConfig({\n    shouldCancelWhenOutside = true,\n    maxDeltaX = Number.NaN,\n    maxDeltaY = Number.NaN,\n    numberOfTaps = 1,\n    minDurationMs = 525,\n    maxDelayMs = Number.NaN,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n    maxDurationMs = Number.NaN,\n    maxDist = 2,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldCancelWhenOutside,\n      numberOfTaps,\n      maxDeltaX,\n      maxDeltaY,\n      minDurationMs,\n      maxDelayMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  onGestureEnded(...props: any) {\n    clearTimeout(this._timer);\n    // @ts-ignore TODO(TS) check how onGestureEnded works\n    super.onGestureEnded(...props);\n  }\n\n  onWaitingEnded(_gesture: any) {\n    if (this._shouldFireEndEvent) {\n      this.onSuccessfulTap(this._shouldFireEndEvent);\n      this._shouldFireEndEvent = null;\n    }\n  }\n}\nexport default TapGestureHandler;\n"]},"metadata":{},"sourceType":"module"}