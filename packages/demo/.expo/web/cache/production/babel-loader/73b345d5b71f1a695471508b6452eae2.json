{"ast":null,"code":"'use strict';export function SequencedTransition(name,transitionData){var translateX=transitionData.translateX,translateY=transitionData.translateY,scaleX=transitionData.scaleX,scaleY=transitionData.scaleY,reversed=transitionData.reversed;var scaleValue=reversed?`1,${scaleX}`:`${scaleY},1`;var sequencedTransition={name:name,style:{0:{transform:[{translateX:`${translateX}px`,translateY:`${translateY}px`,scale:`${scaleX},${scaleY}`}]},50:{transform:[{translateX:reversed?`${translateX}px`:'0px',translateY:reversed?'0px':`${translateY}px`,scale:scaleValue}]},100:{transform:[{translateX:'0px',translateY:'0px',scale:'1,1'}]}},duration:300};return sequencedTransition;}","map":{"version":3,"sources":["Sequenced.web.ts"],"names":["SequencedTransition","name","transitionData","translateX","translateY","scaleX","scaleY","reversed","scaleValue","sequencedTransition","style","transform","scale","duration"],"mappings":"AAAA,YAAY,CAGZ,MAAO,SAASA,CAAAA,mBAAmBA,CACjCC,IAAY,CACZC,cAA8B,CAC9B,CACA,GAAQC,CAAAA,UAAU,CAA2CD,cAAc,CAAnEC,UAAU,CAAEC,UAAU,CAA+BF,cAAc,CAAvDE,UAAU,CAAEC,MAAM,CAAuBH,cAAc,CAA3CG,MAAM,CAAEC,MAAM,CAAeJ,cAAc,CAAnCI,MAAM,CAAEC,QAAAA,CAAaL,cAAc,CAA3BK,QAAAA,CAEhD,GAAMC,CAAAA,UAAU,CAAGD,QAAQ,CAAI,KAAIF,MAAO,EAAC,CAAI,GAAEC,MAAO,IAAG,CAE3D,GAAMG,CAAAA,mBAAmB,CAAG,CAC1BR,IAAI,CAAEA,IAAI,CACVS,KAAK,CAAE,CACL,CAAC,CAAE,CACDC,SAAS,CAAE,CACT,CACER,UAAU,CAAG,GAAEA,UAAW,IAAG,CAC7BC,UAAU,CAAG,GAAEA,UAAW,IAAG,CAC7BQ,KAAK,CAAG,GAAEP,MAAO,IAAGC,MAAO,EAC7B,CAAC,CAEL,CAAC,CACD,EAAE,CAAE,CACFK,SAAS,CAAE,CACT,CACER,UAAU,CAAEI,QAAQ,CAAI,GAAEJ,UAAW,IAAG,CAAG,KAAK,CAChDC,UAAU,CAAEG,QAAQ,CAAG,KAAK,CAAI,GAAEH,UAAW,IAAG,CAChDQ,KAAK,CAAEJ,UACT,CAAC,CAEL,CAAC,CACD,GAAG,CAAE,CACHG,SAAS,CAAE,CAAC,CAAER,UAAU,CAAE,KAAK,CAAEC,UAAU,CAAE,KAAK,CAAEQ,KAAK,CAAE,KAAM,CAAC,CACpE,CACF,CAAC,CACDC,QAAQ,CAAE,GACZ,CAAC,CAED,MAAOJ,CAAAA,mBAAmB,CAC5B","sourcesContent":["'use strict';\nimport type { TransitionData } from '../animationParser';\n\nexport function SequencedTransition(\n  name: string,\n  transitionData: TransitionData\n) {\n  const { translateX, translateY, scaleX, scaleY, reversed } = transitionData;\n\n  const scaleValue = reversed ? `1,${scaleX}` : `${scaleY},1`;\n\n  const sequencedTransition = {\n    name: name,\n    style: {\n      0: {\n        transform: [\n          {\n            translateX: `${translateX}px`,\n            translateY: `${translateY}px`,\n            scale: `${scaleX},${scaleY}`,\n          },\n        ],\n      },\n      50: {\n        transform: [\n          {\n            translateX: reversed ? `${translateX}px` : '0px',\n            translateY: reversed ? '0px' : `${translateY}px`,\n            scale: scaleValue,\n          },\n        ],\n      },\n      100: {\n        transform: [{ translateX: '0px', translateY: '0px', scale: '1,1' }],\n      },\n    },\n    duration: 300,\n  };\n\n  return sequencedTransition;\n}\n"]},"metadata":{},"sourceType":"module"}