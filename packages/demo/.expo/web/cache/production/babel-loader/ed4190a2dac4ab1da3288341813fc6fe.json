{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";export function toArray(object){if(!Array.isArray(object)){return[object];}return object;}export function withPrevAndCurrent(array,mapFn){var previousArr=[null];var currentArr=_toConsumableArray(array);var transformedArr=[];currentArr.forEach(function(current,i){var previous=previousArr[i];var transformed=mapFn(previous,current);previousArr.push(transformed);transformedArr.push(transformed);});return transformedArr;}export function hasProperty(object,key){return Object.prototype.hasOwnProperty.call(object,key);}export function isJestEnv(){return hasProperty(global,'process')&&!!process.env.JEST_WORKER_ID;}export function tagMessage(msg){return`[react-native-gesture-handler] ${msg}`;}export function isFabric(){var _global;return!!((_global=global)!==null&&_global!==void 0&&_global.nativeFabricUIManager);}export function isRemoteDebuggingEnabled(){return!global.nativeCallSyncHook||global.__REMOTEDEV__;}","map":{"version":3,"sources":["utils.ts"],"names":["toArray","object","Array","isArray","withPrevAndCurrent","array","mapFn","previousArr","currentArr","transformedArr","forEach","current","i","previous","transformed","push","hasProperty","key","Object","prototype","hasOwnProperty","call","isJestEnv","global","process","env","JEST_WORKER_ID","tagMessage","msg","isFabric","nativeFabricUIManager","isRemoteDebuggingEnabled","nativeCallSyncHook","__REMOTEDEV__"],"mappings":"yEAAA,MAAO,SAASA,CAAAA,OAAT,CAAoBC,MAApB,CAA0C,CAC/C,GAAI,CAACC,KAAK,CAACC,OAAND,CAAcD,MAAdC,CAAL,CAA4B,CAC1B,MAAO,CAACD,MAAD,CAAP,CACD,CAED,MAAOA,CAAAA,MAAP,CACD,CAMD,MAAO,SAASG,CAAAA,kBAAT,CACLC,KADK,CAELC,KAFK,CAGU,CACf,GAAMC,CAAAA,WAAmC,CAAG,CAAC,IAAD,CAA5C,CACA,GAAMC,CAAAA,UAAU,CAAA,kBAAA,CAAOH,KAAJ,CAAnB,CACA,GAAMI,CAAAA,cAA6B,CAAG,EAAtC,CACAD,UAAU,CAACE,OAAXF,CAAmB,SAACG,OAAD,CAAUC,CAAV,CAAgB,CACjC,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,CAACK,CAAD,CAA5B,CACA,GAAME,CAAAA,WAAW,CAAGR,KAAK,CAACO,QAAD,CAAWF,OAAX,CAAzB,CACAJ,WAAW,CAACQ,IAAZR,CAAiBO,WAAjBP,CAAAA,CACAE,cAAc,CAACM,IAAfN,CAAoBK,WAApBL,CAAAA,CACD,CALDD,CAAAA,CAMA,MAAOC,CAAAA,cAAP,CACD,CAGD,MAAO,SAASO,CAAAA,WAAT,CAAqBf,MAArB,CAAqCgB,GAArC,CAAkD,CACvD,MAAOC,CAAAA,MAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqCjB,MAArCiB,CAA6CD,GAA7CC,CAAP,CACD,CAED,MAAO,SAASI,CAAAA,SAAT,CAAA,CAA8B,CAEnC,MAAON,CAAAA,WAAW,CAACO,MAAD,CAAS,SAAT,CAAXP,EAAkC,CAAC,CAACQ,OAAO,CAACC,GAARD,CAAYE,cAAvD,CACD,CAED,MAAO,SAASC,CAAAA,UAAT,CAAoBC,GAApB,CAAiC,CACtC,MAAQ,kCAAiCA,GAAI,EAA7C,CACD,CAID,MAAO,SAASC,CAAAA,QAAT,CAAA,CAA6B,CAAA,GAAA,CAAA,OAAA,CAElC,MAAO,CAAC,EAAA,CAAA,OAAA,CAACN,MAAD,IAAA,IAAA,EAAA,OAAA,GAAA,IAAA,EAAA,EAACA,OAAAA,CAAQO,qBAAT,CAAR,CACD,CAED,MAAO,SAASC,CAAAA,wBAAT,CAAA,CAA6C,CAGlD,MAAO,CAAER,MAAD,CAAgBS,kBAAjB,EAAwCT,MAAD,CAAgBU,aAA9D,CACD","sourcesContent":["export function toArray<T>(object: T | T[]): T[] {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n\n  return object;\n}\n\nexport type withPrevAndCurrentMapFn<T, Transformed> = (\n  previous: Transformed | null,\n  current: T\n) => Transformed;\nexport function withPrevAndCurrent<T, Transformed>(\n  array: T[],\n  mapFn: withPrevAndCurrentMapFn<T, Transformed>\n): Transformed[] {\n  const previousArr: (null | Transformed)[] = [null];\n  const currentArr = [...array];\n  const transformedArr: Transformed[] = [];\n  currentArr.forEach((current, i) => {\n    const previous = previousArr[i];\n    const transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasProperty(object: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nexport function isJestEnv(): boolean {\n  // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n  return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n}\n\nexport function tagMessage(msg: string) {\n  return `[react-native-gesture-handler] ${msg}`;\n}\n\n// helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n// may not be initialized before the first render\nexport function isFabric(): boolean {\n  // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n  return !!global?.nativeFabricUIManager;\n}\n\nexport function isRemoteDebuggingEnabled(): boolean {\n  // react-native-reanimated checks if in remote debugging in the same way\n  // @ts-ignore global is available but node types are not included\n  return !(global as any).nativeCallSyncHook || (global as any).__REMOTEDEV__;\n}\n"]},"metadata":{},"sourceType":"module"}