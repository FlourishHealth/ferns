{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{Children,useRef}from\"react\";import{Box}from\"./Box\";import{IconButton}from\"./IconButton\";import{useTableContext}from\"./tableContext\";export var TableRow=function TableRow(_ref){var children=_ref.children,_ref$headerRow=_ref.headerRow,headerRow=_ref$headerRow===void 0?false:_ref$headerRow,expanded=_ref.expanded,drawerContents=_ref.drawerContents,_ref$color=_ref.color,color=_ref$color===void 0?\"white\":_ref$color;var _React$useState=React.useState(expanded||false),_React$useState2=_slicedToArray(_React$useState,2),isExpanded=_React$useState2[0],setIsExpanded=_React$useState2[1];var _useTableContext=useTableContext(),columns=_useTableContext.columns,hasDrawerContents=_useTableContext.hasDrawerContents;var rowRef=useRef(null);var renderCellWithColumnIndex=function renderCellWithColumnIndex(child,index){if(!columns[index]){console.warn(`No width defined for column ${index} in TableRow`);return null;}return React.createElement(Box,{paddingX:2,width:columns[index]},child);};var border={__style:{borderBottom:`${headerRow?2:1}px solid #e0e0e0`}};return React.createElement(Box,{ref:rowRef,color:color,dangerouslySetInlineStyle:border,width:\"100%\"},React.createElement(Box,{direction:\"row\",paddingY:1,width:\"100%\"},Boolean(drawerContents)&&(React.createElement(Box,{width:30},React.createElement(IconButton,{accessibilityLabel:\"expand\",bgColor:\"white\",icon:isExpanded?\"chevron-up\":\"chevron-down\",iconColor:\"darkGray\",size:\"sm\",onClick:function onClick(){setIsExpanded(!isExpanded);}}))),Boolean(hasDrawerContents&&!drawerContents)&&React.createElement(Box,{width:30}),Children.map(children,renderCellWithColumnIndex)),Boolean(isExpanded)&&(React.createElement(Box,{paddingX:2,width:\"100%\"},drawerContents)));};","map":{"version":3,"sources":["../src/TableRow.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { Children, useRef } from \"react\";\nimport { Box } from \"./Box\";\nimport { IconButton } from \"./IconButton\";\nimport { useTableContext } from \"./tableContext\";\n/**\n * Use TableRow to define a row in Table.\n */\nexport const TableRow = ({ children, headerRow = false, expanded, drawerContents, color = \"white\", }) => {\n    const [isExpanded, setIsExpanded] = React.useState(expanded || false);\n    const { columns, hasDrawerContents } = useTableContext();\n    const rowRef = useRef(null);\n    const renderCellWithColumnIndex = (child, index) => {\n        if (!columns[index]) {\n            console.warn(`No width defined for column ${index} in TableRow`);\n            return null;\n        }\n        return (React.createElement(Box, { paddingX: 2, width: columns[index] }, child));\n    };\n    const border = { __style: { borderBottom: `${headerRow ? 2 : 1}px solid #e0e0e0` } };\n    return (React.createElement(Box, { ref: rowRef, color: color, dangerouslySetInlineStyle: border, width: \"100%\" },\n        React.createElement(Box, { direction: \"row\", paddingY: 1, width: \"100%\" },\n            Boolean(drawerContents) && (React.createElement(Box, { width: 30 },\n                React.createElement(IconButton, { accessibilityLabel: \"expand\", bgColor: \"white\", icon: isExpanded ? \"chevron-up\" : \"chevron-down\", iconColor: \"darkGray\", size: \"sm\", onClick: () => {\n                        setIsExpanded(!isExpanded);\n                    } }))),\n            Boolean(hasDrawerContents && !drawerContents) && React.createElement(Box, { width: 30 }),\n            Children.map(children, renderCellWithColumnIndex)),\n        Boolean(isExpanded) && (React.createElement(Box, { paddingX: 2, width: \"100%\" }, drawerContents))));\n};\n//# sourceMappingURL=TableRow.js.map"]},"metadata":{},"sourceType":"module"}