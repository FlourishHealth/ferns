{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";var Dummy=function Dummy(_ref){var children=_ref.children;return React.createElement(React.Fragment,null,children);};export var PanGestureHandler=Dummy;export var TapGestureHandler=Dummy;export var GestureHandlerRootView=View;export var GestureState;(function(GestureState){GestureState[GestureState[\"UNDETERMINED\"]=0]=\"UNDETERMINED\";GestureState[GestureState[\"FAILED\"]=1]=\"FAILED\";GestureState[GestureState[\"BEGAN\"]=2]=\"BEGAN\";GestureState[GestureState[\"CANCELLED\"]=3]=\"CANCELLED\";GestureState[GestureState[\"ACTIVE\"]=4]=\"ACTIVE\";GestureState[GestureState[\"END\"]=5]=\"END\";})(GestureState||(GestureState={}));","map":{"version":3,"sources":["views/GestureHandler.tsx"],"names":["React","Dummy","children","PanGestureHandler","TapGestureHandler","GestureHandlerRootView","View","GestureState"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAK,KAAM,OAAO,CAAA,OAAA,IAAA,0CAO9B,GAAMC,CAAAA,KAAU,CAAG,QAAbA,CAAAA,KAAU,CAAG,IAAA,CAAA,CAAA,GAAGC,CAAAA,QAAAA,CAAyC,IAAA,CAAzCA,QAAAA,CAAyC,MAC7D,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAGA,QAAQ,CAAI,CAAA,CAChB,CAED,MAAO,IAAMC,CAAAA,iBAAiB,CAC5BF,KAAyD,CAE3D,MAAO,IAAMG,CAAAA,iBAAiB,CAC5BH,KAAyD,CAE3D,MAAO,IAAMI,CAAAA,sBAAsB,CAAGC,IAAI,CAE1C,MAAA,IAAkBC,CAAAA,YAAY,CAO7B,CAAA,SAPiBA,YAAY,CAAA,CAAZA,YAAY,CAAZA,YAAY,CAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CAAZA,YAAY,CAAZA,YAAY,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAZA,YAAY,CAAZA,YAAY,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAZA,YAAY,CAAZA,YAAY,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAZA,YAAY,CAAZA,YAAY,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAZA,YAAY,CAAZA,YAAY,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAZA,YAAY,GAAZA,YAAY,CAAA,CAAA,CAAA,CAAA,CAAA","sourceRoot":"../../../src","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nconst Dummy = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\nexport const PanGestureHandler = Dummy;\nexport const TapGestureHandler = Dummy;\nexport const GestureHandlerRootView = View;\nexport let GestureState;\n(function (GestureState) {\n  GestureState[GestureState[\"UNDETERMINED\"] = 0] = \"UNDETERMINED\";\n  GestureState[GestureState[\"FAILED\"] = 1] = \"FAILED\";\n  GestureState[GestureState[\"BEGAN\"] = 2] = \"BEGAN\";\n  GestureState[GestureState[\"CANCELLED\"] = 3] = \"CANCELLED\";\n  GestureState[GestureState[\"ACTIVE\"] = 4] = \"ACTIVE\";\n  GestureState[GestureState[\"END\"] = 5] = \"END\";\n})(GestureState || (GestureState = {}));\n//# sourceMappingURL=GestureHandler.js.map"]},"metadata":{},"sourceType":"module"}