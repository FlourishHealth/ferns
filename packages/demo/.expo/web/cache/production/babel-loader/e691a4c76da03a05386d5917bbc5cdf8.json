{"ast":null,"code":"import React from\"react\";import{Box}from\"./Box\";import{IconButton}from\"./IconButton\";import{useTableContext}from\"./tableContext\";export var TableHeaderCell=function TableHeaderCell(_ref){var children=_ref.children,index=_ref.index,sortable=_ref.sortable,onSortChange=_ref.onSortChange;var _useTableContext=useTableContext(),columns=_useTableContext.columns,setSortColumn=_useTableContext.setSortColumn,sortColumn=_useTableContext.sortColumn;var width=columns[index];if(!width){console.warn(`No width defined for column ${index} in TableHeaderCell`);}var onClick=function onClick(){var newSort=sort===\"desc\"?\"asc\":sort===\"asc\"?undefined:\"desc\";if(setSortColumn){setSortColumn(newSort?{column:index,direction:newSort}:undefined);}onSortChange&&onSortChange(newSort);};var sort=(sortColumn===null||sortColumn===void 0?void 0:sortColumn.column)===index?sortColumn.direction:undefined;if(sortable){if(!onSortChange){console.error(\"onSortChange is required when sortable is true\");}return React.createElement(Box,{alignItems:\"center\",direction:\"row\",flex:\"grow\",justifyContent:\"between\",marginBottom:2,marginTop:2,maxWidth:width,minHeight:36,width:width,onClick:onClick},children,Boolean(sort)&&(React.createElement(Box,{paddingX:2},React.createElement(IconButton,{accessibilityLabel:\"sort\",bgColor:\"white\",icon:sort===\"asc\"?\"arrow-down\":\"arrow-up\",iconColor:\"darkGray\",size:\"sm\",onClick:function onClick(){}}))));}else{return React.createElement(Box,{flex:\"grow\",justifyContent:\"center\",marginBottom:2,marginTop:2,width:width},children);}};","map":{"version":3,"sources":["../src/TableHeaderCell.tsx"],"names":[],"mappings":"AAAA,MAAO,CAAA,KAAqB,KAAM,OAAO,CAEzC,OAAQ,GAAG,KAAO,OAAO,CAEzB,OAAQ,UAAU,KAAO,cAAc,CACvC,OAAQ,eAAe,KAAO,gBAAgB,CAK9C,MAAO,IAAM,CAAA,eAAe,CAAG,QAAlB,CAAA,eAAe,CAAA,IAAA,CAKa,IAJvC,CAAA,QAAQ,CAAA,IAAA,CAAR,QAAQ,CACR,KAAK,CAAA,IAAA,CAAL,KAAK,CACL,QAAQ,CAAA,IAAA,CAAR,QAAQ,CACR,YAAY,CAAA,IAAA,CAAZ,YAAY,CAEZ,IAAA,gBAAA,CAA6C,eAAe,CAAA,CAAE,CAAvD,OAAO,CAAA,gBAAA,CAAP,OAAO,CAAE,aAAa,CAAA,gBAAA,CAAb,aAAa,CAAE,UAAU,CAAA,gBAAA,CAAV,UAAU,CACzC,GAAM,CAAA,KAAK,CAAG,OAAO,CAAC,KAAK,CAAC,CAC5B,GAAI,CAAC,KAAK,CAAE,CACV,OAAO,CAAC,IAAI,CAAC,+BAA+B,KAAK,qBAAqB,CAAC,CACzE,CAEA,GAAM,CAAA,OAAO,CAAG,QAAV,CAAA,OAAO,CAAA,CAAQ,CAEnB,GAAM,CAAA,OAAO,CAAG,IAAI,GAAK,MAAM,CAAG,KAAK,CAAG,IAAI,GAAK,KAAK,CAAG,SAAS,CAAG,MAAM,CAC7E,GAAI,aAAa,CAAE,CACjB,aAAa,CAAC,OAAO,CAAG,CAAC,MAAM,CAAE,KAAK,CAAE,SAAS,CAAE,OAAO,CAAC,CAAG,SAAS,CAAC,CAC1E,CACA,YAAY,EAAI,YAAY,CAAC,OAAO,CAAC,CACvC,CAAC,CACD,GAAM,CAAA,IAAI,CAAG,CAAA,UAAU,GAAA,IAAA,EAAV,UAAU,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAV,UAAU,CAAE,MAAM,IAAK,KAAK,CAAG,UAAU,CAAC,SAAS,CAAG,SAAS,CAE5E,GAAI,QAAQ,CAAE,CACZ,GAAI,CAAC,YAAY,CAAE,CACjB,OAAO,CAAC,KAAK,CAAC,gDAAgD,CAAC,CACjE,CACA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,GAAG,CAAA,CACF,UAAU,CAAC,QAAQ,CACnB,SAAS,CAAC,KAAK,CACf,IAAI,CAAC,MAAM,CACX,cAAc,CAAC,SAAS,CACxB,YAAY,CAAE,CAAC,CACf,SAAS,CAAE,CAAC,CACZ,QAAQ,CAAE,KAAK,CACf,SAAS,CAAE,EAAE,CACb,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,OAAO,CAAA,CAEf,QAAQ,CACR,OAAO,CAAC,IAAI,CAAC,GACZ,KAAA,CAAA,aAAA,CAAC,GAAG,CAAA,CAAC,QAAQ,CAAE,CAAC,CAAA,CACd,KAAA,CAAA,aAAA,CAAC,UAAU,CAAA,CACT,kBAAkB,CAAC,MAAM,CACzB,OAAO,CAAC,OAAO,CACf,IAAI,CAAE,IAAI,GAAK,KAAK,CAAG,YAAY,CAAG,UAAU,CAChD,SAAS,CAAC,UAAU,CACpB,IAAI,CAAC,IAAI,CACT,OAAO,CAAE,SAAA,QAAA,CAAK,CAAE,CAAC,CAAA,CACjB,CACE,CACP,CACG,CAEV,CAAC,IAAM,CACL,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,GAAG,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAC,CAAE,SAAS,CAAE,CAAC,CAAE,KAAK,CAAE,KAAK,CAAA,CACjF,QAAQ,CACL,CAEV,CACF,CAAC","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Box } from \"./Box\";\nimport { IconButton } from \"./IconButton\";\nimport { useTableContext } from \"./tableContext\";\n/**\n * Use TableHeaderCell to define a header cell in Table.\n */\nexport const TableHeaderCell = ({ children, index, sortable, onSortChange, }) => {\n    const { columns, setSortColumn, sortColumn } = useTableContext();\n    const width = columns[index];\n    if (!width) {\n        console.warn(`No width defined for column ${index} in TableHeaderCell`);\n    }\n    const onClick = () => {\n        // desc => asc => undefined\n        const newSort = sort === \"desc\" ? \"asc\" : sort === \"asc\" ? undefined : \"desc\";\n        if (setSortColumn) {\n            setSortColumn(newSort ? { column: index, direction: newSort } : undefined);\n        }\n        onSortChange && onSortChange(newSort);\n    };\n    const sort = (sortColumn === null || sortColumn === void 0 ? void 0 : sortColumn.column) === index ? sortColumn.direction : undefined;\n    if (sortable) {\n        if (!onSortChange) {\n            console.error(\"onSortChange is required when sortable is true\");\n        }\n        return (React.createElement(Box, { alignItems: \"center\", direction: \"row\", flex: \"grow\", justifyContent: \"between\", marginBottom: 2, marginTop: 2, maxWidth: width, minHeight: 36, width: width, onClick: onClick },\n            children,\n            Boolean(sort) && (React.createElement(Box, { paddingX: 2 },\n                React.createElement(IconButton, { accessibilityLabel: \"sort\", bgColor: \"white\", icon: sort === \"asc\" ? \"arrow-down\" : \"arrow-up\", iconColor: \"darkGray\", size: \"sm\", onClick: () => { } })))));\n    }\n    else {\n        return (React.createElement(Box, { flex: \"grow\", justifyContent: \"center\", marginBottom: 2, marginTop: 2, width: width }, children));\n    }\n};\n//# sourceMappingURL=TableHeaderCell.js.map"]},"metadata":{},"sourceType":"module"}