{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useRef,useEffect,useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Text from\"react-native-web/dist/exports/Text\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Platform from\"react-native-web/dist/exports/Platform\";import{useDimensions}from\"./utils/useDimensions\";var Toast=function Toast(props){var id=props.id,onDestroy=props.onDestroy,icon=props.icon,_props$type=props.type,type=_props$type===void 0?\"normal\":_props$type,message=props.message,_props$duration=props.duration,duration=_props$duration===void 0?5000:_props$duration,style=props.style,textStyle=props.textStyle,_props$animationDurat=props.animationDuration,animationDuration=_props$animationDurat===void 0?250:_props$animationDurat,_props$animationType=props.animationType,animationType=_props$animationType===void 0?\"slide-in\":_props$animationType,successIcon=props.successIcon,dangerIcon=props.dangerIcon,warningIcon=props.warningIcon,successColor=props.successColor,dangerColor=props.dangerColor,warningColor=props.warningColor,normalColor=props.normalColor,placement=props.placement,swipeEnabled=props.swipeEnabled,_onPress=props.onPress;var containerRef=useRef(null);var _useState=useState(new Animated.Value(0)),_useState2=_slicedToArray(_useState,1),animation=_useState2[0];var panResponderRef=useRef();var panResponderAnimRef=useRef();var closeTimeoutRef=useRef(null);var dims=useDimensions();useEffect(function(){Animated.timing(animation,{toValue:1,useNativeDriver:\"web\"!==\"web\",duration:animationDuration}).start();if(duration!==0&&typeof duration===\"number\"){closeTimeoutRef.current=setTimeout(function(){handleClose();},duration);}return function(){closeTimeoutRef.current&&clearTimeout(closeTimeoutRef.current);};},[duration]);useEffect(function(){if(!props.open){closeTimeoutRef.current&&clearTimeout(closeTimeoutRef.current);handleClose();}},[props.open]);var handleClose=function handleClose(){Animated.timing(animation,{toValue:0,useNativeDriver:\"web\"!==\"web\",duration:animationDuration}).start(function(){return onDestroy();});};var panReleaseToLeft=function panReleaseToLeft(gestureState){Animated.timing(getPanResponderAnim(),{toValue:{x:-dims.width/10*9,y:gestureState.dy},useNativeDriver:\"web\"!==\"web\",duration:250}).start(function(){return onDestroy();});};var panReleaseToRight=function panReleaseToRight(gestureState){Animated.timing(getPanResponderAnim(),{toValue:{x:dims.width/10*9,y:gestureState.dy},useNativeDriver:\"web\"!==\"web\",duration:250}).start(function(){return onDestroy();});};var getPanResponder=function getPanResponder(){if(panResponderRef.current)return panResponderRef.current;var swipeThreshold=\"web\"===\"android\"?10:0;panResponderRef.current=PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(_,gestureState){return Math.abs(gestureState.dx)>swipeThreshold||Math.abs(gestureState.dy)>swipeThreshold;},onPanResponderMove:function onPanResponderMove(_,gestureState){var _getPanResponderAnim;(_getPanResponderAnim=getPanResponderAnim())===null||_getPanResponderAnim===void 0?void 0:_getPanResponderAnim.setValue({x:gestureState.dx,y:gestureState.dy});},onPanResponderRelease:function onPanResponderRelease(_,gestureState){if(gestureState.dx>50){panReleaseToRight(gestureState);}else if(gestureState.dx<-50){panReleaseToLeft(gestureState);}else{Animated.spring(getPanResponderAnim(),{toValue:{x:0,y:0},useNativeDriver:\"web\"!==\"web\"}).start();}}});return panResponderRef.current;};var getPanResponderAnim=function getPanResponderAnim(){if(panResponderAnimRef.current)return panResponderAnimRef.current;panResponderAnimRef.current=new Animated.ValueXY({x:0,y:0});return panResponderAnimRef.current;};if(icon===undefined){switch(type){case\"success\":{if(successIcon){icon=successIcon;}break;}case\"danger\":{if(dangerIcon){icon=dangerIcon;}break;}case\"warning\":{if(warningIcon){icon=warningIcon;}break;}}}var backgroundColor=\"\";switch(type){case\"success\":backgroundColor=successColor||\"rgb(46, 125, 50)\";break;case\"danger\":backgroundColor=dangerColor||\"rgb(211, 47, 47)\";break;case\"warning\":backgroundColor=warningColor||\"rgb(237, 108, 2)\";break;default:backgroundColor=normalColor||\"#333\";}var animationStyle={opacity:animation,transform:[{translateY:animation.interpolate({inputRange:[0,1],outputRange:placement===\"bottom\"?[20,0]:[-20,0]})}]};if(swipeEnabled){var _animationStyle$trans;(_animationStyle$trans=animationStyle.transform)===null||_animationStyle$trans===void 0?void 0:_animationStyle$trans.push(getPanResponderAnim().getTranslateTransform()[0]);}if(animationType===\"zoom-in\"){var _animationStyle$trans2;(_animationStyle$trans2=animationStyle.transform)===null||_animationStyle$trans2===void 0?void 0:_animationStyle$trans2.push({scale:animation.interpolate({inputRange:[0,1],outputRange:[0.7,1]})});}return React.createElement(Animated.View,_extends({pointerEvents:\"box-none\",ref:containerRef},swipeEnabled?getPanResponder().panHandlers:null,{style:[styles.container,animationStyle]}),props.renderType&&props.renderType[type]?props.renderType[type](props):props.renderToast?props.renderToast(props):React.createElement(TouchableWithoutFeedback,{disabled:!_onPress,onPress:function onPress(){return _onPress&&_onPress(id);}},React.createElement(View,{style:[styles.toastContainer,{maxWidth:dims.width/10*9,backgroundColor:backgroundColor},style]},icon?React.createElement(View,{style:styles.iconContainer},icon):null,React.isValidElement(message)?message:React.createElement(Text,{style:[styles.message,textStyle]},message))));};var styles=StyleSheet.create({container:{width:\"100%\",alignItems:\"center\"},toastContainer:{paddingHorizontal:12,paddingVertical:12,borderRadius:5,marginVertical:5,flexDirection:\"row\",alignItems:\"center\",overflow:\"hidden\"},message:{color:\"#fff\",fontWeight:\"500\"},iconContainer:{marginRight:5}});export default Toast;","map":{"version":3,"names":["React","useRef","useEffect","useState","View","StyleSheet","Animated","Text","TouchableWithoutFeedback","PanResponder","Platform","useDimensions","Toast","props","id","onDestroy","icon","_props$type","type","message","_props$duration","duration","style","textStyle","_props$animationDurat","animationDuration","_props$animationType","animationType","successIcon","dangerIcon","warningIcon","successColor","dangerColor","warningColor","normalColor","placement","swipeEnabled","onPress","containerRef","_useState","Value","_useState2","_slicedToArray","animation","panResponderRef","panResponderAnimRef","closeTimeoutRef","dims","timing","toValue","useNativeDriver","start","current","setTimeout","handleClose","clearTimeout","open","panReleaseToLeft","gestureState","getPanResponderAnim","x","width","y","dy","panReleaseToRight","getPanResponder","swipeThreshold","create","onMoveShouldSetPanResponder","_","Math","abs","dx","onPanResponderMove","_getPanResponderAnim","setValue","onPanResponderRelease","spring","ValueXY","undefined","backgroundColor","animationStyle","opacity","transform","translateY","interpolate","inputRange","outputRange","_animationStyle$trans","push","getTranslateTransform","_animationStyle$trans2","scale","createElement","_extends","pointerEvents","ref","panHandlers","styles","container","renderType","renderToast","disabled","toastContainer","maxWidth","iconContainer","isValidElement","alignItems","paddingHorizontal","paddingVertical","borderRadius","marginVertical","flexDirection","overflow","color","fontWeight","marginRight"],"sources":["/Users/josh/src/ui/node_modules/react-native-toast-notifications/lib/module/toast.tsx"],"sourcesContent":["import React, { FC, useRef, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Animated,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  PanResponder,\r\n  PanResponderInstance,\r\n  PanResponderGestureState,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { useDimensions } from \"./utils/useDimensions\";\r\n\r\nexport interface ToastOptions {\r\n  /**\r\n   * Id is optional, you may provide an id only if you want to update toast later using toast.update()\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Customize toast icon\r\n   */\r\n  icon?: JSX.Element;\r\n\r\n  /**\r\n   * Toast types, You can implement your custom types with JSX using renderType method on ToastContainer.\r\n   */\r\n  type?: \"normal\" | \"success\" | \"danger\" | \"warning\" | string;\r\n\r\n  /**\r\n   * In ms, How long toast will stay before it go away\r\n   */\r\n  duration?: number;\r\n\r\n  /**\r\n   * Customize when toast should be placed\r\n   */\r\n  placement?: \"top\" | \"bottom\" | \"center\";\r\n\r\n  /**\r\n   * Customize style of toast\r\n   */\r\n  style?: StyleProp<ViewStyle>;\r\n\r\n  /**\r\n   * Customize style of toast text\r\n   */\r\n  textStyle?: StyleProp<TextStyle>;\r\n\r\n  /**\r\n   * Customize how fast toast will show and hide\r\n   */\r\n  animationDuration?: number;\r\n\r\n  /**\r\n   * Customize how toast is animated when added or removed\r\n   */\r\n  animationType?: \"slide-in\" | \"zoom-in\";\r\n\r\n  /**\r\n   * Customize success type icon\r\n   */\r\n  successIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize danger type icon\r\n   */\r\n  dangerIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize warning type icon\r\n   */\r\n  warningIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize success type color. changes toast background color\r\n   */\r\n  successColor?: string;\r\n\r\n  /**\r\n   * Customize danger type color. changes toast background color\r\n   */\r\n  dangerColor?: string;\r\n\r\n  /**\r\n   * Customize warning type color. changes toast background color\r\n   */\r\n  warningColor?: string;\r\n\r\n  /**\r\n   * Customize normal type color. changes toast background color\r\n   */\r\n  normalColor?: string;\r\n\r\n  /**\r\n   * Register event for when toast is pressed. If you're using a custom toast you have to pass this to a Touchable.\r\n   */\r\n  onPress?(id: string): void;\r\n\r\n  /**\r\n   * Execute event after toast is closed\r\n   */\r\n  onClose?(): void;\r\n\r\n  /**\r\n   * Payload data for custom toasts. You can pass whatever you want\r\n   */\r\n  data?: any;\r\n\r\n  swipeEnabled?: boolean;\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onDestroy(): void;\r\n  message: string | JSX.Element;\r\n  open: boolean;\r\n  renderToast?(toast: ToastProps): JSX.Element;\r\n  renderType?: { [type: string]: (toast: ToastProps) => JSX.Element };\r\n  onHide(): void;\r\n}\r\n\r\nconst Toast: FC<ToastProps> = (props) => {\r\n  let {\r\n    id,\r\n    onDestroy,\r\n    icon,\r\n    type = \"normal\",\r\n    message,\r\n    duration = 5000,\r\n    style,\r\n    textStyle,\r\n    animationDuration = 250,\r\n    animationType = \"slide-in\",\r\n    successIcon,\r\n    dangerIcon,\r\n    warningIcon,\r\n    successColor,\r\n    dangerColor,\r\n    warningColor,\r\n    normalColor,\r\n    placement,\r\n    swipeEnabled,\r\n    onPress,\r\n  } = props;\r\n\r\n  const containerRef = useRef<View>(null);\r\n  const [animation] = useState(new Animated.Value(0));\r\n  const panResponderRef = useRef<PanResponderInstance>();\r\n  const panResponderAnimRef = useRef<Animated.ValueXY>();\r\n  const closeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const dims = useDimensions();\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animation, {\r\n      toValue: 1,\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: animationDuration,\r\n    }).start();\r\n    if (duration !== 0 && typeof duration === \"number\") {\r\n      closeTimeoutRef.current = setTimeout(() => {\r\n        handleClose();\r\n      }, duration);\r\n    }\r\n\r\n    return () => {\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n    };\r\n  }, [duration]);\r\n\r\n  // Handles hide & hideAll\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      // Unregister close timeout\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n\r\n      // Close animation them remove from stack.\r\n      handleClose();\r\n    }\r\n  }, [props.open]);\r\n\r\n  const handleClose = () => {\r\n    Animated.timing(animation, {\r\n      toValue: 0,\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: animationDuration,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToLeft = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (-dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToRight = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const getPanResponder = () => {\r\n    if (panResponderRef.current) return panResponderRef.current;\r\n    const swipeThreshold = Platform.OS === \"android\" ? 10 : 0;\r\n    panResponderRef.current = PanResponder.create({\r\n      onMoveShouldSetPanResponder: (_, gestureState) => {\r\n        //return true if user is swiping, return false if it's a single click\r\n        return (\r\n          Math.abs(gestureState.dx) > swipeThreshold ||\r\n          Math.abs(gestureState.dy) > swipeThreshold\r\n        );\r\n      },\r\n      onPanResponderMove: (_, gestureState) => {\r\n        getPanResponderAnim()?.setValue({\r\n          x: gestureState.dx,\r\n          y: gestureState.dy,\r\n        });\r\n      },\r\n      onPanResponderRelease: (_, gestureState) => {\r\n        if (gestureState.dx > 50) {\r\n          panReleaseToRight(gestureState);\r\n        } else if (gestureState.dx < -50) {\r\n          panReleaseToLeft(gestureState);\r\n        } else {\r\n          Animated.spring(getPanResponderAnim(), {\r\n            toValue: { x: 0, y: 0 },\r\n            useNativeDriver: Platform.OS !== \"web\",\r\n          }).start();\r\n        }\r\n      },\r\n    });\r\n    return panResponderRef.current;\r\n  };\r\n\r\n  const getPanResponderAnim = () => {\r\n    if (panResponderAnimRef.current) return panResponderAnimRef.current;\r\n    panResponderAnimRef.current = new Animated.ValueXY({ x: 0, y: 0 });\r\n    return panResponderAnimRef.current;\r\n  };\r\n\r\n  if (icon === undefined) {\r\n    switch (type) {\r\n      case \"success\": {\r\n        if (successIcon) {\r\n          icon = successIcon;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"danger\": {\r\n        if (dangerIcon) {\r\n          icon = dangerIcon;\r\n        }\r\n        break;\r\n      }\r\n      case \"warning\": {\r\n        if (warningIcon) {\r\n          icon = warningIcon;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  let backgroundColor = \"\";\r\n  switch (type) {\r\n    case \"success\":\r\n      backgroundColor = successColor || \"rgb(46, 125, 50)\";\r\n      break;\r\n    case \"danger\":\r\n      backgroundColor = dangerColor || \"rgb(211, 47, 47)\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = warningColor || \"rgb(237, 108, 2)\";\r\n      break;\r\n    default:\r\n      backgroundColor = normalColor || \"#333\";\r\n  }\r\n\r\n  const animationStyle: Animated.WithAnimatedObject<ViewStyle> = {\r\n    opacity: animation,\r\n    transform: [\r\n      {\r\n        translateY: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: placement === \"bottom\" ? [20, 0] : [-20, 0], // 0 : 150, 0.5 : 75, 1 : 0\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (swipeEnabled) {\r\n    animationStyle.transform?.push(\r\n      getPanResponderAnim().getTranslateTransform()[0]\r\n    );\r\n  }\r\n\r\n  if (animationType === \"zoom-in\") {\r\n    animationStyle.transform?.push({\r\n      scale: animation.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [0.7, 1],\r\n      }),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Animated.View\r\n      pointerEvents={\"box-none\"}\r\n      ref={containerRef}\r\n      {...(swipeEnabled ? getPanResponder().panHandlers : null)}\r\n      style={[styles.container, animationStyle]}\r\n    >\r\n      {props.renderType && props.renderType[type] ? (\r\n        props.renderType[type](props)\r\n      ) : props.renderToast ? (\r\n        props.renderToast(props)\r\n      ) : (\r\n        <TouchableWithoutFeedback\r\n          disabled={!onPress}\r\n          onPress={() => onPress && onPress(id)}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.toastContainer,\r\n              { maxWidth: (dims.width / 10) * 9, backgroundColor },\r\n              style,\r\n            ]}\r\n          >\r\n            {icon ? <View style={styles.iconContainer}>{icon}</View> : null}\r\n            {React.isValidElement(message) ? (\r\n              message\r\n            ) : (\r\n              <Text style={[styles.message, textStyle]}>{message}</Text>\r\n            )}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { width: \"100%\", alignItems: \"center\" },\r\n  toastContainer: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginVertical: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\",\r\n  },\r\n  message: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n  iconContainer: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\nexport default Toast;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}