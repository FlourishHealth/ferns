{"ast":null,"code":"'use strict';import{Animations}from'./config';import{LayoutAnimationType}from'../animationBuilder/commonTypes';import{createAnimationWithExistingTransform}from'./createAnimation';import{extractTransformFromStyle,getProcessedConfig,handleExitingAnimation,handleLayoutTransition,makeElementVisible,setElementAnimation}from'./componentUtils';import{areDOMRectsEqual}from'./domUtils';function chooseConfig(animationType,props){var config=animationType===LayoutAnimationType.ENTERING?props.entering:animationType===LayoutAnimationType.EXITING?props.exiting:animationType===LayoutAnimationType.LAYOUT?props.layout:null;return config;}function checkUndefinedAnimationFail(initialAnimationName,isLayoutTransition){if(initialAnimationName in Animations||isLayoutTransition){return false;}console.warn(\"[Reanimated] Couldn't load entering/exiting animation. Current version supports only predefined animations with modifiers: duration, delay, easing, randomizeDelay, wtihCallback, reducedMotion.\");return true;}function chooseAction(animationType,animationConfig,element,transitionData,transform){switch(animationType){case LayoutAnimationType.ENTERING:setElementAnimation(element,animationConfig);break;case LayoutAnimationType.LAYOUT:transitionData.reversed=animationConfig.reversed;handleLayoutTransition(element,animationConfig,transitionData,transform);break;case LayoutAnimationType.EXITING:handleExitingAnimation(element,animationConfig);break;}}function tryGetAnimationConfigWithTransform(props,animationType){var config=chooseConfig(animationType,props);if(!config){return null;}var isLayoutTransition=animationType===LayoutAnimationType.LAYOUT;var initialAnimationName=typeof config==='function'?config.presetName:config.constructor.presetName;var shouldFail=checkUndefinedAnimationFail(initialAnimationName,isLayoutTransition);if(shouldFail){return null;}var transform=extractTransformFromStyle(props.style);var animationName=transform?createAnimationWithExistingTransform(initialAnimationName,transform):initialAnimationName;var animationConfig=getProcessedConfig(animationName,animationType,config,initialAnimationName);return{animationConfig:animationConfig,transform:transform};}export function startWebLayoutAnimation(props,element,animationType,transitionData){var maybeAnimationConfigWithTransform=tryGetAnimationConfigWithTransform(props,animationType);if(maybeAnimationConfigWithTransform){var animationConfig=maybeAnimationConfigWithTransform.animationConfig,transform=maybeAnimationConfigWithTransform.transform;chooseAction(animationType,animationConfig,element,transitionData,transform);}else{makeElementVisible(element,0);}}export function tryActivateLayoutTransition(props,element,snapshot){if(!props.layout){return;}var rect=element.getBoundingClientRect();if(areDOMRectsEqual(rect,snapshot)){return;}var transitionData={translateX:snapshot.x-rect.x,translateY:snapshot.y-rect.y,scaleX:snapshot.width/rect.width,scaleY:snapshot.height/rect.height,reversed:false};startWebLayoutAnimation(props,element,LayoutAnimationType.LAYOUT,transitionData);}","map":{"version":3,"sources":["animationsManager.ts"],"names":["Animations","LayoutAnimationType","createAnimationWithExistingTransform","extractTransformFromStyle","getProcessedConfig","handleExitingAnimation","handleLayoutTransition","makeElementVisible","setElementAnimation","areDOMRectsEqual","chooseConfig","animationType","props","config","ENTERING","entering","EXITING","exiting","LAYOUT","layout","checkUndefinedAnimationFail","initialAnimationName","isLayoutTransition","console","warn","chooseAction","animationConfig","element","transitionData","transform","reversed","tryGetAnimationConfigWithTransform","presetName","constructor","shouldFail","style","animationName","startWebLayoutAnimation","maybeAnimationConfigWithTransform","tryActivateLayoutTransition","snapshot","rect","getBoundingClientRect","translateX","x","translateY","y","scaleX","width","scaleY","height"],"mappings":"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","sourcesContent":["'use strict';\n\nimport type { AnimationConfig, AnimationNames, CustomConfig } from './config';\nimport { Animations } from './config';\nimport type {\n  AnimatedComponentProps,\n  LayoutAnimationStaticContext,\n} from '../../../createAnimatedComponent/commonTypes';\nimport { LayoutAnimationType } from '../animationBuilder/commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport { createAnimationWithExistingTransform } from './createAnimation';\nimport {\n  extractTransformFromStyle,\n  getProcessedConfig,\n  handleExitingAnimation,\n  handleLayoutTransition,\n  makeElementVisible,\n  setElementAnimation,\n} from './componentUtils';\nimport { areDOMRectsEqual } from './domUtils';\nimport type { TransformsStyle } from 'react-native';\nimport type { TransitionData } from './animationParser';\n\nfunction chooseConfig<ComponentProps extends Record<string, unknown>>(\n  animationType: LayoutAnimationType,\n  props: Readonly<AnimatedComponentProps<ComponentProps>>\n) {\n  const config =\n    animationType === LayoutAnimationType.ENTERING\n      ? props.entering\n      : animationType === LayoutAnimationType.EXITING\n      ? props.exiting\n      : animationType === LayoutAnimationType.LAYOUT\n      ? props.layout\n      : null;\n\n  return config;\n}\n\nfunction checkUndefinedAnimationFail(\n  initialAnimationName: string,\n  isLayoutTransition: boolean\n) {\n  // This prevents crashes if we try to set animations that are not defined.\n  // We don't care about layout transitions since they're created dynamically\n  if (initialAnimationName in Animations || isLayoutTransition) {\n    return false;\n  }\n\n  console.warn(\n    \"[Reanimated] Couldn't load entering/exiting animation. Current version supports only predefined animations with modifiers: duration, delay, easing, randomizeDelay, wtihCallback, reducedMotion.\"\n  );\n\n  return true;\n}\n\nfunction chooseAction(\n  animationType: LayoutAnimationType,\n  animationConfig: AnimationConfig,\n  element: HTMLElement,\n  transitionData: TransitionData,\n  transform: TransformsStyle['transform'] | undefined\n) {\n  switch (animationType) {\n    case LayoutAnimationType.ENTERING:\n      setElementAnimation(element, animationConfig);\n      break;\n    case LayoutAnimationType.LAYOUT:\n      transitionData.reversed = animationConfig.reversed;\n\n      handleLayoutTransition(\n        element,\n        animationConfig,\n        transitionData,\n        transform\n      );\n      break;\n    case LayoutAnimationType.EXITING:\n      handleExitingAnimation(element, animationConfig);\n      break;\n  }\n}\n\nfunction tryGetAnimationConfigWithTransform<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  animationType: LayoutAnimationType\n) {\n  const config = chooseConfig(animationType, props);\n  if (!config) {\n    return null;\n  }\n\n  type ConstructorWithStaticContext = LayoutAnimationStaticContext &\n    typeof config.constructor;\n\n  const isLayoutTransition = animationType === LayoutAnimationType.LAYOUT;\n  const initialAnimationName =\n    typeof config === 'function'\n      ? config.presetName\n      : (config.constructor as ConstructorWithStaticContext).presetName;\n\n  const shouldFail = checkUndefinedAnimationFail(\n    initialAnimationName,\n    isLayoutTransition\n  );\n\n  if (shouldFail) {\n    return null;\n  }\n\n  const transform = extractTransformFromStyle(props.style as StyleProps);\n\n  const animationName = transform\n    ? createAnimationWithExistingTransform(initialAnimationName, transform)\n    : initialAnimationName;\n\n  const animationConfig = getProcessedConfig(\n    animationName,\n    animationType,\n    config as CustomConfig,\n    initialAnimationName as AnimationNames\n  );\n\n  return { animationConfig, transform };\n}\n\nexport function startWebLayoutAnimation<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: HTMLElement,\n  animationType: LayoutAnimationType,\n  transitionData?: TransitionData\n) {\n  const maybeAnimationConfigWithTransform = tryGetAnimationConfigWithTransform(\n    props,\n    animationType\n  );\n\n  if (maybeAnimationConfigWithTransform) {\n    const { animationConfig, transform } = maybeAnimationConfigWithTransform;\n\n    chooseAction(\n      animationType,\n      animationConfig,\n      element,\n      transitionData as TransitionData,\n      transform\n    );\n  } else {\n    makeElementVisible(element, 0);\n  }\n}\n\nexport function tryActivateLayoutTransition<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: HTMLElement,\n  snapshot: DOMRect\n) {\n  if (!props.layout) {\n    return;\n  }\n\n  const rect = element.getBoundingClientRect();\n\n  if (areDOMRectsEqual(rect, snapshot)) {\n    return;\n  }\n\n  const transitionData: TransitionData = {\n    translateX: snapshot.x - rect.x,\n    translateY: snapshot.y - rect.y,\n    scaleX: snapshot.width / rect.width,\n    scaleY: snapshot.height / rect.height,\n    reversed: false, // This field is used only in `SequencedTransition`, so by default it will be false\n  };\n\n  startWebLayoutAnimation(\n    props,\n    element,\n    LayoutAnimationType.LAYOUT,\n    transitionData\n  );\n}\n"]},"metadata":{},"sourceType":"module"}