{"ast":null,"code":"'use strict';import{useEffect,useRef}from'react';import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import{useEvent}from'./useEvent';import{useSharedValue}from'./useSharedValue';var scrollEventNames=['onScroll','onScrollBeginDrag','onScrollEndDrag','onMomentumScrollBegin','onMomentumScrollEnd'];var _worklet_7096777976604_init_data={code:\"function anonymous(event){const{offsetRef}=this.__closure;offsetRef.current.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\"};export function useScrollViewOffset(animatedRef,initialRef){var offsetRef=useRef(initialRef!==undefined?initialRef:useSharedValue(0));var event=useEvent(function(){var anonymous=function anonymous(event){offsetRef.current.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;};anonymous.__closure={offsetRef:offsetRef};anonymous.__workletHash=7096777976604;anonymous.__initData=_worklet_7096777976604_init_data;return anonymous;}(),scrollEventNames);useEffect(function(){var _event$current;var viewTag=findNodeHandle(animatedRef.current);(_event$current=event.current)===null||_event$current===void 0?void 0:_event$current.registerForEvents(viewTag);return function(){var _event$current2;(_event$current2=event.current)===null||_event$current2===void 0?void 0:_event$current2.unregisterFromEvents();};},[animatedRef.current]);return offsetRef.current;}","map":{"version":3,"names":["useEffect","useRef","findNodeHandle","useEvent","useSharedValue","scrollEventNames","_worklet_7096777976604_init_data","code","useScrollViewOffset","animatedRef","initialRef","offsetRef","undefined","event","anonymous","current","value","contentOffset","x","y","__closure","__workletHash","__initData","_event$current","viewTag","registerForEvents","_event$current2","unregisterFromEvents"],"sources":["/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useScrollViewOffset.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport type { SharedValue } from '../commonTypes';\nimport { findNodeHandle } from 'react-native';\nimport type { EventHandlerInternal } from './useEvent';\nimport { useEvent } from './useEvent';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedScrollView } from '../component/ScrollView';\nimport type {\n  AnimatedRef,\n  RNNativeScrollEvent,\n  ReanimatedScrollEvent,\n} from './commonTypes';\n\nconst scrollEventNames = [\n  'onScroll',\n  'onScrollBeginDrag',\n  'onScrollEndDrag',\n  'onMomentumScrollBegin',\n  'onMomentumScrollEnd',\n];\n\n/**\n * Lets you synchronously get the current offset of a `ScrollView`.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef) attached to an Animated.ScrollView component.\n * @returns A shared value which holds the current offset of the `ScrollView`.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollViewOffset\n */\nexport function useScrollViewOffset(\n  animatedRef: AnimatedRef<AnimatedScrollView>,\n  initialRef?: SharedValue<number>\n): SharedValue<number> {\n  const offsetRef = useRef(\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    initialRef !== undefined ? initialRef : useSharedValue(0)\n  );\n\n  const event = useEvent<RNNativeScrollEvent>(\n    (event: ReanimatedScrollEvent) => {\n      'worklet';\n      offsetRef.current.value =\n        event.contentOffset.x === 0\n          ? event.contentOffset.y\n          : event.contentOffset.x;\n    },\n    scrollEventNames\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n  ) as unknown as EventHandlerInternal<ReanimatedScrollEvent>;\n\n  useEffect(() => {\n    const viewTag = findNodeHandle(animatedRef.current);\n    event.current?.registerForEvents(viewTag as number);\n\n    return () => {\n      event.current?.unregisterFromEvents();\n    };\n  }, [animatedRef.current]);\n\n  return offsetRef.current;\n}\n"],"mappings":"AAAA,YAAY,CACZ,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,QAAAC,cAAA,oDAIzC,OAASC,QAAQ,KAAQ,YAAY,CACrC,OAASC,cAAc,KAAQ,kBAAkB,CAQjD,GAAM,CAAAC,gBAAgB,CAAG,CACvB,UAAU,CACV,mBAAmB,CACnB,iBAAiB,CACjB,uBAAuB,CACvB,qBAAqB,CACtB,KAAAC,gCAAA,EAAAC,IAAA,8JASD,MAAO,SAAS,CAAAC,mBAAmBA,CACjCC,WAA4C,CAC5CC,UAAgC,CACX,CACrB,GAAM,CAAAC,SAAS,CAAGV,MAAM,CAEtBS,UAAU,GAAKE,SAAS,CAAGF,UAAU,CAAGN,cAAc,CAAC,CAAC,CAAC,CAC1D,CAED,GAAM,CAAAS,KAAK,CAAGV,QAAQ,CACnB,eAAAW,SAAA,UAAAA,UAAAD,KAA4B,CAAK,CAEhCF,SAAS,CAACI,OAAO,CAACC,KAAK,CACrBH,KAAK,CAACI,aAAa,CAACC,CAAC,GAAK,CAAC,CACvBL,KAAK,CAACI,aAAa,CAACE,CAAC,CACrBN,KAAK,CAACI,aAAa,CAACC,CAAC,CAC7B,CAAC,CAAAJ,SAAA,CAAAM,SAAA,EAAAT,SAAA,CAJCA,SAAS,EAAAG,SAAA,CAAAO,aAAA,eAAAP,SAAA,CAAAQ,UAAA,CAAAhB,gCAAA,QAAAQ,SAAA,EAFV,GAODT,gBAEA,CACyD,CAE3DL,SAAS,CAAC,UAAM,KAAAuB,cAAA,CACd,GAAM,CAAAC,OAAO,CAAGtB,cAAc,CAACO,WAAW,CAACM,OAAO,CAAC,CACnD,CAAAQ,cAAA,CAAAV,KAAK,CAACE,OAAO,UAAAQ,cAAA,iBAAbA,cAAA,CAAeE,iBAAiB,CAACD,OAAO,CAAW,CAEnD,MAAO,WAAM,KAAAE,eAAA,CACX,CAAAA,eAAA,CAAAb,KAAK,CAACE,OAAO,UAAAW,eAAA,iBAAbA,eAAA,CAAeC,oBAAoB,EAAE,CACvC,CAAC,CACH,CAAC,CAAE,CAAClB,WAAW,CAACM,OAAO,CAAC,CAAC,CAEzB,MAAO,CAAAJ,SAAS,CAACI,OAAO,CAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}