{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";var CSSTransitions={WebkitTransition:'webkitTransitionEnd',Transition:'transitionEnd',MozTransition:'transitionend',MSTransition:'msTransitionEnd',OTransition:'oTransitionEnd'};export function NativeSafeAreaProvider(_ref){var children=_ref.children,style=_ref.style,onInsetsChange=_ref.onInsetsChange;React.useEffect(function(){if(typeof document==='undefined'){return;}var element=createContextElement();document.body.appendChild(element);var onEnd=function onEnd(){var _window$getComputedSt=window.getComputedStyle(element),paddingTop=_window$getComputedSt.paddingTop,paddingBottom=_window$getComputedSt.paddingBottom,paddingLeft=_window$getComputedSt.paddingLeft,paddingRight=_window$getComputedSt.paddingRight;var insets={top:paddingTop?parseInt(paddingTop,10):0,bottom:paddingBottom?parseInt(paddingBottom,10):0,left:paddingLeft?parseInt(paddingLeft,10):0,right:paddingRight?parseInt(paddingRight,10):0};var frame={x:0,y:0,width:document.documentElement.offsetWidth,height:document.documentElement.offsetHeight};onInsetsChange({nativeEvent:{insets:insets,frame:frame}});};element.addEventListener(getSupportedTransitionEvent(),onEnd);onEnd();return function(){document.body.removeChild(element);element.removeEventListener(getSupportedTransitionEvent(),onEnd);};},[onInsetsChange]);return React.createElement(View,{style:style},children);}var _supportedTransitionEvent=null;function getSupportedTransitionEvent(){if(_supportedTransitionEvent!=null){return _supportedTransitionEvent;}var element=document.createElement('invalidtype');_supportedTransitionEvent=CSSTransitions.Transition;for(var key in CSSTransitions){if(element.style[key]!==undefined){_supportedTransitionEvent=CSSTransitions[key];break;}}return _supportedTransitionEvent;}var _supportedEnv=null;function getSupportedEnv(){if(_supportedEnv!==null){return _supportedEnv;}var _window=window,CSS=_window.CSS;if(CSS&&CSS.supports&&CSS.supports('top: constant(safe-area-inset-top)')){_supportedEnv='constant';}else{_supportedEnv='env';}return _supportedEnv;}function getInset(side){return`${getSupportedEnv()}(safe-area-inset-${side})`;}function createContextElement(){var element=document.createElement('div');var style=element.style;style.position='fixed';style.left='0';style.top='0';style.width='0';style.height='0';style.zIndex='-1';style.overflow='hidden';style.visibility='hidden';style.transitionDuration='0.05s';style.transitionProperty='padding';style.transitionDelay='0s';style.paddingTop=getInset('top');style.paddingBottom=getInset('bottom');style.paddingLeft=getInset('left');style.paddingRight=getInset('right');return element;}","map":{"version":3,"sources":["NativeSafeAreaProvider.web.tsx"],"names":["React","CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaProvider","children","style","onInsetsChange","useEffect","document","element","createContextElement","body","appendChild","onEnd","paddingTop","paddingBottom","paddingLeft","paddingRight","window","getComputedStyle","insets","top","parseInt","bottom","left","right","frame","x","y","width","documentElement","offsetWidth","height","offsetHeight","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","View","_supportedTransitionEvent","createElement","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["/* eslint-env browser */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\n/**\n * TODO:\n * Currently insets and frame are based on the window and are not\n * relative to the provider view. This is inconsistent with iOS and Android.\n * However in most cases if the provider view covers the screen this is not\n * an issue.\n */\n\nconst CSSTransitions = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd'\n};\nexport function NativeSafeAreaProvider({\n  children,\n  style,\n  onInsetsChange\n}) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const {\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight\n      } = window.getComputedStyle(element);\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({\n        nativeEvent: {\n          insets,\n          frame\n        }\n      });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n  return /*#__PURE__*/React.createElement(View, {\n    style: style\n  }, children);\n}\nlet _supportedTransitionEvent = null;\nfunction getSupportedTransitionEvent() {\n  if (_supportedTransitionEvent != null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\nlet _supportedEnv = null;\nfunction getSupportedEnv() {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const {\n    CSS\n  } = window;\n  if (CSS && CSS.supports && CSS.supports('top: constant(safe-area-inset-top)')) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\nfunction getInset(side) {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\nfunction createContextElement() {\n  const element = document.createElement('div');\n  const {\n    style\n  } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n//# sourceMappingURL=NativeSafeAreaProvider.web.js.map"]},"metadata":{},"sourceType":"module"}