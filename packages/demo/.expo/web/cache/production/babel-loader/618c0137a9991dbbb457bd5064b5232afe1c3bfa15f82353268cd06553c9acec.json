{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"progress\",\"onPress\",\"style\",\"accessibilityLabel\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from'react-native-reanimated';var interpolateDeprecated=Animated.interpolate,interpolateNode=Animated.interpolateNode,cond=Animated.cond,greaterThan=Animated.greaterThan;var interpolate=interpolateNode!=null?interpolateNode:interpolateDeprecated;var PROGRESS_EPSILON=0.05;export var Overlay=React.forwardRef(function Overlay(_ref,ref){var progress=_ref.progress,onPress=_ref.onPress,style=_ref.style,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?'Close drawer':_ref$accessibilityLab,props=_objectWithoutProperties(_ref,_excluded);var animatedStyle={opacity:interpolate(progress,{inputRange:\"web\"==='windows'||\"web\"==='macos'?[0,1]:[PROGRESS_EPSILON,1],outputRange:[0,1]}),zIndex:cond(greaterThan(progress,PROGRESS_EPSILON),0,-1)};return React.createElement(Animated.View,_extends({},props,{ref:ref,style:[styles.overlay,overlayStyle,animatedStyle,style]}),React.createElement(Pressable,{onPress:onPress,style:styles.pressable,accessibilityRole:\"button\",accessibilityLabel:accessibilityLabel}));});var overlayStyle={WebkitTapHighlightColor:'transparent'};var styles=StyleSheet.create({overlay:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{backgroundColor:'rgba(0, 0, 0, 0.5)'}),pressable:{flex:1}});","map":{"version":3,"names":["React","Platform","Pressable","StyleSheet","Animated","interpolateDeprecated","interpolate","interpolateNode","cond","greaterThan","PROGRESS_EPSILON","Overlay","forwardRef","_ref","ref","progress","onPress","style","_ref$accessibilityLab","accessibilityLabel","props","_objectWithoutProperties","_excluded","animatedStyle","opacity","inputRange","outputRange","zIndex","createElement","View","_extends","styles","overlay","overlayStyle","pressable","accessibilityRole","WebkitTapHighlightColor","create","_objectSpread","absoluteFillObject","backgroundColor","flex"],"sources":["/Users/josh/src/ui/node_modules/react-native-drawer-layout/src/views/legacy/Overlay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nconst {\n  // @ts-expect-error: this is to support reanimated 1\n  interpolate: interpolateDeprecated,\n  interpolateNode,\n  cond,\n  greaterThan,\n} = Animated;\n\nconst interpolate: typeof interpolateNode =\n  interpolateNode ?? interpolateDeprecated;\n\nconst PROGRESS_EPSILON = 0.05;\n\ntype Props = React.ComponentProps<typeof Animated.View> & {\n  progress: Animated.Node<number>;\n  onPress: () => void;\n  accessibilityLabel?: string;\n};\n\nexport const Overlay = React.forwardRef(function Overlay(\n  {\n    progress,\n    onPress,\n    style,\n    accessibilityLabel = 'Close drawer',\n    ...props\n  }: Props,\n  ref: React.Ref<Animated.View>\n) {\n  const animatedStyle = {\n    opacity: interpolate(progress, {\n      // Default input range is [PROGRESS_EPSILON, 1]\n      // On Windows, the output value is 1 when input value is out of range for some reason\n      // The default value 0 will be interpolated to 1 in this case, which is not what we want.\n      // Therefore changing input range on Windows to [0,1] instead.\n      inputRange:\n        Platform.OS === 'windows' || Platform.OS === 'macos'\n          ? [0, 1]\n          : [PROGRESS_EPSILON, 1],\n      outputRange: [0, 1],\n    }),\n    // We don't want the user to be able to press through the overlay when drawer is open\n    // One approach is to adjust the pointerEvents based on the progress\n    // But we can also send the overlay behind the screen, which works, and is much less code\n    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1),\n  };\n\n  return (\n    <Animated.View\n      {...props}\n      ref={ref}\n      style={[styles.overlay, overlayStyle, animatedStyle, style]}\n    >\n      <Pressable\n        onPress={onPress}\n        style={styles.pressable}\n        accessibilityRole=\"button\"\n        accessibilityLabel={accessibilityLabel}\n      />\n    </Animated.View>\n  );\n});\n\nconst overlayStyle = Platform.select<Record<string, string>>({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n"],"mappings":"inCAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,SAAA,sDAAAC,UAAA,gDAE9B,MAAO,CAAAC,QAAQ,KAAM,yBAAyB,CAE9C,GAEe,CAAAC,qBAAqB,CAIhCD,QAAQ,CAJVE,WAAW,CACXC,eAAe,CAGbH,QAAQ,CAHVG,eAAe,CACfC,IAAI,CAEFJ,QAAQ,CAFVI,IAAI,CACJC,WAAA,CACEL,QAAQ,CADVK,WAAA,CAGF,GAAM,CAAAH,WAAmC,CACvCC,eAAe,OAAfA,eAAe,CAAIF,qBAAqB,CAE1C,GAAM,CAAAK,gBAAgB,CAAG,IAAI,CAQ7B,MAAO,IAAM,CAAAC,OAAO,CAAGX,KAAK,CAACY,UAAU,CAAC,QAAS,CAAAD,OAAOA,CAAAE,IAAA,CAQtDC,GAA6B,CAC7B,IAPE,CAAAC,QAAQ,CAKFF,IAAA,CALNE,QAAQ,CACRC,OAAO,CAIDH,IAAA,CAJNG,OAAO,CACPC,KAAK,CAGCJ,IAAA,CAHNI,KAAK,CAAAC,qBAAA,CAGCL,IAAA,CAFNM,kBAAkB,CAAlBA,kBAAkB,CAAAD,qBAAA,UAAG,cAAc,CAAAA,qBAAA,CAChCE,KAAA,CAAAC,wBAAA,CACGR,IAAA,CAAAS,SAAA,EAGR,GAAM,CAAAC,aAAa,CAAG,CACpBC,OAAO,CAAElB,WAAW,CAACS,QAAQ,CAAE,CAK7BU,UAAU,CACR,QAAgB,SAAS,EAAI,QAAgB,OAAO,CAChD,CAAC,CAAC,CAAE,CAAC,CAAC,CACN,CAACf,gBAAgB,CAAE,CAAC,CAAC,CAC3BgB,WAAW,CAAE,CAAC,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAIFC,MAAM,CAAEnB,IAAI,CAACC,WAAW,CAACM,QAAQ,CAAEL,gBAAgB,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC7D,CAAC,CAED,MACE,CAAAV,KAAA,CAAA4B,aAAA,CAACxB,QAAQ,CAACyB,IAAI,CAAAC,QAAA,IACRV,KAAK,EACTN,GAAG,CAAEA,GAAI,CACTG,KAAK,CAAE,CAACc,MAAM,CAACC,OAAO,CAAEC,YAAY,CAAEV,aAAa,CAAEN,KAAK,CAAE,GAE5DjB,KAAA,CAAA4B,aAAA,CAAC1B,SAAS,EACRc,OAAO,CAAEA,OAAQ,CACjBC,KAAK,CAAEc,MAAM,CAACG,SAAU,CACxBC,iBAAiB,CAAC,QAAQ,CAC1BhB,kBAAkB,CAAEA,kBAAmB,EACvC,CACY,CAEpB,CAAC,CAAC,CAEF,GAAM,CAAAc,YAAY,CACX,CAGHG,uBAAuB,CAAE,aAC3B,CAEA,CAEF,GAAM,CAAAL,MAAM,CAAG5B,UAAU,CAACkC,MAAM,CAAC,CAC/BL,OAAO,CAAAM,aAAA,CAAAA,aAAA,IACFnC,UAAU,CAACoC,kBAAkB,MAChCC,eAAe,CAAE,sBAClB,CACDN,SAAS,CAAE,CACTO,IAAI,CAAE,CACR,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}