{"ast":null,"code":"'use strict';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import{runOnUIImmediately}from'../../threads';import{registerEventHandler,unregisterEventHandler}from'../../core';import Platform from\"react-native-web/dist/exports/Platform\";import{isJest,shouldBeUseWeb}from'../../PlatformChecker';var IS_ANDROID=\"web\"==='android';var _worklet_733189383917_init_data={code:\"function anonymous(){const{viewTag,progressAnimation}=this.__closure;global.ProgressTransitionRegister.addProgressAnimation(viewTag,progressAnimation);}\"};var _worklet_15289183256234_init_data={code:\"function anonymous(){const{viewTag}=this.__closure;global.ProgressTransitionRegister.removeProgressAnimation(viewTag);}\"};var _worklet_7494210000180_init_data={code:\"function anonymous(event){const{lastProgressValue}=this.__closure;const progress=event.progress;if(progress===lastProgressValue){return;}lastProgressValue=progress;global.ProgressTransitionRegister.frame(progress);}\"};var _worklet_3584216964250_init_data={code:\"function anonymous(){global.ProgressTransitionRegister.onTransitionEnd();}\"};var _worklet_3552696675293_init_data={code:\"function anonymous(){global.ProgressTransitionRegister.onAndroidFinishTransitioning();}\"};var _worklet_16472804869484_init_data={code:\"function anonymous(){global.ProgressTransitionRegister.onTransitionEnd(true);}\"};var _worklet_3584216964250_init_data2={code:\"function anonymous(){global.ProgressTransitionRegister.onTransitionEnd();}\"};export var ProgressTransitionManager=function(){function ProgressTransitionManager(){_classCallCheck(this,ProgressTransitionManager);_defineProperty(this,\"_sharedElementCount\",0);_defineProperty(this,\"_eventHandler\",{isRegistered:false,onTransitionProgress:-1,onAppear:-1,onDisappear:-1,onSwipeDismiss:-1});}_createClass(ProgressTransitionManager,[{key:\"addProgressAnimation\",value:function addProgressAnimation(viewTag,progressAnimation){runOnUIImmediately(function(){var anonymous=function anonymous(){global.ProgressTransitionRegister.addProgressAnimation(viewTag,progressAnimation);};anonymous.__closure={viewTag:viewTag,progressAnimation:progressAnimation};anonymous.__workletHash=733189383917;anonymous.__initData=_worklet_733189383917_init_data;return anonymous;}())();this.registerEventHandlers();}},{key:\"removeProgressAnimation\",value:function removeProgressAnimation(viewTag){this.unregisterEventHandlers();runOnUIImmediately(function(){var anonymous=function anonymous(){global.ProgressTransitionRegister.removeProgressAnimation(viewTag);};anonymous.__closure={viewTag:viewTag};anonymous.__workletHash=15289183256234;anonymous.__initData=_worklet_15289183256234_init_data;return anonymous;}())();}},{key:\"registerEventHandlers\",value:function registerEventHandlers(){this._sharedElementCount++;var eventHandler=this._eventHandler;if(!eventHandler.isRegistered){eventHandler.isRegistered=true;var eventPrefix=IS_ANDROID?'on':'top';var lastProgressValue=-1;eventHandler.onTransitionProgress=registerEventHandler(function(){var anonymous=function anonymous(event){var progress=event.progress;if(progress===lastProgressValue){return;}lastProgressValue=progress;global.ProgressTransitionRegister.frame(progress);};anonymous.__closure={lastProgressValue:lastProgressValue};anonymous.__workletHash=7494210000180;anonymous.__initData=_worklet_7494210000180_init_data;return anonymous;}(),eventPrefix+'TransitionProgress');eventHandler.onAppear=registerEventHandler(function(){var anonymous=function anonymous(){global.ProgressTransitionRegister.onTransitionEnd();};anonymous.__closure={};anonymous.__workletHash=3584216964250;anonymous.__initData=_worklet_3584216964250_init_data;return anonymous;}(),eventPrefix+'Appear');if(IS_ANDROID){eventHandler.onDisappear=registerEventHandler(function(){var anonymous=function anonymous(){global.ProgressTransitionRegister.onAndroidFinishTransitioning();};anonymous.__closure={};anonymous.__workletHash=3552696675293;anonymous.__initData=_worklet_3552696675293_init_data;return anonymous;}(),'onFinishTransitioning');}else if(\"web\"==='ios'){eventHandler.onDisappear=registerEventHandler(function(){var anonymous=function anonymous(){global.ProgressTransitionRegister.onTransitionEnd(true);};anonymous.__closure={};anonymous.__workletHash=16472804869484;anonymous.__initData=_worklet_16472804869484_init_data;return anonymous;}(),'topDisappear');eventHandler.onSwipeDismiss=registerEventHandler(function(){var anonymous=function anonymous(){global.ProgressTransitionRegister.onTransitionEnd();};anonymous.__closure={};anonymous.__workletHash=3584216964250;anonymous.__initData=_worklet_3584216964250_init_data2;return anonymous;}(),'topGestureCancel');}}}},{key:\"unregisterEventHandlers\",value:function unregisterEventHandlers(){this._sharedElementCount--;if(this._sharedElementCount===0){var eventHandler=this._eventHandler;eventHandler.isRegistered=false;if(eventHandler.onTransitionProgress!==-1){unregisterEventHandler(eventHandler.onTransitionProgress);eventHandler.onTransitionProgress=-1;}if(eventHandler.onAppear!==-1){unregisterEventHandler(eventHandler.onAppear);eventHandler.onAppear=-1;}if(eventHandler.onDisappear!==-1){unregisterEventHandler(eventHandler.onDisappear);eventHandler.onDisappear=-1;}if(eventHandler.onSwipeDismiss!==-1){unregisterEventHandler(eventHandler.onSwipeDismiss);eventHandler.onSwipeDismiss=-1;}}}}]);return ProgressTransitionManager;}();var _worklet_3418788372063_init_data={code:\"function createProgressTransitionRegister(){const{IS_ANDROID}=this.__closure;const progressAnimations=new Map();const snapshots=new Map();const currentTransitions=new Set();const toRemove=new Set();let skipCleaning=false;let isTransitionRestart=false;const progressTransitionManager={addProgressAnimation:function(viewTag,progressAnimation){if(currentTransitions.size>0){isTransitionRestart=!IS_ANDROID;}progressAnimations.set(viewTag,progressAnimation);},removeProgressAnimation:function(viewTag){if(currentTransitions.size>0){isTransitionRestart=!IS_ANDROID;}toRemove.add(viewTag);},onTransitionStart:function(viewTag,snapshot){skipCleaning=isTransitionRestart;snapshots.set(viewTag,snapshot);currentTransitions.add(viewTag);progressTransitionManager.frame(0);},frame:function(progress){for(const viewTag of currentTransitions){const progressAnimation=progressAnimations.get(viewTag);if(!progressAnimation){continue;}const snapshot=snapshots.get(viewTag);progressAnimation(viewTag,snapshot,progress);}},onAndroidFinishTransitioning:function(){if(toRemove.size>0){progressTransitionManager.onTransitionEnd();}},onTransitionEnd:function(){let removeViews=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(currentTransitions.size===0){toRemove.clear();return;}if(skipCleaning){skipCleaning=false;isTransitionRestart=false;return;}for(const viewTag of currentTransitions){_notifyAboutEnd(viewTag,removeViews);}currentTransitions.clear();if(isTransitionRestart){return;}snapshots.clear();if(toRemove.size>0){for(const viewTag of toRemove){progressAnimations.delete(viewTag);_notifyAboutEnd(viewTag,removeViews);}toRemove.clear();}}};return progressTransitionManager;}\"};var createProgressTransitionRegister=function(){var createProgressTransitionRegister=function createProgressTransitionRegister(){var progressAnimations=new Map();var snapshots=new Map();var currentTransitions=new Set();var toRemove=new Set();var skipCleaning=false;var isTransitionRestart=false;var progressTransitionManager={addProgressAnimation:function addProgressAnimation(viewTag,progressAnimation){if(currentTransitions.size>0){isTransitionRestart=!IS_ANDROID;}progressAnimations.set(viewTag,progressAnimation);},removeProgressAnimation:function removeProgressAnimation(viewTag){if(currentTransitions.size>0){isTransitionRestart=!IS_ANDROID;}toRemove.add(viewTag);},onTransitionStart:function onTransitionStart(viewTag,snapshot){skipCleaning=isTransitionRestart;snapshots.set(viewTag,snapshot);currentTransitions.add(viewTag);progressTransitionManager.frame(0);},frame:function frame(progress){for(var viewTag of currentTransitions){var progressAnimation=progressAnimations.get(viewTag);if(!progressAnimation){continue;}var snapshot=snapshots.get(viewTag);progressAnimation(viewTag,snapshot,progress);}},onAndroidFinishTransitioning:function onAndroidFinishTransitioning(){if(toRemove.size>0){progressTransitionManager.onTransitionEnd();}},onTransitionEnd:function onTransitionEnd(){var removeViews=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(currentTransitions.size===0){toRemove.clear();return;}if(skipCleaning){skipCleaning=false;isTransitionRestart=false;return;}for(var viewTag of currentTransitions){_notifyAboutEnd(viewTag,removeViews);}currentTransitions.clear();if(isTransitionRestart){return;}snapshots.clear();if(toRemove.size>0){for(var _viewTag of toRemove){progressAnimations.delete(_viewTag);_notifyAboutEnd(_viewTag,removeViews);}toRemove.clear();}}};return progressTransitionManager;};createProgressTransitionRegister.__closure={IS_ANDROID:IS_ANDROID};createProgressTransitionRegister.__workletHash=3418788372063;createProgressTransitionRegister.__initData=_worklet_3418788372063_init_data;return createProgressTransitionRegister;}();var _worklet_7089923520308_init_data={code:\"function anonymous(){const{createProgressTransitionRegister}=this.__closure;global.ProgressTransitionRegister=createProgressTransitionRegister();}\"};if(shouldBeUseWeb()){var maybeThrowError=function maybeThrowError(){if(!isJest()){throw new Error('[Reanimated] `ProgressTransitionRegister` is not available on non-native platform.');}};global.ProgressTransitionRegister=new Proxy({},{get:maybeThrowError,set:function set(){maybeThrowError();return false;}});}else{runOnUIImmediately(function(){var anonymous=function anonymous(){global.ProgressTransitionRegister=createProgressTransitionRegister();};anonymous.__closure={createProgressTransitionRegister:createProgressTransitionRegister};anonymous.__workletHash=7089923520308;anonymous.__initData=_worklet_7089923520308_init_data;return anonymous;}())();}","map":{"version":3,"sources":["ProgressTransitionManager.ts"],"names":["runOnUIImmediately","registerEventHandler","unregisterEventHandler","isJest","shouldBeUseWeb","IS_ANDROID","Platform","ProgressTransitionManager","constructor","_defineProperty","isRegistered","onTransitionProgress","onAppear","onDisappear","onSwipeDismiss","addProgressAnimation","viewTag","progressAnimation","global","ProgressTransitionRegister","registerEventHandlers","removeProgressAnimation","unregisterEventHandlers","_sharedElementCount","eventHandler","_eventHandler","eventPrefix","lastProgressValue","event","progress","frame","onTransitionEnd","onAndroidFinishTransitioning","createProgressTransitionRegister","progressAnimations","Map","snapshots","currentTransitions","Set","toRemove","skipCleaning","isTransitionRestart","progressTransitionManager","size","set","add","onTransitionStart","snapshot","get","removeViews","clear","_notifyAboutEnd","delete","maybeThrowError","Error","Proxy"],"mappings":"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","sourcesContent":["'use strict';\nimport { runOnUIImmediately } from '../../threads';\nimport type {\n  ProgressAnimation,\n  SharedTransitionAnimationsValues,\n} from '../animationBuilder/commonTypes';\nimport { registerEventHandler, unregisterEventHandler } from '../../core';\nimport { Platform } from 'react-native';\nimport { isJest, shouldBeUseWeb } from '../../PlatformChecker';\n\ntype TransitionProgressEvent = {\n  closing: number;\n  goingForward: number;\n  eventName: string;\n  progress: number;\n  target: number;\n};\n\nconst IS_ANDROID = Platform.OS === 'android';\n\nexport class ProgressTransitionManager {\n  private _sharedElementCount = 0;\n  private _eventHandler = {\n    isRegistered: false,\n    onTransitionProgress: -1,\n    onAppear: -1,\n    onDisappear: -1,\n    onSwipeDismiss: -1,\n  };\n\n  public addProgressAnimation(\n    viewTag: number,\n    progressAnimation: ProgressAnimation\n  ) {\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.addProgressAnimation(\n        viewTag,\n        progressAnimation\n      );\n    })();\n    this.registerEventHandlers();\n  }\n\n  public removeProgressAnimation(viewTag: number) {\n    this.unregisterEventHandlers();\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.removeProgressAnimation(viewTag);\n    })();\n  }\n\n  private registerEventHandlers() {\n    this._sharedElementCount++;\n    const eventHandler = this._eventHandler;\n    if (!eventHandler.isRegistered) {\n      eventHandler.isRegistered = true;\n      const eventPrefix = IS_ANDROID ? 'on' : 'top';\n      let lastProgressValue = -1;\n      eventHandler.onTransitionProgress = registerEventHandler(\n        (event: TransitionProgressEvent) => {\n          'worklet';\n          const progress = event.progress;\n          if (progress === lastProgressValue) {\n            // During screen transition, handler receives two events with the same progress\n            // value for both screens, but for modals, there is only one event. To optimize\n            // performance and avoid unnecessary worklet calls, let's skip the second event.\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        },\n        eventPrefix + 'TransitionProgress'\n      );\n      eventHandler.onAppear = registerEventHandler(() => {\n        'worklet';\n        global.ProgressTransitionRegister.onTransitionEnd();\n      }, eventPrefix + 'Appear');\n\n      if (IS_ANDROID) {\n        // onFinishTransitioning event is available only on Android and\n        // is used to handle closing modals\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n        }, 'onFinishTransitioning');\n      } else if (Platform.OS === 'ios') {\n        // topDisappear event is required to handle closing modals on iOS\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd(true);\n        }, 'topDisappear');\n        eventHandler.onSwipeDismiss = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd();\n        }, 'topGestureCancel');\n      }\n    }\n  }\n\n  private unregisterEventHandlers(): void {\n    this._sharedElementCount--;\n    if (this._sharedElementCount === 0) {\n      const eventHandler = this._eventHandler;\n      eventHandler.isRegistered = false;\n      if (eventHandler.onTransitionProgress !== -1) {\n        unregisterEventHandler(eventHandler.onTransitionProgress);\n        eventHandler.onTransitionProgress = -1;\n      }\n      if (eventHandler.onAppear !== -1) {\n        unregisterEventHandler(eventHandler.onAppear);\n        eventHandler.onAppear = -1;\n      }\n      if (eventHandler.onDisappear !== -1) {\n        unregisterEventHandler(eventHandler.onDisappear);\n        eventHandler.onDisappear = -1;\n      }\n      if (eventHandler.onSwipeDismiss !== -1) {\n        unregisterEventHandler(eventHandler.onSwipeDismiss);\n        eventHandler.onSwipeDismiss = -1;\n      }\n    }\n  }\n}\n\nfunction createProgressTransitionRegister() {\n  'worklet';\n  const progressAnimations = new Map<number, ProgressAnimation>();\n  const snapshots = new Map<\n    number,\n    Partial<SharedTransitionAnimationsValues>\n  >();\n  const currentTransitions = new Set<number>();\n  const toRemove = new Set<number>();\n\n  let skipCleaning = false;\n  let isTransitionRestart = false;\n\n  const progressTransitionManager = {\n    addProgressAnimation: (\n      viewTag: number,\n      progressAnimation: ProgressAnimation\n    ) => {\n      if (currentTransitions.size > 0) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      progressAnimations.set(viewTag, progressAnimation);\n    },\n    removeProgressAnimation: (viewTag: number) => {\n      if (currentTransitions.size > 0) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      // Remove the animation config after the transition is finished\n      toRemove.add(viewTag);\n    },\n    onTransitionStart: (\n      viewTag: number,\n      snapshot: Partial<SharedTransitionAnimationsValues>\n    ) => {\n      skipCleaning = isTransitionRestart;\n      snapshots.set(viewTag, snapshot);\n      currentTransitions.add(viewTag);\n      // set initial style for re-parented components\n      progressTransitionManager.frame(0);\n    },\n    frame: (progress: number) => {\n      for (const viewTag of currentTransitions) {\n        const progressAnimation = progressAnimations.get(viewTag);\n        if (!progressAnimation) {\n          continue;\n        }\n        const snapshot = snapshots.get(\n          viewTag\n        )! as SharedTransitionAnimationsValues;\n        progressAnimation!(viewTag, snapshot, progress);\n      }\n    },\n    onAndroidFinishTransitioning: () => {\n      if (toRemove.size > 0) {\n        // it should be ran only on modal closing\n        progressTransitionManager.onTransitionEnd();\n      }\n    },\n    onTransitionEnd: (removeViews = false) => {\n      if (currentTransitions.size === 0) {\n        toRemove.clear();\n        return;\n      }\n      if (skipCleaning) {\n        skipCleaning = false;\n        isTransitionRestart = false;\n        return;\n      }\n      for (const viewTag of currentTransitions) {\n        _notifyAboutEnd(viewTag, removeViews);\n      }\n      currentTransitions.clear();\n      if (isTransitionRestart) {\n        // on transition restart, progressAnimations should be saved\n        // because they potentially can be used in the next transition\n        return;\n      }\n      snapshots.clear();\n      if (toRemove.size > 0) {\n        for (const viewTag of toRemove) {\n          progressAnimations.delete(viewTag);\n          _notifyAboutEnd(viewTag, removeViews);\n        }\n        toRemove.clear();\n      }\n    },\n  };\n  return progressTransitionManager;\n}\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new Error(\n        '[Reanimated] `ProgressTransitionRegister` is not available on non-native platform.'\n      );\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy(\n    {} as ProgressTransitionRegister,\n    {\n      get: maybeThrowError,\n      set: () => {\n        maybeThrowError();\n        return false;\n      },\n    }\n  );\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.ProgressTransitionRegister = createProgressTransitionRegister();\n  })();\n}\n\nexport type ProgressTransitionRegister = ReturnType<\n  typeof createProgressTransitionRegister\n>;\n"]},"metadata":{},"sourceType":"module"}