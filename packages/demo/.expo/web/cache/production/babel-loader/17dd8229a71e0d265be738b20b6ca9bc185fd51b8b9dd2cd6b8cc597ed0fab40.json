{"ast":null,"code":"'use strict';import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"itemLayoutAnimation\",\"skipEnteringExitingAnimations\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef}from'react';import FlatList from\"react-native-web/dist/exports/FlatList\";import{AnimatedView}from'./View';import{createAnimatedComponent}from'../../createAnimatedComponent';import{LayoutAnimationConfig}from'./LayoutAnimationConfig';var AnimatedFlatList=createAnimatedComponent(FlatList);var createCellRendererComponent=function createCellRendererComponent(itemLayoutAnimation){var CellRendererComponent=function CellRendererComponent(props){return React.createElement(AnimatedView,{layout:itemLayoutAnimation,onLayout:props.onLayout,style:props.style},props.children);};return CellRendererComponent;};export var ReanimatedFlatList=forwardRef(function(props,ref){var itemLayoutAnimation=props.itemLayoutAnimation,skipEnteringExitingAnimations=props.skipEnteringExitingAnimations,restProps=_objectWithoutProperties(props,_excluded);if(!('scrollEventThrottle'in restProps)){restProps.scrollEventThrottle=1;}var CellRendererComponent=React.useMemo(function(){return createCellRendererComponent(itemLayoutAnimation);},[]);var animatedFlatList=React.createElement(AnimatedFlatList,_extends({ref:ref},restProps,{CellRendererComponent:CellRendererComponent}));if(skipEnteringExitingAnimations===undefined){return animatedFlatList;}return React.createElement(LayoutAnimationConfig,{skipEntering:true,skipExiting:true},animatedFlatList);});","map":{"version":3,"names":["_objectWithoutProperties","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","forwardRef","FlatList","AnimatedView","createAnimatedComponent","LayoutAnimationConfig","AnimatedFlatList","createCellRendererComponent","itemLayoutAnimation","CellRendererComponent","props","createElement","layout","onLayout","style","children","ReanimatedFlatList","ref","skipEnteringExitingAnimations","restProps","scrollEventThrottle","useMemo","animatedFlatList","undefined","skipEntering","skipExiting"],"sources":["/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/component/FlatList.tsx"],"sourcesContent":["'use strict';\nimport type { ForwardedRef } from 'react';\nimport React, { forwardRef } from 'react';\nimport type {\n  FlatListProps,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { FlatList } from 'react-native';\nimport { AnimatedView } from './View';\nimport { createAnimatedComponent } from '../../createAnimatedComponent';\nimport type { ILayoutAnimationBuilder } from '../layoutReanimation/animationBuilder/commonTypes';\nimport { LayoutAnimationConfig } from './LayoutAnimationConfig';\nimport type { AnimatedProps, AnimatedStyle } from '../helperTypes';\n\nconst AnimatedFlatList = createAnimatedComponent(FlatList);\n\ninterface CellRendererComponentProps {\n  onLayout?: ((event: LayoutChangeEvent) => void) | undefined;\n  children: React.ReactNode;\n  style?: StyleProp<AnimatedStyle<ViewStyle>>;\n}\n\nconst createCellRendererComponent = (\n  itemLayoutAnimation?: ILayoutAnimationBuilder\n) => {\n  const CellRendererComponent = (props: CellRendererComponentProps) => {\n    return (\n      <AnimatedView\n        // TODO TYPESCRIPT This is temporary cast is to get rid of .d.ts file.\n        layout={itemLayoutAnimation as any}\n        onLayout={props.onLayout}\n        style={props.style}>\n        {props.children}\n      </AnimatedView>\n    );\n  };\n\n  return CellRendererComponent;\n};\n\ninterface ReanimatedFlatListPropsWithLayout<T>\n  extends AnimatedProps<FlatListProps<T>> {\n  /**\n   * Lets you pass layout animation directly to the FlatList item.\n   */\n  itemLayoutAnimation?: ILayoutAnimationBuilder;\n  /**\n   * Lets you skip entering and exiting animations of FlatList items when on FlatList mount or unmount.\n   */\n  skipEnteringExitingAnimations?: boolean;\n}\n\nexport type FlatListPropsWithLayout<T> = ReanimatedFlatListPropsWithLayout<T>;\n\n// Since createAnimatedComponent return type is ComponentClass that has the props of the argument,\n// but not things like NativeMethods, etc. we need to add them manually by extending the type.\ninterface AnimatedFlatListComplement<T> extends FlatList<T> {\n  getNode(): FlatList<T>;\n}\n\nexport const ReanimatedFlatList = forwardRef(\n  (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    props: ReanimatedFlatListPropsWithLayout<any>,\n    ref: ForwardedRef<FlatList>\n  ) => {\n    const { itemLayoutAnimation, skipEnteringExitingAnimations, ...restProps } =\n      props;\n\n    // Set default scrollEventThrottle, because user expects\n    // to have continuous scroll events and\n    // react-native defaults it to 50 for FlatLists.\n    // We set it to 1 so we have peace until\n    // there are 960 fps screens.\n    if (!('scrollEventThrottle' in restProps)) {\n      restProps.scrollEventThrottle = 1;\n    }\n\n    const CellRendererComponent = React.useMemo(\n      () => createCellRendererComponent(itemLayoutAnimation),\n      []\n    );\n\n    const animatedFlatList = (\n      <AnimatedFlatList\n        ref={ref}\n        {...restProps}\n        CellRendererComponent={CellRendererComponent}\n      />\n    );\n\n    if (skipEnteringExitingAnimations === undefined) {\n      return animatedFlatList;\n    }\n\n    return (\n      <LayoutAnimationConfig skipEntering skipExiting>\n        {animatedFlatList}\n      </LayoutAnimationConfig>\n    );\n  }\n);\n\nexport type ReanimatedFlatList<T> = typeof AnimatedFlatList &\n  AnimatedFlatListComplement<T>;\n"],"mappings":"AAAA,YAAY,QAAAA,wBAAA,0DAAAC,SAAA,yDAAC,SAAAC,SAAA,EAAAA,QAAA,CAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAC,IAAA,YAAAC,MAAA,UAAAC,CAAA,GAAAA,CAAA,CAAAC,SAAA,CAAAC,MAAA,CAAAF,CAAA,QAAAG,MAAA,CAAAF,SAAA,CAAAD,CAAA,UAAAI,GAAA,IAAAD,MAAA,KAAAP,MAAA,CAAAS,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAJ,MAAA,CAAAC,GAAA,GAAAL,MAAA,CAAAK,GAAA,EAAAD,MAAA,CAAAC,GAAA,YAAAL,MAAA,UAAAJ,QAAA,CAAAa,KAAA,MAAAP,SAAA,GAEb,MAAO,CAAAQ,KAAK,EAAIC,UAAU,KAAQ,OAAO,QAAAC,QAAA,8CAQzC,OAASC,YAAY,KAAQ,QAAQ,CACrC,OAASC,uBAAuB,KAAQ,+BAA+B,CAEvE,OAASC,qBAAqB,KAAQ,yBAAyB,CAG/D,GAAM,CAAAC,gBAAgB,CAAGF,uBAAuB,CAACF,QAAQ,CAAC,CAQ1D,GAAM,CAAAK,2BAA2B,CAC/B,QADI,CAAAA,2BAA2BA,CAC/BC,mBAA6C,CAC1C,CACH,GAAM,CAAAC,qBAAqB,CAAI,QAAzB,CAAAA,qBAAqBA,CAAIC,KAAiC,CAAK,CACnE,MACE,CAAAV,KAAA,CAAAW,aAAA,CAACR,YAAA,CACC,CACAS,MAAM,CAAEJ,mBAA2B,CACnCK,QAAQ,CAAEH,KAAK,CAACG,QAAS,CACzBC,KAAK,CAAEJ,KAAK,CAACI,KAAM,EAClBJ,KAAK,CAACK,QAAQ,CACF,CAEnB,CAAC,CAED,MAAO,CAAAN,qBAAqB,CAC9B,CAAC,CAsBD,MAAO,IAAM,CAAAO,kBAAkB,CAAGf,UAAU,CAC1C,SAEES,KAA6C,CAC7CO,GAA2B,CACxB,CACH,GAAQ,CAAAT,mBAAmB,CACzBE,KAAK,CADCF,mBAAmB,CAAEU,6BAA6B,CACxDR,KAAK,CADsBQ,6BAA6B,CAAKC,SAAA,CAAAnC,wBAAA,CAC7D0B,KAAK,CAAAzB,SAAA,EAOP,GAAI,EAAE,qBAAqB,EAAI,CAAAkC,SAAS,CAAC,CAAE,CACzCA,SAAS,CAACC,mBAAmB,CAAG,CAAC,CACnC,CAEA,GAAM,CAAAX,qBAAqB,CAAGT,KAAK,CAACqB,OAAO,CACzC,iBAAM,CAAAd,2BAA2B,CAACC,mBAAmB,CAAC,GACtD,EAAE,CACH,CAED,GAAM,CAAAc,gBAAgB,CACpBtB,KAAA,CAAAW,aAAA,CAACL,gBAAgB,CAAApB,QAAA,EACf+B,GAAG,CAAEA,GAAI,EACLE,SAAS,EACbV,qBAAqB,CAAEA,qBAAsB,GAEhD,CAED,GAAIS,6BAA6B,GAAKK,SAAS,CAAE,CAC/C,MAAO,CAAAD,gBAAgB,CACzB,CAEA,MACE,CAAAtB,KAAA,CAAAW,aAAA,CAACN,qBAAqB,EAACmB,YAAY,MAACC,WAAW,OAC5CH,gBAAgB,CACK,CAE5B,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}