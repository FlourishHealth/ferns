{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import PointerEventManager from'./PointerEventManager';import TouchEventManager from'./TouchEventManager';import{State}from'../../State';import{isPointerInBounds as _isPointerInBounds}from'../utils';export var GestureHandlerWebDelegate=function(){function GestureHandlerWebDelegate(){_classCallCheck(this,GestureHandlerWebDelegate);_defineProperty(this,\"view\",void 0);_defineProperty(this,\"gestureHandler\",void 0);_defineProperty(this,\"eventManagers\",[]);}_createClass(GestureHandlerWebDelegate,[{key:\"getView\",value:function getView(){return this.view;}},{key:\"init\",value:function init(viewRef,handler){var _this=this;if(!viewRef){throw new Error(`Cannot find HTML Element for handler ${handler.getTag()}`);}this.gestureHandler=handler;this.view=findNodeHandle(viewRef);this.view.style['touchAction']='none';this.view.style['WebkitTouchCallout']='none';var config=handler.getConfig();if(!config.userSelect){this.view.style['webkitUserSelect']='none';this.view.style['userSelect']='none';}else{this.view.style['webkitUserSelect']=config.userSelect;this.view.style['userSelect']=config.userSelect;}this.eventManagers.push(new PointerEventManager(this.view));this.eventManagers.push(new TouchEventManager(this.view));this.eventManagers.forEach(function(manager){return _this.gestureHandler.attachEventManager(manager);});}},{key:\"isPointerInBounds\",value:function isPointerInBounds(_ref){var x=_ref.x,y=_ref.y;return _isPointerInBounds(this.view,{x:x,y:y});}},{key:\"measureView\",value:function measureView(){var rect=this.view.getBoundingClientRect();return{pageX:rect.left,pageY:rect.top,width:rect.width,height:rect.height};}},{key:\"reset\",value:function reset(){this.eventManagers.forEach(function(manager){return manager.resetManager();});}},{key:\"tryResetCursor\",value:function tryResetCursor(){var config=this.gestureHandler.getConfig();if(config.activeCursor&&config.activeCursor!=='auto'&&this.gestureHandler.getState()===State.ACTIVE){this.view.style.cursor='auto';}}},{key:\"onBegin\",value:function onBegin(){}},{key:\"onActivate\",value:function onActivate(){var config=this.gestureHandler.getConfig();if((!this.view.style.cursor||this.view.style.cursor==='auto')&&config.activeCursor){this.view.style.cursor=config.activeCursor;}}},{key:\"onEnd\",value:function onEnd(){this.tryResetCursor();}},{key:\"onCancel\",value:function onCancel(){this.tryResetCursor();}},{key:\"onFail\",value:function onFail(){this.tryResetCursor();}}]);return GestureHandlerWebDelegate;}();","map":{"version":3,"sources":["GestureHandlerWebDelegate.ts"],"names":["PointerEventManager","TouchEventManager","State","isPointerInBounds","GestureHandlerWebDelegate","getView","view","init","viewRef","handler","Error","getTag","gestureHandler","findNodeHandle","style","config","getConfig","userSelect","eventManagers","push","forEach","manager","attachEventManager","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","getState","ACTIVE","cursor","onBegin","onActivate","onEnd","onCancel","onFail"],"mappings":"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","sourcesContent":["import { findNodeHandle } from 'react-native';\nimport type GestureHandler from '../handlers/GestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport TouchEventManager from './TouchEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement>\n{\n  private view!: HTMLElement;\n  private gestureHandler!: GestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n\n  getView(): HTMLElement {\n    return this.view;\n  }\n\n  init(viewRef: number, handler: GestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.getTag()}`\n      );\n    }\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.view.style['touchAction'] = 'none';\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n\n    const config = handler.getConfig();\n\n    if (!config.userSelect) {\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n    } else {\n      this.view.style['webkitUserSelect'] = config.userSelect;\n      this.view.style['userSelect'] = config.userSelect;\n    }\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new TouchEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.getState() === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}