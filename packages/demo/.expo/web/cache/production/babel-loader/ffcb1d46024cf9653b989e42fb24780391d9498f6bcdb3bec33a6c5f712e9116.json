{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"useLegacyImplementation\",\"layout\",\"drawerType\",\"drawerPosition\",\"drawerStyle\",\"swipeEnabled\",\"swipeEdgeWidth\",\"swipeMinDistance\",\"swipeMinVelocity\",\"keyboardDismissMode\",\"hideStatusBarOnOpen\",\"statusBarAnimation\",\"style\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import*as Reanimated from'react-native-reanimated';import{SWIPE_MIN_DISTANCE,SWIPE_MIN_VELOCITY}from'../constants';import{GestureHandlerRootView}from'./GestureHandler';var getDefaultDrawerWidth=function getDefaultDrawerWidth(_ref){var height=_ref.height,width=_ref.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=\"web\"==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);};export function Drawer(_ref2){var _Reanimated$isConfigu;var _ref2$useLegacyImplem=_ref2.useLegacyImplementation,useLegacyImplementation=_ref2$useLegacyImplem===void 0?!((_Reanimated$isConfigu=Reanimated.isConfigured)!==null&&_Reanimated$isConfigu!==void 0&&_Reanimated$isConfigu.call(Reanimated)):_ref2$useLegacyImplem,customLayout=_ref2.layout,_ref2$drawerType=_ref2.drawerType,drawerType=_ref2$drawerType===void 0?'front':_ref2$drawerType,_ref2$drawerPosition=_ref2.drawerPosition,drawerPosition=_ref2$drawerPosition===void 0?I18nManager.getConstants().isRTL?'right':'left':_ref2$drawerPosition,drawerStyle=_ref2.drawerStyle,_ref2$swipeEnabled=_ref2.swipeEnabled,swipeEnabled=_ref2$swipeEnabled===void 0?\"web\"!=='web'&&\"web\"!=='windows'&&\"web\"!=='macos':_ref2$swipeEnabled,_ref2$swipeEdgeWidth=_ref2.swipeEdgeWidth,swipeEdgeWidth=_ref2$swipeEdgeWidth===void 0?32:_ref2$swipeEdgeWidth,_ref2$swipeMinDistanc=_ref2.swipeMinDistance,swipeMinDistance=_ref2$swipeMinDistanc===void 0?SWIPE_MIN_DISTANCE:_ref2$swipeMinDistanc,_ref2$swipeMinVelocit=_ref2.swipeMinVelocity,swipeMinVelocity=_ref2$swipeMinVelocit===void 0?SWIPE_MIN_VELOCITY:_ref2$swipeMinVelocit,_ref2$keyboardDismiss=_ref2.keyboardDismissMode,keyboardDismissMode=_ref2$keyboardDismiss===void 0?'on-drag':_ref2$keyboardDismiss,_ref2$hideStatusBarOn=_ref2.hideStatusBarOnOpen,hideStatusBarOnOpen=_ref2$hideStatusBarOn===void 0?false:_ref2$hideStatusBarOn,_ref2$statusBarAnimat=_ref2.statusBarAnimation,statusBarAnimation=_ref2$statusBarAnimat===void 0?'slide':_ref2$statusBarAnimat,style=_ref2.style,rest=_objectWithoutProperties(_ref2,_excluded);var legacyImplemenationNotAvailable=require('react-native-reanimated').abs===undefined;if(useLegacyImplementation&&legacyImplemenationNotAvailable){throw new Error('The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.');}var Drawer=useLegacyImplementation?require('./legacy/Drawer').Drawer:require('./modern/Drawer').Drawer;var windowDimensions=useWindowDimensions();var layout=customLayout!=null?customLayout:windowDimensions;return React.createElement(GestureHandlerRootView,{style:[styles.container,style]},React.createElement(Drawer,_extends({},rest,{layout:layout,drawerType:drawerType,drawerPosition:drawerPosition,drawerStyle:[{width:getDefaultDrawerWidth(layout)},styles.drawer,drawerStyle],swipeEnabled:swipeEnabled,swipeEdgeWidth:swipeEdgeWidth,swipeMinDistance:swipeMinDistance,swipeMinVelocity:swipeMinVelocity,keyboardDismissMode:keyboardDismissMode,hideStatusBarOnOpen:hideStatusBarOnOpen,statusBarAnimation:statusBarAnimation})));}var styles=StyleSheet.create({container:{flex:1},drawer:{backgroundColor:'white'}});","map":{"version":3,"names":["React","I18nManager","Platform","StyleSheet","useWindowDimensions","Reanimated","SWIPE_MIN_DISTANCE","SWIPE_MIN_VELOCITY","GestureHandlerRootView","getDefaultDrawerWidth","_ref","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","maxWidth","Drawer","_ref2","_Reanimated$isConfigu","_ref2$useLegacyImplem","useLegacyImplementation","isConfigured","call","customLayout","layout","_ref2$drawerType","drawerType","_ref2$drawerPosition","drawerPosition","getConstants","isRTL","drawerStyle","_ref2$swipeEnabled","swipeEnabled","_ref2$swipeEdgeWidth","swipeEdgeWidth","_ref2$swipeMinDistanc","swipeMinDistance","_ref2$swipeMinVelocit","swipeMinVelocity","_ref2$keyboardDismiss","keyboardDismissMode","_ref2$hideStatusBarOn","hideStatusBarOnOpen","_ref2$statusBarAnimat","statusBarAnimation","style","rest","_objectWithoutProperties","_excluded","legacyImplemenationNotAvailable","require","abs","undefined","Error","windowDimensions","createElement","styles","container","_extends","drawer","create","flex","backgroundColor"],"sources":["/Users/josh/src/ui/node_modules/react-native-drawer-layout/src/views/Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  useWindowDimensions,\n  ViewStyle,\n} from 'react-native';\nimport * as Reanimated from 'react-native-reanimated';\n\nimport { SWIPE_MIN_DISTANCE, SWIPE_MIN_VELOCITY } from '../constants';\nimport type { DrawerProps } from '../types';\nimport { GestureHandlerRootView } from './GestureHandler';\n\ntype Props = DrawerProps & {\n  /**\n   * Whether to use the legacy implementation of the drawer.\n   * The legacy implementation uses v1 of Reanimated.\n   * The modern implementation uses v2 of Reanimated.\n   *\n   * By default, the appropriate implementation is used based on whether Reanimated v2 is configured.\n   */\n  useLegacyImplementation?: boolean;\n\n  /**\n   * Style object for the wrapper view.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nconst getDefaultDrawerWidth = ({\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n}) => {\n  /*\n   * Default drawer width is screen width - header height\n   * with a max width of 280 on mobile and 320 on tablet\n   * https://material.io/components/navigation-drawer\n   */\n  const smallerAxisSize = Math.min(height, width);\n  const isLandscape = width > height;\n  const isTablet = smallerAxisSize >= 600;\n  const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n  const maxWidth = isTablet ? 320 : 280;\n\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\n\nexport function Drawer({\n  // Reanimated 2 is not configured\n  // @ts-expect-error: the type definitions are incomplete\n  useLegacyImplementation = !Reanimated.isConfigured?.(),\n  layout: customLayout,\n  drawerType = Platform.select({ ios: 'slide', default: 'front' }),\n  drawerPosition = I18nManager.getConstants().isRTL ? 'right' : 'left',\n  drawerStyle,\n  swipeEnabled = Platform.OS !== 'web' &&\n    Platform.OS !== 'windows' &&\n    Platform.OS !== 'macos',\n  swipeEdgeWidth = 32,\n  swipeMinDistance = SWIPE_MIN_DISTANCE,\n  swipeMinVelocity = SWIPE_MIN_VELOCITY,\n  keyboardDismissMode = 'on-drag',\n  hideStatusBarOnOpen = false,\n  statusBarAnimation = 'slide',\n  style,\n  ...rest\n}: Props) {\n  // Reanimated v3 dropped legacy v1 API\n  const legacyImplemenationNotAvailable =\n    require('react-native-reanimated').abs === undefined;\n\n  if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n    throw new Error(\n      'The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.'\n    );\n  }\n\n  const Drawer: typeof import('./modern/Drawer').Drawer =\n    useLegacyImplementation\n      ? require('./legacy/Drawer').Drawer\n      : require('./modern/Drawer').Drawer;\n\n  const windowDimensions = useWindowDimensions();\n  const layout = customLayout ?? windowDimensions;\n\n  return (\n    <GestureHandlerRootView style={[styles.container, style]}>\n      <Drawer\n        {...rest}\n        layout={layout}\n        drawerType={drawerType}\n        drawerPosition={drawerPosition}\n        drawerStyle={[\n          { width: getDefaultDrawerWidth(layout) },\n          styles.drawer,\n          drawerStyle,\n        ]}\n        swipeEnabled={swipeEnabled}\n        swipeEdgeWidth={swipeEdgeWidth}\n        swipeMinDistance={swipeMinDistance}\n        swipeMinVelocity={swipeMinVelocity}\n        keyboardDismissMode={keyboardDismissMode}\n        hideStatusBarOnOpen={hideStatusBarOnOpen}\n        statusBarAnimation={statusBarAnimation}\n      />\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  drawer: {\n    backgroundColor: 'white',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}