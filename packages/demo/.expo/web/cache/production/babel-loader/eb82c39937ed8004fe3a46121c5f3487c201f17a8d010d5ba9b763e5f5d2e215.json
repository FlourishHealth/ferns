{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Animated from'react-native-reanimated';import{DEFAULT_DRAWER_WIDTH,SWIPE_MIN_DISTANCE,SWIPE_MIN_OFFSET,SWIPE_MIN_VELOCITY}from'../../constants';import{DrawerProgressContext}from'../../utils/DrawerProgressContext';import{GestureState,PanGestureHandler}from'../GestureHandler';import{Overlay}from'./Overlay';var Clock=Animated.Clock,Value=Animated.Value,onChange=Animated.onChange,clockRunning=Animated.clockRunning,startClock=Animated.startClock,stopClock=Animated.stopClock,spring=Animated.spring,abs=Animated.abs,add=Animated.add,and=Animated.and,block=Animated.block,call=Animated.call,cond=Animated.cond,divide=Animated.divide,eq=Animated.eq,event=Animated.event,greaterThan=Animated.greaterThan,lessThan=Animated.lessThan,max=Animated.max,min=Animated.min,multiply=Animated.multiply,neq=Animated.neq,or=Animated.or,set=Animated.set,sub=Animated.sub;var TRUE=1;var FALSE=0;var NOOP=0;var UNSET=-1;var DIRECTION_LEFT=1;var DIRECTION_RIGHT=-1;var SPRING_CONFIG={stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01};var ANIMATED_ZERO=new Animated.Value(0);var ANIMATED_ONE=new Animated.Value(1);export var Drawer=function(_React$Component){_inherits(Drawer,_React$Component);var _super=_createSuper(Drawer);function Drawer(){var _this$props$swipeMinD,_this$props$swipeMinV;var _this;_classCallCheck(this,Drawer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleEndInteraction=function(){if(_this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=undefined;}};_this.handleStartInteraction=function(){if(_this.interactionHandle===undefined){_this.interactionHandle=InteractionManager.createInteractionHandle();}};_this.getDrawerWidth=function(){var _this$props6=_this.props,drawerStyle=_this$props6.drawerStyle,layout=_this$props6.layout;var _ref4=StyleSheet.flatten(drawerStyle)||{},_ref4$width=_ref4.width,width=_ref4$width===void 0?DEFAULT_DRAWER_WIDTH:_ref4$width;if(typeof width==='string'&&width.endsWith('%')){var percentage=Number(width.replace(/%$/,''));if(Number.isFinite(percentage)){return layout.width*(percentage/100);}}return typeof width==='number'?width:0;};_this.clock=new Clock();_this.isDrawerTypeFront=new Value(_this.props.drawerType==='front'?TRUE:FALSE);_this.isOpen=new Value(_this.props.open?TRUE:FALSE);_this.nextIsOpen=new Value(UNSET);_this.isSwiping=new Value(FALSE);_this.initialDrawerWidth=_this.getDrawerWidth();_this.gestureState=new Value(GestureState.UNDETERMINED);_this.touchX=new Value(0);_this.velocityX=new Value(0);_this.gestureX=new Value(0);_this.offsetX=new Value(0);_this.position=new Value(_this.props.open?_this.initialDrawerWidth*(_this.props.drawerPosition==='right'?DIRECTION_RIGHT:DIRECTION_LEFT):0);_this.containerWidth=new Value(_this.props.layout.width);_this.drawerWidth=new Value(_this.initialDrawerWidth);_this.drawerOpacity=new Value(_this.props.drawerType==='permanent'?1:0);_this.drawerPosition=new Value(_this.props.drawerPosition==='right'?DIRECTION_RIGHT:DIRECTION_LEFT);_this.touchDistanceFromDrawer=cond(_this.isDrawerTypeFront,cond(eq(_this.drawerPosition,DIRECTION_LEFT),max(sub(sub(_this.touchX,_this.gestureX),_this.drawerWidth),0),min(multiply(sub(sub(_this.containerWidth,_this.drawerWidth),sub(_this.touchX,_this.gestureX)),DIRECTION_RIGHT),0)),0);_this.swipeDistanceThreshold=new Value((_this$props$swipeMinD=_this.props.swipeMinDistance)!=null?_this$props$swipeMinD:SWIPE_MIN_DISTANCE);_this.swipeVelocityThreshold=new Value((_this$props$swipeMinV=_this.props.swipeMinVelocity)!=null?_this$props$swipeMinV:SWIPE_MIN_VELOCITY);_this.currentOpenValue=_this.props.open;_this.isStatusBarHidden=false;_this.manuallyTriggerSpring=new Value(FALSE);_this.transitionTo=function(isOpen){var toValue=new Value(0);var frameTime=new Value(0);var state={position:_this.position,time:new Value(0),finished:new Value(FALSE),velocity:new Value(0)};return block([cond(clockRunning(_this.clock),NOOP,[set(toValue,multiply(isOpen,_this.drawerWidth,_this.drawerPosition)),set(frameTime,0),set(state.time,0),set(state.finished,FALSE),set(state.velocity,_this.velocityX),set(_this.isOpen,isOpen),startClock(_this.clock),call([],_this.handleStartInteraction),set(_this.manuallyTriggerSpring,FALSE)]),spring(_this.clock,state,_objectSpread(_objectSpread({},SPRING_CONFIG),{},{toValue:toValue})),onChange(state.finished,cond(state.finished,call([_this.isOpen],function(open){var _this$props$onTransit,_this$props;return(_this$props$onTransit=(_this$props=_this.props).onTransitionEnd)===null||_this$props$onTransit===void 0?void 0:_this$props$onTransit.call(_this$props,!open);}),call([_this.isOpen],function(open){var _this$props$onTransit2,_this$props2;return(_this$props$onTransit2=(_this$props2=_this.props).onTransitionStart)===null||_this$props$onTransit2===void 0?void 0:_this$props$onTransit2.call(_this$props2,!open);}))),cond(state.finished,[set(_this.touchX,0),set(_this.gestureX,0),set(_this.velocityX,0),set(_this.offsetX,0),stopClock(_this.clock),call([_this.isOpen],function(_ref){var _ref5=_slicedToArray(_ref,1),value=_ref5[0];var open=Boolean(value);_this.handleEndInteraction();if(open!==_this.props.open){_this.toggleDrawer(_this.props.open);}})])]);};_this.dragX=block([onChange(_this.isOpen,call([_this.isOpen],function(_ref2){var _ref6=_slicedToArray(_ref2,1),value=_ref6[0];var open=Boolean(value);_this.currentOpenValue=open;if(open!==_this.props.open){if(open){_this.props.onOpen();}else{_this.props.onClose();}_this.pendingOpenValue=open;_this.forceUpdate();}})),onChange(_this.nextIsOpen,cond(neq(_this.nextIsOpen,UNSET),[cond(clockRunning(_this.clock),stopClock(_this.clock)),set(_this.isOpen,_this.nextIsOpen),set(_this.gestureX,0),set(_this.nextIsOpen,UNSET)])),onChange(_this.isSwiping,call([_this.isSwiping],function(_ref3){var _ref7=_slicedToArray(_ref3,1),value=_ref7[0];var keyboardDismissMode=_this.props.keyboardDismissMode;if(value===TRUE){if(keyboardDismissMode==='on-drag'){Keyboard.dismiss();}_this.toggleStatusBar(true);}else{_this.toggleStatusBar(_this.currentOpenValue);}})),onChange(_this.gestureState,cond(eq(_this.gestureState,GestureState.ACTIVE),call([],_this.handleStartInteraction))),onChange(_this.gestureState,cond(eq(_this.gestureState,GestureState.END),[call([],function(){var _this$props$onGesture,_this$props3;return(_this$props$onGesture=(_this$props3=_this.props).onGestureEnd)===null||_this$props$onGesture===void 0?void 0:_this$props$onGesture.call(_this$props3);})])),onChange(_this.gestureState,cond(eq(_this.gestureState,GestureState.CANCELLED),[call([],function(){var _this$props$onGesture2,_this$props4;return(_this$props$onGesture2=(_this$props4=_this.props).onGestureCancel)===null||_this$props$onGesture2===void 0?void 0:_this$props$onGesture2.call(_this$props4);})])),cond(eq(_this.gestureState,GestureState.ACTIVE),[cond(_this.isSwiping,NOOP,[set(_this.isSwiping,TRUE),set(_this.offsetX,_this.position),call([],function(){var _this$props$onGesture3,_this$props5;return(_this$props$onGesture3=(_this$props5=_this.props).onGestureStart)===null||_this$props$onGesture3===void 0?void 0:_this$props$onGesture3.call(_this$props5);})]),set(_this.position,add(_this.offsetX,_this.gestureX,_this.touchDistanceFromDrawer)),stopClock(_this.clock)],[set(_this.isSwiping,FALSE),set(_this.touchX,0),_this.transitionTo(cond(_this.manuallyTriggerSpring,_this.isOpen,cond(or(and(greaterThan(abs(_this.gestureX),SWIPE_MIN_OFFSET),greaterThan(abs(_this.velocityX),_this.swipeVelocityThreshold)),greaterThan(abs(_this.gestureX),_this.swipeDistanceThreshold)),cond(eq(_this.drawerPosition,DIRECTION_LEFT),greaterThan(cond(eq(_this.velocityX,0),_this.gestureX,_this.velocityX),0),lessThan(cond(eq(_this.velocityX,0),_this.gestureX,_this.velocityX),0)),_this.isOpen)))]),_this.position]);_this.translateX=cond(eq(_this.drawerPosition,DIRECTION_RIGHT),min(max(multiply(_this.drawerWidth,-1),_this.dragX),0),max(min(_this.drawerWidth,_this.dragX),0));_this.progress=cond(eq(_this.drawerWidth,0),0,abs(divide(_this.translateX,_this.drawerWidth)));_this.handleGestureEvent=event([{nativeEvent:{x:_this.touchX,translationX:_this.gestureX,velocityX:_this.velocityX}}]);_this.handleGestureStateChange=event([{nativeEvent:{state:function state(s){return set(_this.gestureState,s);}}}]);_this.handleContainerLayout=function(e){return _this.containerWidth.setValue(e.nativeEvent.layout.width);};_this.handleDrawerLayout=function(e){_this.drawerWidth.setValue(e.nativeEvent.layout.width);_this.toggleDrawer(_this.props.open);requestAnimationFrame(function(){return requestAnimationFrame(function(){return _this.drawerOpacity.setValue(1);});});};_this.toggleDrawer=function(open){if(_this.currentOpenValue!==open){_this.nextIsOpen.setValue(open?TRUE:FALSE);_this.currentOpenValue=open;}};_this.toggleStatusBar=function(hidden){var _this$props7=_this.props,hideStatusBar=_this$props7.hideStatusBarOnOpen,statusBarAnimation=_this$props7.statusBarAnimation;if(hideStatusBar&&_this.isStatusBarHidden!==hidden){_this.isStatusBarHidden=hidden;StatusBar.setHidden(hidden,statusBarAnimation);}};return _this;}_createClass(Drawer,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props8=this.props,open=_this$props8.open,drawerPosition=_this$props8.drawerPosition,drawerType=_this$props8.drawerType,swipeMinDistance=_this$props8.swipeMinDistance,swipeMinVelocity=_this$props8.swipeMinVelocity,hideStatusBarOnOpen=_this$props8.hideStatusBarOnOpen;if(typeof this.pendingOpenValue!=='boolean'||open!==this.pendingOpenValue){this.toggleDrawer(open);}this.pendingOpenValue=undefined;if(open!==prevProps.open&&hideStatusBarOnOpen){this.toggleStatusBar(open);}if(prevProps.drawerPosition!==drawerPosition){this.drawerPosition.setValue(drawerPosition==='right'?DIRECTION_RIGHT:DIRECTION_LEFT);}if(prevProps.drawerType!==drawerType){this.isDrawerTypeFront.setValue(drawerType==='front'?TRUE:FALSE);}if(prevProps.swipeMinDistance!==swipeMinDistance){this.swipeDistanceThreshold.setValue(swipeMinDistance!=null?swipeMinDistance:SWIPE_MIN_DISTANCE);}if(prevProps.swipeMinVelocity!==swipeMinVelocity){this.swipeVelocityThreshold.setValue(swipeMinVelocity!=null?swipeMinVelocity:SWIPE_MIN_VELOCITY);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.toggleStatusBar(false);this.handleEndInteraction();}},{key:\"render\",value:function render(){var _this2=this;var _this$props9=this.props,open=_this$props9.open,swipeEnabled=_this$props9.swipeEnabled,drawerPosition=_this$props9.drawerPosition,drawerType=_this$props9.drawerType,swipeEdgeWidth=_this$props9.swipeEdgeWidth,drawerStyle=_this$props9.drawerStyle,overlayStyle=_this$props9.overlayStyle,renderDrawerContent=_this$props9.renderDrawerContent,children=_this$props9.children,gestureHandlerProps=_this$props9.gestureHandlerProps,overlayAccessibilityLabel=_this$props9.overlayAccessibilityLabel;var isOpen=drawerType==='permanent'?true:open;var isRight=drawerPosition==='right';var contentTranslateX=drawerType==='front'?ANIMATED_ZERO:this.translateX;var drawerTranslateX=drawerType==='back'?ANIMATED_ZERO:this.translateX;var offset=drawerType==='back'?0:'100%';var hitSlop=isRight?{right:0,width:isOpen?undefined:swipeEdgeWidth}:{left:0,width:isOpen?undefined:swipeEdgeWidth};var progress=drawerType==='permanent'?ANIMATED_ONE:this.progress;return React.createElement(DrawerProgressContext.Provider,{value:progress},React.createElement(PanGestureHandler,_extends({activeOffsetX:[-SWIPE_MIN_OFFSET,SWIPE_MIN_OFFSET],failOffsetY:[-SWIPE_MIN_OFFSET,SWIPE_MIN_OFFSET],onGestureEvent:this.handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange,hitSlop:hitSlop,enabled:drawerType!=='permanent'&&swipeEnabled},gestureHandlerProps),React.createElement(Animated.View,{onLayout:this.handleContainerLayout,style:[styles.main,{flexDirection:drawerType==='permanent'&&!isRight?'row-reverse':'row'}]},React.createElement(Animated.View,{style:[styles.content,{transform:drawerType==='permanent'?[]:[{translateX:contentTranslateX}]}]},React.createElement(View,{accessibilityElementsHidden:isOpen&&drawerType!=='permanent',importantForAccessibility:isOpen&&drawerType!=='permanent'?'no-hide-descendants':'auto',style:styles.content},children),drawerType==='permanent'?null:React.createElement(Overlay,{progress:progress,onPress:function onPress(){return _this2.toggleDrawer(false);},accessibilityLabel:overlayAccessibilityLabel,style:overlayStyle,accessibilityElementsHidden:!isOpen,importantForAccessibility:isOpen?'auto':'no-hide-descendants'})),React.createElement(Animated.Code,{exec:this.containerWidth}),drawerType==='permanent'?null:React.createElement(Animated.Code,{exec:block([onChange(this.manuallyTriggerSpring,[cond(eq(this.manuallyTriggerSpring,TRUE),[set(this.nextIsOpen,FALSE),call([],function(){return _this2.currentOpenValue=false;})])])])}),React.createElement(Animated.View,{removeClippedSubviews:\"web\"!=='ios',onLayout:this.handleDrawerLayout,style:[styles.container,{transform:drawerType==='permanent'?[]:[{translateX:drawerTranslateX}],opacity:this.drawerOpacity},drawerType==='permanent'?isRight?{right:0}:{left:0}:[styles.nonPermanent,isRight?{right:offset}:{left:offset},{zIndex:drawerType==='back'?-1:0}],drawerStyle]},renderDrawerContent()))));}}]);return Drawer;}(React.Component);var styles=StyleSheet.create({container:{backgroundColor:'white',maxWidth:'100%'},nonPermanent:{position:'absolute',top:0,bottom:0,width:DEFAULT_DRAWER_WIDTH},content:{flex:1},main:_objectSpread({flex:1},null)});","map":{"version":3,"names":["React","InteractionManager","Keyboard","Platform","StatusBar","StyleSheet","View","Animated","DEFAULT_DRAWER_WIDTH","SWIPE_MIN_DISTANCE","SWIPE_MIN_OFFSET","SWIPE_MIN_VELOCITY","DrawerProgressContext","GestureState","PanGestureHandler","Overlay","Clock","Value","onChange","clockRunning","startClock","stopClock","spring","abs","add","and","block","call","cond","divide","eq","event","greaterThan","lessThan","max","min","multiply","neq","or","set","sub","TRUE","FALSE","NOOP","UNSET","DIRECTION_LEFT","DIRECTION_RIGHT","SPRING_CONFIG","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","ANIMATED_ZERO","ANIMATED_ONE","Drawer","_React$Component","_inherits","_super","_createSuper","_this$props$swipeMinD","_this$props$swipeMinV","_this","_classCallCheck","_len","arguments","length","args","Array","_key","apply","concat","handleEndInteraction","interactionHandle","undefined","clearInteractionHandle","handleStartInteraction","createInteractionHandle","getDrawerWidth","_this$props6","props","drawerStyle","layout","_ref4","flatten","_ref4$width","width","endsWith","percentage","Number","replace","isFinite","clock","isDrawerTypeFront","drawerType","isOpen","open","nextIsOpen","isSwiping","initialDrawerWidth","gestureState","UNDETERMINED","touchX","velocityX","gestureX","offsetX","position","drawerPosition","containerWidth","drawerWidth","drawerOpacity","touchDistanceFromDrawer","swipeDistanceThreshold","swipeMinDistance","swipeVelocityThreshold","swipeMinVelocity","currentOpenValue","isStatusBarHidden","manuallyTriggerSpring","transitionTo","toValue","frameTime","state","time","finished","velocity","_objectSpread","_this$props$onTransit","_this$props","onTransitionEnd","_this$props$onTransit2","_this$props2","onTransitionStart","_ref","_ref5","_slicedToArray","value","Boolean","toggleDrawer","dragX","_ref2","_ref6","onOpen","onClose","pendingOpenValue","forceUpdate","_ref3","_ref7","keyboardDismissMode","dismiss","toggleStatusBar","ACTIVE","END","_this$props$onGesture","_this$props3","onGestureEnd","CANCELLED","_this$props$onGesture2","_this$props4","onGestureCancel","_this$props$onGesture3","_this$props5","onGestureStart","translateX","progress","handleGestureEvent","nativeEvent","x","translationX","handleGestureStateChange","s","handleContainerLayout","e","setValue","handleDrawerLayout","requestAnimationFrame","hidden","_this$props7","hideStatusBar","hideStatusBarOnOpen","statusBarAnimation","setHidden","_createClass","key","componentDidUpdate","prevProps","_this$props8","componentWillUnmount","render","_this2","_this$props9","swipeEnabled","swipeEdgeWidth","overlayStyle","renderDrawerContent","children","gestureHandlerProps","overlayAccessibilityLabel","isRight","contentTranslateX","drawerTranslateX","offset","hitSlop","right","left","createElement","Provider","_extends","activeOffsetX","failOffsetY","onGestureEvent","onHandlerStateChange","enabled","onLayout","style","styles","main","flexDirection","content","transform","accessibilityElementsHidden","importantForAccessibility","onPress","accessibilityLabel","Code","exec","removeClippedSubviews","container","opacity","nonPermanent","zIndex","Component","create","backgroundColor","maxWidth","top","bottom","flex"],"sources":["/Users/josh/src/ui/node_modules/react-native-drawer-layout/src/views/legacy/Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  InteractionManager,\n  Keyboard,\n  LayoutChangeEvent,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nimport {\n  DEFAULT_DRAWER_WIDTH,\n  SWIPE_MIN_DISTANCE,\n  SWIPE_MIN_OFFSET,\n  SWIPE_MIN_VELOCITY,\n} from '../../constants';\nimport type { DrawerProps } from '../../types';\nimport { DrawerProgressContext } from '../../utils/DrawerProgressContext';\nimport { GestureState, PanGestureHandler } from '../GestureHandler';\nimport { Overlay } from './Overlay';\n\nconst {\n  Clock,\n  Value,\n  onChange,\n  clockRunning,\n  startClock,\n  stopClock,\n  spring,\n  abs,\n  add,\n  and,\n  block,\n  call,\n  cond,\n  divide,\n  eq,\n  event,\n  greaterThan,\n  lessThan,\n  max,\n  min,\n  multiply,\n  neq,\n  or,\n  set,\n  sub,\n} = Animated;\n\nconst TRUE = 1;\nconst FALSE = 0;\nconst NOOP = 0;\nconst UNSET = -1;\n\nconst DIRECTION_LEFT = 1;\nconst DIRECTION_RIGHT = -1;\n\nconst SPRING_CONFIG = {\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n  restDisplacementThreshold: 0.01,\n  restSpeedThreshold: 0.01,\n};\n\nconst ANIMATED_ZERO = new Animated.Value(0);\nconst ANIMATED_ONE = new Animated.Value(1);\n\ntype Binary = 0 | 1;\n\ntype Props = DrawerProps & {\n  layout: { width: number };\n};\n\nexport class Drawer extends React.Component<Props> {\n  componentDidUpdate(prevProps: Props) {\n    const {\n      open,\n      drawerPosition,\n      drawerType,\n      swipeMinDistance,\n      swipeMinVelocity,\n      hideStatusBarOnOpen,\n    } = this.props;\n\n    if (\n      // If we're not in the middle of a transition, sync the drawer's open state\n      typeof this.pendingOpenValue !== 'boolean' ||\n      open !== this.pendingOpenValue\n    ) {\n      this.toggleDrawer(open);\n    }\n\n    this.pendingOpenValue = undefined;\n\n    if (open !== prevProps.open && hideStatusBarOnOpen) {\n      this.toggleStatusBar(open);\n    }\n\n    if (prevProps.drawerPosition !== drawerPosition) {\n      this.drawerPosition.setValue(\n        drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT\n      );\n    }\n\n    if (prevProps.drawerType !== drawerType) {\n      this.isDrawerTypeFront.setValue(drawerType === 'front' ? TRUE : FALSE);\n    }\n\n    if (prevProps.swipeMinDistance !== swipeMinDistance) {\n      this.swipeDistanceThreshold.setValue(\n        swipeMinDistance ?? SWIPE_MIN_DISTANCE\n      );\n    }\n\n    if (prevProps.swipeMinVelocity !== swipeMinVelocity) {\n      this.swipeVelocityThreshold.setValue(\n        swipeMinVelocity ?? SWIPE_MIN_VELOCITY\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.toggleStatusBar(false);\n    this.handleEndInteraction();\n  }\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private getDrawerWidth = (): number => {\n    const { drawerStyle, layout } = this.props;\n    const { width = DEFAULT_DRAWER_WIDTH } =\n      StyleSheet.flatten(drawerStyle) || {};\n\n    if (typeof width === 'string' && width.endsWith('%')) {\n      // Try to calculate width if a percentage is given\n      const percentage = Number(width.replace(/%$/, ''));\n\n      if (Number.isFinite(percentage)) {\n        return layout.width * (percentage / 100);\n      }\n    }\n\n    return typeof width === 'number' ? width : 0;\n  };\n\n  private clock = new Clock();\n  private interactionHandle: number | undefined;\n\n  private isDrawerTypeFront = new Value<Binary>(\n    this.props.drawerType === 'front' ? TRUE : FALSE\n  );\n\n  private isOpen = new Value<Binary>(this.props.open ? TRUE : FALSE);\n  private nextIsOpen = new Value<Binary | -1>(UNSET);\n  private isSwiping = new Value<Binary>(FALSE);\n\n  private initialDrawerWidth = this.getDrawerWidth();\n\n  private gestureState = new Value<number>(GestureState.UNDETERMINED);\n  private touchX = new Value<number>(0);\n  private velocityX = new Value<number>(0);\n  private gestureX = new Value<number>(0);\n  private offsetX = new Value<number>(0);\n  private position = new Value<number>(\n    this.props.open\n      ? this.initialDrawerWidth *\n        (this.props.drawerPosition === 'right'\n          ? DIRECTION_RIGHT\n          : DIRECTION_LEFT)\n      : 0\n  );\n\n  private containerWidth = new Value<number>(this.props.layout.width);\n  private drawerWidth = new Value<number>(this.initialDrawerWidth);\n  private drawerOpacity = new Value<number>(\n    this.props.drawerType === 'permanent' ? 1 : 0\n  );\n  private drawerPosition = new Value<number>(\n    this.props.drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT\n  );\n\n  // Comment stolen from react-native-gesture-handler/DrawerLayout\n  //\n  // While closing the drawer when user starts gesture outside of its area (in greyed\n  // out part of the window), we want the drawer to follow only once finger reaches the\n  // edge of the drawer.\n  // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n  // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n  // an arrow pointing left\n  // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n  //    +---------------+    +---------------+    +---------------+    +---------------+\n  //\n  // For the above to work properly we define animated value that will keep start position\n  // of the gesture. Then we use that value to calculate how much we need to subtract from\n  // the dragX. If the gesture started on the greyed out area we take the distance from the\n  // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n  // drawer be pulled back as soon as you start the pan.\n  //\n  // This is used only when drawerType is \"front\"\n  private touchDistanceFromDrawer = cond(\n    this.isDrawerTypeFront,\n    cond(\n      eq(this.drawerPosition, DIRECTION_LEFT),\n      max(\n        // Distance of touch start from left screen edge - Drawer width\n        sub(sub(this.touchX, this.gestureX), this.drawerWidth),\n        0\n      ),\n      min(\n        multiply(\n          // Distance of drawer from left screen edge - Touch start point\n          sub(\n            sub(this.containerWidth, this.drawerWidth),\n            sub(this.touchX, this.gestureX)\n          ),\n          DIRECTION_RIGHT\n        ),\n        0\n      )\n    ),\n    0\n  );\n\n  private swipeDistanceThreshold = new Value<number>(\n    this.props.swipeMinDistance ?? SWIPE_MIN_DISTANCE\n  );\n  private swipeVelocityThreshold = new Value<number>(\n    this.props.swipeMinVelocity ?? SWIPE_MIN_VELOCITY\n  );\n\n  private currentOpenValue: boolean = this.props.open;\n  private pendingOpenValue: boolean | undefined;\n\n  private isStatusBarHidden: boolean = false;\n\n  private manuallyTriggerSpring = new Value<Binary>(FALSE);\n\n  private transitionTo = (isOpen: number | Animated.Node<number>) => {\n    const toValue = new Value(0);\n    const frameTime = new Value(0);\n\n    const state = {\n      position: this.position,\n      time: new Value(0),\n      finished: new Value(FALSE),\n      velocity: new Value(0),\n    };\n\n    return block([\n      cond(clockRunning(this.clock), NOOP, [\n        // Animation wasn't running before\n        // Set the initial values and start the clock\n        set(toValue, multiply(isOpen, this.drawerWidth, this.drawerPosition)),\n        set(frameTime, 0),\n        set(state.time, 0),\n        set(state.finished, FALSE),\n        set(state.velocity, this.velocityX),\n        set(this.isOpen, isOpen),\n        startClock(this.clock),\n        call([], this.handleStartInteraction),\n        set(this.manuallyTriggerSpring, FALSE),\n      ]),\n      spring(this.clock, state, { ...SPRING_CONFIG, toValue }),\n      onChange(\n        state.finished,\n        cond(\n          state.finished,\n          call([this.isOpen], (open) => this.props.onTransitionEnd?.(!open)),\n          call([this.isOpen], (open) => this.props.onTransitionStart?.(!open))\n        )\n      ),\n      cond(state.finished, [\n        // Reset gesture and velocity from previous gesture\n        set(this.touchX, 0),\n        set(this.gestureX, 0),\n        set(this.velocityX, 0),\n        set(this.offsetX, 0),\n        // When the animation finishes, stop the clock\n        stopClock(this.clock),\n        call([this.isOpen], ([value]: readonly Binary[]) => {\n          const open = Boolean(value);\n          this.handleEndInteraction();\n\n          if (open !== this.props.open) {\n            // Sync drawer's state after animation finished\n            // This shouldn't be necessary, but there seems to be an issue on iOS\n            this.toggleDrawer(this.props.open);\n          }\n        }),\n      ]),\n    ]);\n  };\n\n  private dragX = block([\n    onChange(\n      this.isOpen,\n      call([this.isOpen], ([value]: readonly Binary[]) => {\n        const open = Boolean(value);\n\n        this.currentOpenValue = open;\n\n        // Without this check, the drawer can go to an infinite update <-> animate loop for sync updates\n        if (open !== this.props.open) {\n          // If the mode changed, update state\n          if (open) {\n            this.props.onOpen();\n          } else {\n            this.props.onClose();\n          }\n\n          this.pendingOpenValue = open;\n\n          // Force componentDidUpdate to fire, whether user does a setState or not\n          // This allows us to detect when the user drops the update and revert back\n          // It's necessary to make sure that the state stays in sync\n          this.forceUpdate();\n        }\n      })\n    ),\n    onChange(\n      this.nextIsOpen,\n      cond(neq(this.nextIsOpen, UNSET), [\n        // Stop any running animations\n        cond(clockRunning(this.clock), stopClock(this.clock)),\n        // Update the open value to trigger the transition\n        set(this.isOpen, this.nextIsOpen),\n        set(this.gestureX, 0),\n        set(this.nextIsOpen, UNSET),\n      ])\n    ),\n    // This block must be after the this.isOpen listener since we check for current value\n    onChange(\n      this.isSwiping,\n      // Listen to updates for this value only when it changes\n      // Without `onChange`, this will fire even if the value didn't change\n      // We don't want to call the listeners if the value didn't change\n      call([this.isSwiping], ([value]: readonly Binary[]) => {\n        const { keyboardDismissMode } = this.props;\n\n        if (value === TRUE) {\n          if (keyboardDismissMode === 'on-drag') {\n            Keyboard.dismiss();\n          }\n\n          this.toggleStatusBar(true);\n        } else {\n          this.toggleStatusBar(this.currentOpenValue);\n        }\n      })\n    ),\n    onChange(\n      this.gestureState,\n      cond(\n        eq(this.gestureState, GestureState.ACTIVE),\n        call([], this.handleStartInteraction)\n      )\n    ),\n    onChange(\n      this.gestureState,\n      cond(eq(this.gestureState, GestureState.END), [\n        call([], () => this.props.onGestureEnd?.()),\n      ])\n    ),\n    onChange(\n      this.gestureState,\n      cond(eq(this.gestureState, GestureState.CANCELLED), [\n        call([], () => this.props.onGestureCancel?.()),\n      ])\n    ),\n    cond(\n      eq(this.gestureState, GestureState.ACTIVE),\n      [\n        cond(this.isSwiping, NOOP, [\n          // We weren't dragging before, set it to true\n          set(this.isSwiping, TRUE),\n          // Also update the drag offset to the last position\n          set(this.offsetX, this.position),\n          call([], () => this.props.onGestureStart?.()),\n        ]),\n        // Update position with previous offset + gesture distance\n        set(\n          this.position,\n          add(this.offsetX, this.gestureX, this.touchDistanceFromDrawer)\n        ),\n        // Stop animations while we're dragging\n        stopClock(this.clock),\n      ],\n      [\n        set(this.isSwiping, FALSE),\n        set(this.touchX, 0),\n        this.transitionTo(\n          cond(\n            this.manuallyTriggerSpring,\n            this.isOpen,\n            cond(\n              or(\n                and(\n                  greaterThan(abs(this.gestureX), SWIPE_MIN_OFFSET),\n                  greaterThan(abs(this.velocityX), this.swipeVelocityThreshold)\n                ),\n                greaterThan(abs(this.gestureX), this.swipeDistanceThreshold)\n              ),\n              cond(\n                eq(this.drawerPosition, DIRECTION_LEFT),\n                // If swiped to right, open the drawer, otherwise close it\n                greaterThan(\n                  cond(eq(this.velocityX, 0), this.gestureX, this.velocityX),\n                  0\n                ),\n                // If swiped to left, open the drawer, otherwise close it\n                lessThan(\n                  cond(eq(this.velocityX, 0), this.gestureX, this.velocityX),\n                  0\n                )\n              ),\n              this.isOpen\n            )\n          )\n        ),\n      ]\n    ),\n    this.position,\n  ]);\n\n  private translateX = cond(\n    eq(this.drawerPosition, DIRECTION_RIGHT),\n    min(max(multiply(this.drawerWidth, -1), this.dragX), 0),\n    max(min(this.drawerWidth, this.dragX), 0)\n  );\n\n  private progress = cond(\n    // Check if the drawer width is available to avoid division by zero\n    eq(this.drawerWidth, 0),\n    0,\n    abs(divide(this.translateX, this.drawerWidth))\n  );\n\n  private handleGestureEvent = event([\n    {\n      nativeEvent: {\n        x: this.touchX,\n        translationX: this.gestureX,\n        velocityX: this.velocityX,\n      },\n    },\n  ]);\n\n  private handleGestureStateChange = event([\n    {\n      nativeEvent: {\n        state: (s: Animated.Value<number>) => set(this.gestureState, s),\n      },\n    },\n  ]);\n\n  private handleContainerLayout = (e: LayoutChangeEvent) =>\n    this.containerWidth.setValue(e.nativeEvent.layout.width);\n\n  private handleDrawerLayout = (e: LayoutChangeEvent) => {\n    this.drawerWidth.setValue(e.nativeEvent.layout.width);\n    this.toggleDrawer(this.props.open);\n\n    // Until layout is available, drawer is hidden with opacity: 0 by default\n    // Show it in the next frame when layout is available\n    // If we don't delay it until the next frame, there's a visible flicker\n    requestAnimationFrame(() =>\n      requestAnimationFrame(() => this.drawerOpacity.setValue(1))\n    );\n  };\n\n  private toggleDrawer = (open: boolean) => {\n    if (this.currentOpenValue !== open) {\n      this.nextIsOpen.setValue(open ? TRUE : FALSE);\n\n      // This value will also be set shortly after as changing this.nextIsOpen changes this.isOpen\n      // However, there's a race condition on Android, so we need to set a bit earlier\n      this.currentOpenValue = open;\n    }\n  };\n\n  private toggleStatusBar = (hidden: boolean) => {\n    const { hideStatusBarOnOpen: hideStatusBar, statusBarAnimation } =\n      this.props;\n\n    if (hideStatusBar && this.isStatusBarHidden !== hidden) {\n      this.isStatusBarHidden = hidden;\n      StatusBar.setHidden(hidden, statusBarAnimation);\n    }\n  };\n\n  render() {\n    const {\n      open,\n      swipeEnabled,\n      drawerPosition,\n      drawerType,\n      swipeEdgeWidth,\n      drawerStyle,\n      overlayStyle,\n      renderDrawerContent,\n      children,\n      gestureHandlerProps,\n      overlayAccessibilityLabel,\n    } = this.props;\n\n    const isOpen = drawerType === 'permanent' ? true : open;\n    const isRight = drawerPosition === 'right';\n\n    const contentTranslateX =\n      drawerType === 'front' ? ANIMATED_ZERO : this.translateX;\n\n    const drawerTranslateX =\n      drawerType === 'back' ? ANIMATED_ZERO : this.translateX;\n\n    const offset = drawerType === 'back' ? 0 : '100%';\n\n    // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n    // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n    const hitSlop = isRight\n      ? // Extend hitSlop to the side of the screen when drawer is closed\n        // This lets the user drag the drawer from the side of the screen\n        { right: 0, width: isOpen ? undefined : swipeEdgeWidth }\n      : { left: 0, width: isOpen ? undefined : swipeEdgeWidth };\n\n    const progress = drawerType === 'permanent' ? ANIMATED_ONE : this.progress;\n\n    return (\n      <DrawerProgressContext.Provider value={progress}>\n        <PanGestureHandler\n          activeOffsetX={[-SWIPE_MIN_OFFSET, SWIPE_MIN_OFFSET]}\n          failOffsetY={[-SWIPE_MIN_OFFSET, SWIPE_MIN_OFFSET]}\n          onGestureEvent={this.handleGestureEvent}\n          onHandlerStateChange={this.handleGestureStateChange}\n          hitSlop={hitSlop}\n          enabled={drawerType !== 'permanent' && swipeEnabled}\n          {...gestureHandlerProps}\n        >\n          <Animated.View\n            onLayout={this.handleContainerLayout}\n            style={[\n              styles.main,\n              {\n                flexDirection:\n                  drawerType === 'permanent' && !isRight\n                    ? 'row-reverse'\n                    : 'row',\n              },\n            ]}\n          >\n            <Animated.View\n              style={[\n                styles.content,\n                {\n                  transform:\n                    drawerType === 'permanent'\n                      ? // Reanimated needs the property to be present, but it results in Browser bug\n                        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n                        []\n                      : [{ translateX: contentTranslateX }],\n                },\n              ]}\n            >\n              <View\n                accessibilityElementsHidden={\n                  isOpen && drawerType !== 'permanent'\n                }\n                importantForAccessibility={\n                  isOpen && drawerType !== 'permanent'\n                    ? 'no-hide-descendants'\n                    : 'auto'\n                }\n                style={styles.content}\n              >\n                {children}\n              </View>\n              {\n                // Disable overlay if sidebar is permanent\n                drawerType === 'permanent' ? null : (\n                  <Overlay\n                    progress={progress}\n                    onPress={() => this.toggleDrawer(false)}\n                    accessibilityLabel={overlayAccessibilityLabel}\n                    style={overlayStyle as any}\n                    accessibilityElementsHidden={!isOpen}\n                    importantForAccessibility={\n                      isOpen ? 'auto' : 'no-hide-descendants'\n                    }\n                  />\n                )\n              }\n            </Animated.View>\n            <Animated.Code\n              // This is needed to make sure that container width updates with `setValue`\n              // Without this, it won't update when not used in styles\n              exec={this.containerWidth}\n            />\n            {drawerType === 'permanent' ? null : (\n              <Animated.Code\n                exec={block([\n                  onChange(this.manuallyTriggerSpring, [\n                    cond(eq(this.manuallyTriggerSpring, TRUE), [\n                      set(this.nextIsOpen, FALSE),\n                      call([], () => (this.currentOpenValue = false)),\n                    ]),\n                  ]),\n                ])}\n              />\n            )}\n            <Animated.View\n              removeClippedSubviews={Platform.OS !== 'ios'}\n              onLayout={this.handleDrawerLayout}\n              style={[\n                styles.container,\n                {\n                  transform:\n                    drawerType === 'permanent'\n                      ? // Reanimated needs the property to be present, but it results in Browser bug\n                        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n                        []\n                      : [{ translateX: drawerTranslateX }],\n                  opacity: this.drawerOpacity,\n                },\n                drawerType === 'permanent'\n                  ? // Without this, the `left`/`right` values don't get reset\n                    isRight\n                    ? { right: 0 }\n                    : { left: 0 }\n                  : [\n                      styles.nonPermanent,\n                      isRight ? { right: offset } : { left: offset },\n                      { zIndex: drawerType === 'back' ? -1 : 0 },\n                    ],\n                drawerStyle as any,\n              ]}\n            >\n              {renderDrawerContent()}\n            </Animated.View>\n          </Animated.View>\n        </PanGestureHandler>\n      </DrawerProgressContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    maxWidth: '100%',\n  },\n  nonPermanent: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    width: DEFAULT_DRAWER_WIDTH,\n  },\n  content: {\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n    ...Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: { overflow: 'hidden' },\n    }),\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}