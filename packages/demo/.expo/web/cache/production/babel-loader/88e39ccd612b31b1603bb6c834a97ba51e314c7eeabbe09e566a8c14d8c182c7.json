{"ast":null,"code":"'use strict';import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{useEffect,useRef}from'react';import{initialUpdaterRun}from'../animation';import{makeMutable,startMapper,stopMapper}from'../core';import{shouldBeUseWeb}from'../PlatformChecker';var _worklet_4899742148771_init_data={code:\"function anonymous(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}\"};export function useDerivedValue(updater,dependencies){var _updater$__closure;var initRef=useRef(null);var inputs=Object.values((_updater$__closure=updater.__closure)!=null?_updater$__closure:{});if(shouldBeUseWeb()){var _dependencies;if(!inputs.length&&(_dependencies=dependencies)!==null&&_dependencies!==void 0&&_dependencies.length){inputs=dependencies;}}if(dependencies===undefined){dependencies=[].concat(_toConsumableArray(inputs),[updater.__workletHash]);}else{dependencies.push(updater.__workletHash);}if(initRef.current===null){initRef.current=makeMutable(initialUpdaterRun(updater));}var sharedValue=initRef.current;useEffect(function(){var fun=function(){var anonymous=function anonymous(){sharedValue.value=updater();};anonymous.__closure={sharedValue:sharedValue,updater:updater};anonymous.__workletHash=4899742148771;anonymous.__initData=_worklet_4899742148771_init_data;return anonymous;}();var mapperId=startMapper(fun,inputs,[sharedValue]);return function(){stopMapper(mapperId);};},dependencies);useEffect(function(){return function(){initRef.current=null;};},[]);return sharedValue;}","map":{"version":3,"names":["_toConsumableArray","useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","shouldBeUseWeb","_worklet_4899742148771_init_data","code","useDerivedValue","updater","dependencies","_updater$__closure","initRef","inputs","Object","values","__closure","_dependencies","length","undefined","concat","__workletHash","push","current","sharedValue","fun","anonymous","value","__initData","mapperId"],"sources":["/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useDerivedValue.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\nexport type DerivedValue<Value> = Readonly<SharedValue<Value>>;\n\n/**\n * Lets you create new shared values based on existing ones while keeping them reactive.\n *\n * @param updater - A function called whenever at least one of the shared values or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const sharedValue: SharedValue<Value> = initRef.current!;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  return sharedValue;\n}\n"],"mappings":"AAAA,YAAY,QAAAA,kBAAA,gDACZ,OAASC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,OAASC,iBAAiB,KAAQ,cAAc,CAEhD,OAASC,WAAW,CAAEC,WAAW,CAAEC,UAAU,KAAQ,SAAS,CAE9D,OAASC,cAAc,KAAQ,oBAAoB,KAAAC,gCAAA,EAAAC,IAAA,iGAkBnD,MAAO,SAAS,CAAAC,eAAeA,CAC7BC,OAAmC,CACnCC,YAA6B,CACR,KAAAC,kBAAA,CACrB,GAAM,CAAAC,OAAO,CAAGZ,MAAM,CAA4B,IAAI,CAAC,CACvD,GAAI,CAAAa,MAAM,CAAGC,MAAM,CAACC,MAAM,EAAAJ,kBAAA,CAACF,OAAO,CAACO,SAAS,QAAAL,kBAAA,CAAI,CAAC,CAAC,CAAC,CACnD,GAAIN,cAAc,EAAE,CAAE,KAAAY,aAAA,CACpB,GAAI,CAACJ,MAAM,CAACK,MAAM,GAAAD,aAAA,CAAIP,YAAY,UAAAO,aAAA,WAAZA,aAAA,CAAcC,MAAM,CAAE,CAE1CL,MAAM,CAAGH,YAAY,CACvB,CACF,CAGA,GAAIA,YAAY,GAAKS,SAAS,CAAE,CAC9BT,YAAY,IAAAU,MAAA,CAAAtB,kBAAA,CAAOe,MAAM,GAAEJ,OAAO,CAACY,aAAa,EAAC,CACnD,CAAC,IAAM,CACLX,YAAY,CAACY,IAAI,CAACb,OAAO,CAACY,aAAa,CAAC,CAC1C,CAEA,GAAIT,OAAO,CAACW,OAAO,GAAK,IAAI,CAAE,CAC5BX,OAAO,CAACW,OAAO,CAAGrB,WAAW,CAACD,iBAAiB,CAACQ,OAAO,CAAC,CAAC,CAC3D,CAGA,GAAM,CAAAe,WAA+B,CAAGZ,OAAO,CAACW,OAAQ,CAExDxB,SAAS,CAAC,UAAM,CACd,GAAM,CAAA0B,GAAG,CAAG,eAAAC,SAAA,UAAAA,UAAA,CAAM,CAEhBF,WAAW,CAACG,KAAK,CAAGlB,OAAO,EAAE,CAC/B,CAAC,CAAAiB,SAAA,CAAAV,SAAA,EAAAQ,WAAA,CADCA,WAAW,CAAAf,OAAA,CAASA,OAAO,EAAAiB,SAAA,CAAAL,aAAA,eAAAK,SAAA,CAAAE,UAAA,CAAAtB,gCAAA,QAAAoB,SAAA,EAFjB,EAGX,CACD,GAAM,CAAAG,QAAQ,CAAG1B,WAAW,CAACsB,GAAG,CAAEZ,MAAM,CAAE,CAACW,WAAW,CAAC,CAAC,CACxD,MAAO,WAAM,CACXpB,UAAU,CAACyB,QAAQ,CAAC,CACtB,CAAC,CACH,CAAC,CAAEnB,YAAY,CAAC,CAEhBX,SAAS,CAAC,UAAM,CACd,MAAO,WAAM,CACXa,OAAO,CAACW,OAAO,CAAG,IAAI,CACxB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAC,WAAW,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}