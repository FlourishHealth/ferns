{"ast":null,"code":"import{CodedError}from'expo-modules-core';import ExpoFontLoader from'./ExpoFontLoader';import{getAssetForSource,loadSingleFontAsync}from'./FontLoader';export function getServerResources(){return ExpoFontLoader.getServerResources();}export function resetServerContext(){return ExpoFontLoader.resetServerContext();}export function registerStaticFont(fontFamily,source){if(!source){throw new CodedError(`ERR_FONT_SOURCE`,`Cannot load null or undefined font source: { \"${fontFamily}\": ${source} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${fontFamily}\"`);}var asset=getAssetForSource(source);loadSingleFontAsync(fontFamily,asset);}","map":{"version":3,"sources":["../src/server.ts"],"names":[],"mappings":"AAAA,OAAS,UAAU,KAAQ,mBAAmB,CAE9C,MAAO,CAAA,cAAc,KAAM,kBAAkB,CAE7C,OAAS,iBAAiB,CAAE,mBAAmB,KAAQ,cAAc,CAMrE,MAAM,SAAU,CAAA,kBAAkB,CAAA,CAAA,CAChC,MAAO,CAAA,cAAc,CAAC,kBAAkB,CAAA,CAAE,CAC5C,CAMA,MAAM,SAAU,CAAA,kBAAkB,CAAA,CAAA,CAChC,MAAO,CAAA,cAAc,CAAC,kBAAkB,CAAA,CAAE,CAC5C,CAEA,MAAM,SAAU,CAAA,kBAAkB,CAAC,UAAkB,CAAE,MAA0B,CAAA,CAE/E,GAAI,CAAC,MAAM,CAAE,CACX,KAAM,IAAI,CAAA,UAAU,CAClB,iBAAiB,CACjB,iDAAiD,UAAU,MAAM,MAAM,sEAAsE,UAAU,GAAG,CAC3J,CACF,CACD,GAAM,CAAA,KAAK,CAAG,iBAAiB,CAAC,MAAM,CAAC,CAEvC,mBAAmB,CAAC,UAAU,CAAE,KAAK,CAAC,CACxC","sourcesContent":["import { CodedError } from 'expo-modules-core';\n\nimport ExpoFontLoader from './ExpoFontLoader';\nimport { FontSource } from './Font.types';\nimport { getAssetForSource, loadSingleFontAsync } from './FontLoader';\n\n/**\n * @returns the server resources that should be statically extracted.\n * @private\n */\nexport function getServerResources(): string[] {\n  return ExpoFontLoader.getServerResources();\n}\n\n/**\n * @returns clear the server resources from the global scope.\n * @private\n */\nexport function resetServerContext() {\n  return ExpoFontLoader.resetServerContext();\n}\n\nexport function registerStaticFont(fontFamily: string, source?: FontSource | null) {\n  // MUST BE A SYNC FUNCTION!\n  if (!source) {\n    throw new CodedError(\n      `ERR_FONT_SOURCE`,\n      `Cannot load null or undefined font source: { \"${fontFamily}\": ${source} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${fontFamily}\"`\n    );\n  }\n  const asset = getAssetForSource(source);\n\n  loadSingleFontAsync(fontFamily, asset);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}