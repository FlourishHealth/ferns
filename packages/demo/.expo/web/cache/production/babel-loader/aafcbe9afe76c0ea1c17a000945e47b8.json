{"ast":null,"code":"'use strict';import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import{isChromeDebugger,isJest,isWeb,isWindowAvailable}from'../PlatformChecker';import{SensorType}from'../commonTypes';import{mockedRequestAnimationFrame}from'../mockedRequestAnimationFrame';var requestAnimationFrameImpl=isJest()||!globalThis.requestAnimationFrame?mockedRequestAnimationFrame:globalThis.requestAnimationFrame;var JSReanimated=function(){function JSReanimated(){var _this=this;_classCallCheck(this,JSReanimated);_defineProperty(this,\"nextSensorId\",0);_defineProperty(this,\"sensors\",new Map());_defineProperty(this,\"platform\",undefined);_defineProperty(this,\"getSensorCallback\",function(sensor,sensorType,eventHandler){switch(sensorType){case SensorType.ACCELEROMETER:case SensorType.GRAVITY:return function(){var x=sensor.x,y=sensor.y,z=sensor.z;if(_this.platform===Platform.WEB_ANDROID){var _ref2=[-x,-y,-z];x=_ref2[0];y=_ref2[1];z=_ref2[2];}eventHandler({x:x,y:y,z:z,interfaceOrientation:0});};case SensorType.GYROSCOPE:case SensorType.MAGNETIC_FIELD:return function(){var x=sensor.x,y=sensor.y,z=sensor.z;eventHandler({x:x,y:y,z:z,interfaceOrientation:0});};case SensorType.ROTATION:return function(){var _sensor$quaternion=_slicedToArray(sensor.quaternion,4),qw=_sensor$quaternion[0],qx=_sensor$quaternion[1],qy=_sensor$quaternion[2],qz=_sensor$quaternion[3];if(_this.platform===Platform.WEB_ANDROID){var _ref3=[qz,-qy];qy=_ref3[0];qz=_ref3[1];}var yaw=-Math.atan2(2.0*(qy*qz+qw*qx),qw*qw-qx*qx-qy*qy+qz*qz);var pitch=Math.sin(-2.0*(qx*qz-qw*qy));var roll=-Math.atan2(2.0*(qx*qy+qw*qz),qw*qw+qx*qx-qy*qy-qz*qz);eventHandler({qw:qw,qx:qx,qy:qy,qz:qz,yaw:yaw,pitch:pitch,roll:roll,interfaceOrientation:0});};}});}_createClass(JSReanimated,[{key:\"makeShareableClone\",value:function makeShareableClone(){throw new Error('[Reanimated] makeShareableClone should never be called in JSReanimated.');}},{key:\"scheduleOnUI\",value:function scheduleOnUI(worklet){requestAnimationFrameImpl(worklet);}},{key:\"createWorkletRuntime\",value:function createWorkletRuntime(_name,_initializer){throw new Error('[Reanimated] createWorkletRuntime is not available in JSReanimated.');}},{key:\"scheduleOnRuntime\",value:function scheduleOnRuntime(){throw new Error('[Reanimated] scheduleOnRuntime is not available in JSReanimated.');}},{key:\"registerEventHandler\",value:function registerEventHandler(_eventHandler,_eventName,_emitterReactTag){return-1;}},{key:\"unregisterEventHandler\",value:function unregisterEventHandler(_){}},{key:\"enableLayoutAnimations\",value:function enableLayoutAnimations(){if(isWeb()){console.warn('[Reanimated] Layout Animations are not supported on web yet.');}else if(isJest()){console.warn('[Reanimated] Layout Animations are no-ops when using Jest.');}else if(isChromeDebugger()){console.warn('[Reanimated] Layout Animations are no-ops when using Chrome Debugger.');}else{console.warn('[Reanimated] Layout Animations are not supported on this configuration.');}}},{key:\"configureLayoutAnimation\",value:function configureLayoutAnimation(){}},{key:\"setShouldAnimateExitingForTag\",value:function setShouldAnimateExitingForTag(){}},{key:\"registerSensor\",value:function registerSensor(sensorType,interval,_iosReferenceFrame,eventHandler){if(!isWindowAvailable()){return-1;}if(this.platform===undefined){this.detectPlatform();}if(!(this.getSensorName(sensorType)in window)){console.warn('[Reanimated] Sensor is not available.'+(isWeb()&&location.protocol!=='https:'?' Make sure you use secure origin with `npx expo start --web --https`.':'')+(this.platform===Platform.WEB_IOS?' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.':''));return-1;}if(this.platform===undefined){this.detectPlatform();}var sensor=this.initializeSensor(sensorType,interval);sensor.addEventListener('reading',this.getSensorCallback(sensor,sensorType,eventHandler));sensor.start();this.sensors.set(this.nextSensorId,sensor);return this.nextSensorId++;}},{key:\"unregisterSensor\",value:function unregisterSensor(id){var sensor=this.sensors.get(id);if(sensor!==undefined){sensor.stop();this.sensors.delete(id);}}},{key:\"subscribeForKeyboardEvents\",value:function subscribeForKeyboardEvents(_){if(isWeb()){console.warn('[Reanimated] useAnimatedKeyboard is not available on web yet.');}else if(isJest()){console.warn('[Reanimated] useAnimatedKeyboard is not available when using Jest.');}else if(isChromeDebugger()){console.warn('[Reanimated] useAnimatedKeyboard is not available when using Chrome Debugger.');}else{console.warn('[Reanimated] useAnimatedKeyboard is not available on this configuration.');}return-1;}},{key:\"unsubscribeFromKeyboardEvents\",value:function unsubscribeFromKeyboardEvents(_){}},{key:\"initializeSensor\",value:function initializeSensor(sensorType,interval){var config=interval<=0?{referenceFrame:'device'}:{frequency:1000/interval};switch(sensorType){case SensorType.ACCELEROMETER:return new window.Accelerometer(config);case SensorType.GYROSCOPE:return new window.Gyroscope(config);case SensorType.GRAVITY:return new window.GravitySensor(config);case SensorType.MAGNETIC_FIELD:return new window.Magnetometer(config);case SensorType.ROTATION:return new window.AbsoluteOrientationSensor(config);}}},{key:\"getSensorName\",value:function getSensorName(sensorType){switch(sensorType){case SensorType.ACCELEROMETER:return'Accelerometer';case SensorType.GRAVITY:return'GravitySensor';case SensorType.GYROSCOPE:return'Gyroscope';case SensorType.MAGNETIC_FIELD:return'Magnetometer';case SensorType.ROTATION:return'AbsoluteOrientationSensor';}}},{key:\"detectPlatform\",value:function detectPlatform(){var userAgent=navigator.userAgent||navigator.vendor||window.opera;if(userAgent===undefined){this.platform=Platform.UNKNOWN;}else if(/iPad|iPhone|iPod/.test(userAgent)){this.platform=Platform.WEB_IOS;}else if(/android/i.test(userAgent)){this.platform=Platform.WEB_ANDROID;}else{this.platform=Platform.WEB;}}},{key:\"makeSynchronizedDataHolder\",value:function makeSynchronizedDataHolder(_valueRef){throw new Error('[Reanimated] makeSynchronizedDataHolder is not available in JSReanimated.');}},{key:\"getDataSynchronously\",value:function getDataSynchronously(_ref){throw new Error('[Reanimated] getDataSynchronously is not available in JSReanimated.');}},{key:\"getViewProp\",value:function getViewProp(_viewTag,_propName,_callback){throw new Error('[Reanimated] getViewProp is not available in JSReanimated.');}},{key:\"configureProps\",value:function configureProps(){throw new Error('[Reanimated] configureProps is not available in JSReanimated.');}}]);return JSReanimated;}();export{JSReanimated as default};var Platform=function(Platform){Platform[\"WEB_IOS\"]=\"web iOS\";Platform[\"WEB_ANDROID\"]=\"web Android\";Platform[\"WEB\"]=\"web\";Platform[\"UNKNOWN\"]=\"unknown\";return Platform;}(Platform||{});","map":{"version":3,"sources":["JSReanimated.ts"],"names":["isChromeDebugger","isJest","isWeb","isWindowAvailable","SensorType","mockedRequestAnimationFrame","requestAnimationFrameImpl","globalThis","requestAnimationFrame","JSReanimated","constructor","_defineProperty","Map","undefined","makeShareableClone","Error","scheduleOnUI","worklet","createWorkletRuntime","_name","_initializer","scheduleOnRuntime","registerEventHandler","_eventHandler","_eventName","_emitterReactTag","unregisterEventHandler","_","enableLayoutAnimations","console","warn","configureLayoutAnimation","setShouldAnimateExitingForTag","registerSensor","sensorType","interval","_iosReferenceFrame","eventHandler","platform","detectPlatform","getSensorName","window","location","protocol","Platform","WEB_IOS","sensor","initializeSensor","addEventListener","getSensorCallback","start","sensors","set","nextSensorId","ACCELEROMETER","GRAVITY","x","y","z","WEB_ANDROID","interfaceOrientation","GYROSCOPE","MAGNETIC_FIELD","ROTATION","qw","qx","qy","qz","quaternion","yaw","Math","atan2","pitch","sin","roll","unregisterSensor","id","get","stop","delete","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","config","referenceFrame","frequency","Accelerometer","Gyroscope","GravitySensor","Magnetometer","AbsoluteOrientationSensor","userAgent","navigator","vendor","opera","UNKNOWN","test","WEB","makeSynchronizedDataHolder","_valueRef","getDataSynchronously","_ref","getViewProp","_viewTag","_propName","_callback","configureProps"],"mappings":"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","sourcesContent":["'use strict';\nimport {\n  isChromeDebugger,\n  isJest,\n  isWeb,\n  isWindowAvailable,\n} from '../PlatformChecker';\nimport type {\n  ShareableRef,\n  ShareableSyncDataHolderRef,\n  Value3D,\n  ValueRotation,\n} from '../commonTypes';\nimport { SensorType } from '../commonTypes';\nimport type { WebSensor } from './WebSensor';\nimport { mockedRequestAnimationFrame } from '../mockedRequestAnimationFrame';\nimport type { WorkletRuntime } from '../runtimes';\n\n// In Node.js environments (like when static rendering with Expo Router)\n// requestAnimationFrame is unavailable, so we use our mock.\n// It also has to be mocked for Jest purposes (see `initializeUIRuntime`).\nconst requestAnimationFrameImpl =\n  isJest() || !globalThis.requestAnimationFrame\n    ? mockedRequestAnimationFrame\n    : globalThis.requestAnimationFrame;\n\nexport default class JSReanimated {\n  nextSensorId = 0;\n  sensors = new Map<number, WebSensor>();\n  platform?: Platform = undefined;\n\n  makeShareableClone<T>(): ShareableRef<T> {\n    throw new Error(\n      '[Reanimated] makeShareableClone should never be called in JSReanimated.'\n    );\n  }\n\n  scheduleOnUI<T>(worklet: ShareableRef<T>) {\n    // @ts-ignore web implementation has still not been updated after the rewrite, this will be addressed once the web implementation updates are ready\n    requestAnimationFrameImpl(worklet);\n  }\n\n  createWorkletRuntime(\n    _name: string,\n    _initializer: ShareableRef<() => void>\n  ): WorkletRuntime {\n    throw new Error(\n      '[Reanimated] createWorkletRuntime is not available in JSReanimated.'\n    );\n  }\n\n  scheduleOnRuntime() {\n    throw new Error(\n      '[Reanimated] scheduleOnRuntime is not available in JSReanimated.'\n    );\n  }\n\n  registerEventHandler<T>(\n    _eventHandler: ShareableRef<T>,\n    _eventName: string,\n    _emitterReactTag: number\n  ): number {\n    // noop\n    return -1;\n  }\n\n  unregisterEventHandler(_: number): void {\n    // noop\n  }\n\n  enableLayoutAnimations() {\n    if (isWeb()) {\n      console.warn(\n        '[Reanimated] Layout Animations are not supported on web yet.'\n      );\n    } else if (isJest()) {\n      console.warn(\n        '[Reanimated] Layout Animations are no-ops when using Jest.'\n      );\n    } else if (isChromeDebugger()) {\n      console.warn(\n        '[Reanimated] Layout Animations are no-ops when using Chrome Debugger.'\n      );\n    } else {\n      console.warn(\n        '[Reanimated] Layout Animations are not supported on this configuration.'\n      );\n    }\n  }\n\n  configureLayoutAnimation() {\n    // no-op\n  }\n\n  setShouldAnimateExitingForTag() {\n    // no-op\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    interval: number,\n    _iosReferenceFrame: number,\n    eventHandler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    if (!isWindowAvailable()) {\n      // the window object is unavailable when building the server portion of a site that uses SSG\n      // this check is here to ensure that the server build won't fail\n      return -1;\n    }\n\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    if (!(this.getSensorName(sensorType) in window)) {\n      // https://w3c.github.io/sensors/#secure-context\n      console.warn(\n        '[Reanimated] Sensor is not available.' +\n          (isWeb() && location.protocol !== 'https:'\n            ? ' Make sure you use secure origin with `npx expo start --web --https`.'\n            : '') +\n          (this.platform === Platform.WEB_IOS\n            ? ' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.'\n            : '')\n      );\n      return -1;\n    }\n\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    const sensor: WebSensor = this.initializeSensor(sensorType, interval);\n    sensor.addEventListener(\n      'reading',\n      this.getSensorCallback(sensor, sensorType, eventHandler)\n    );\n    sensor.start();\n\n    this.sensors.set(this.nextSensorId, sensor);\n    return this.nextSensorId++;\n  }\n\n  getSensorCallback = (\n    sensor: WebSensor,\n    sensorType: SensorType,\n    eventHandler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ) => {\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n      case SensorType.GRAVITY:\n        return () => {\n          let { x, y, z } = sensor;\n\n          // Web Android sensors have a different coordinate system than iOS\n          if (this.platform === Platform.WEB_ANDROID) {\n            [x, y, z] = [-x, -y, -z];\n          }\n          // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n          (eventHandler as any)({ x, y, z, interfaceOrientation: 0 });\n        };\n      case SensorType.GYROSCOPE:\n      case SensorType.MAGNETIC_FIELD:\n        return () => {\n          const { x, y, z } = sensor;\n          // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n          (eventHandler as any)({ x, y, z, interfaceOrientation: 0 });\n        };\n      case SensorType.ROTATION:\n        return () => {\n          let [qw, qx, qy, qz] = sensor.quaternion;\n\n          // Android sensors have a different coordinate system than iOS\n          if (this.platform === Platform.WEB_ANDROID) {\n            [qy, qz] = [qz, -qy];\n          }\n\n          // reference: https://stackoverflow.com/questions/5782658/extracting-yaw-from-a-quaternion\n          const yaw = -Math.atan2(\n            2.0 * (qy * qz + qw * qx),\n            qw * qw - qx * qx - qy * qy + qz * qz\n          );\n          const pitch = Math.sin(-2.0 * (qx * qz - qw * qy));\n          const roll = -Math.atan2(\n            2.0 * (qx * qy + qw * qz),\n            qw * qw + qx * qx - qy * qy - qz * qz\n          );\n          // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n          (eventHandler as any)({\n            qw,\n            qx,\n            qy,\n            qz,\n            yaw,\n            pitch,\n            roll,\n            interfaceOrientation: 0,\n          });\n        };\n    }\n  };\n\n  unregisterSensor(id: number): void {\n    const sensor: WebSensor | undefined = this.sensors.get(id);\n    if (sensor !== undefined) {\n      sensor.stop();\n      this.sensors.delete(id);\n    }\n  }\n\n  subscribeForKeyboardEvents(_: ShareableRef<number>): number {\n    if (isWeb()) {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available on web yet.'\n      );\n    } else if (isJest()) {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available when using Jest.'\n      );\n    } else if (isChromeDebugger()) {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available when using Chrome Debugger.'\n      );\n    } else {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available on this configuration.'\n      );\n    }\n    return -1;\n  }\n\n  unsubscribeFromKeyboardEvents(_: number): void {\n    // noop\n  }\n\n  initializeSensor(sensorType: SensorType, interval: number): WebSensor {\n    const config =\n      interval <= 0\n        ? { referenceFrame: 'device' }\n        : { frequency: 1000 / interval };\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return new window.Accelerometer(config);\n      case SensorType.GYROSCOPE:\n        return new window.Gyroscope(config);\n      case SensorType.GRAVITY:\n        return new window.GravitySensor(config);\n      case SensorType.MAGNETIC_FIELD:\n        return new window.Magnetometer(config);\n      case SensorType.ROTATION:\n        return new window.AbsoluteOrientationSensor(config);\n    }\n  }\n\n  getSensorName(sensorType: SensorType): string {\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return 'Accelerometer';\n      case SensorType.GRAVITY:\n        return 'GravitySensor';\n      case SensorType.GYROSCOPE:\n        return 'Gyroscope';\n      case SensorType.MAGNETIC_FIELD:\n        return 'Magnetometer';\n      case SensorType.ROTATION:\n        return 'AbsoluteOrientationSensor';\n    }\n  }\n\n  detectPlatform() {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (userAgent === undefined) {\n      this.platform = Platform.UNKNOWN;\n    } else if (/iPad|iPhone|iPod/.test(userAgent)) {\n      this.platform = Platform.WEB_IOS;\n    } else if (/android/i.test(userAgent)) {\n      this.platform = Platform.WEB_ANDROID;\n    } else {\n      this.platform = Platform.WEB;\n    }\n  }\n\n  makeSynchronizedDataHolder<T>(\n    _valueRef: ShareableRef<T>\n  ): ShareableSyncDataHolderRef<T> {\n    throw new Error(\n      '[Reanimated] makeSynchronizedDataHolder is not available in JSReanimated.'\n    );\n  }\n\n  getDataSynchronously<T>(_ref: ShareableSyncDataHolderRef<T>): T {\n    throw new Error(\n      '[Reanimated] getDataSynchronously is not available in JSReanimated.'\n    );\n  }\n\n  getViewProp<T>(\n    _viewTag: number,\n    _propName: string,\n    _callback?: (result: T) => void\n  ): Promise<T> {\n    throw new Error(\n      '[Reanimated] getViewProp is not available in JSReanimated.'\n    );\n  }\n\n  configureProps() {\n    throw new Error(\n      '[Reanimated] configureProps is not available in JSReanimated.'\n    );\n  }\n}\n\nenum Platform {\n  WEB_IOS = 'web iOS',\n  WEB_ANDROID = 'web Android',\n  WEB = 'web',\n  UNKNOWN = 'unknown',\n}\n\ndeclare global {\n  interface Navigator {\n    userAgent?: string;\n    vendor?: string;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}