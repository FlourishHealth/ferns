{"ast":null,"code":"'use strict';import{measure}from'./measure';var _worklet_2279946236359_init_data={code:\"function getRelativeCoords(animatedRef,absoluteX,absoluteY){const{measure}=this.__closure;const parentCoords=measure(animatedRef);if(parentCoords===null){return null;}return{x:absoluteX-parentCoords.x,y:absoluteY-parentCoords.y};}\"};export var getRelativeCoords=function(){var getRelativeCoords=function getRelativeCoords(animatedRef,absoluteX,absoluteY){var parentCoords=measure(animatedRef);if(parentCoords===null){return null;}return{x:absoluteX-parentCoords.x,y:absoluteY-parentCoords.y};};getRelativeCoords.__closure={measure:measure};getRelativeCoords.__workletHash=2279946236359;getRelativeCoords.__initData=_worklet_2279946236359_init_data;return getRelativeCoords;}();","map":{"version":3,"names":["measure","_worklet_2279946236359_init_data","code","getRelativeCoords","animatedRef","absoluteX","absoluteY","parentCoords","x","y","__closure","__workletHash","__initData"],"sources":["/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/platformFunctions/getRelativeCoords.ts"],"sourcesContent":["'use strict';\nimport type { Component } from 'react';\nimport { measure } from './measure';\nimport type { AnimatedRef } from '../hook/commonTypes';\n\n/**\n * An object which contains relative coordinates.\n */\nexport interface ComponentCoords {\n  x: number;\n  y: number;\n}\n\n/**\n * Lets you determines the location on the screen, relative to the given view.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns) connected to the component you'd want to get the coordinates from.\n * @param absoluteX - A number which is an absolute x coordinate.\n * @param absoluteY - A number which is an absolute y coordinate.\n * @returns An object which contains relative coordinates - {@link ComponentCoords}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/getRelativeCoords\n */\nexport function getRelativeCoords(\n  animatedRef: AnimatedRef<Component>,\n  absoluteX: number,\n  absoluteY: number\n): ComponentCoords | null {\n  'worklet';\n  const parentCoords = measure(animatedRef);\n  if (parentCoords === null) {\n    return null;\n  }\n  return {\n    x: absoluteX - parentCoords.x,\n    y: absoluteY - parentCoords.y,\n  };\n}\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,OAAO,KAAQ,WAAW,KAAAC,gCAAA,EAAAC,IAAA,2OAoBnC,UAAgB,CAAAC,iBAAiB,CAA1B,eAAAA,iBAAA,UAAAA,kBACLC,WAAmC,CACnCC,SAAiB,CACjBC,SAAiB,CACO,CAExB,GAAM,CAAAC,YAAY,CAAGP,OAAO,CAACI,WAAW,CAAC,CACzC,GAAIG,YAAY,GAAK,IAAI,CAAE,CACzB,MAAO,KAAI,CACb,CACA,MAAO,CACLC,CAAC,CAAEH,SAAS,CAAGE,YAAY,CAACC,CAAC,CAC7BC,CAAC,CAAEH,SAAS,CAAGC,YAAY,CAACE,CAC9B,CAAC,CACH,EAAAN,iBAAA,CAAAO,SAAA,EAAAV,OAAA,CARuBA,OAAO,EAAAG,iBAAA,CAAAQ,aAAA,eAAAR,iBAAA,CAAAS,UAAA,CAAAX,gCAAA,QAAAE,iBAAA,EANvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}