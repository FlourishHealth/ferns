{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"progress\",\"onPress\",\"style\",\"accessibilityLabel\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from'react-native-reanimated';var interpolateDeprecated=Animated.interpolate,interpolateNode=Animated.interpolateNode,cond=Animated.cond,greaterThan=Animated.greaterThan;var interpolate=interpolateNode!=null?interpolateNode:interpolateDeprecated;var PROGRESS_EPSILON=0.05;export var Overlay=React.forwardRef(function Overlay(_ref,ref){var progress=_ref.progress,onPress=_ref.onPress,style=_ref.style,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?'Close drawer':_ref$accessibilityLab,props=_objectWithoutProperties(_ref,_excluded);var animatedStyle={opacity:interpolate(progress,{inputRange:\"web\"==='windows'||\"web\"==='macos'?[0,1]:[PROGRESS_EPSILON,1],outputRange:[0,1]}),zIndex:cond(greaterThan(progress,PROGRESS_EPSILON),0,-1)};return React.createElement(Animated.View,_extends({},props,{ref:ref,style:[styles.overlay,overlayStyle,animatedStyle,style]}),React.createElement(Pressable,{onPress:onPress,style:styles.pressable,accessibilityRole:\"button\",accessibilityLabel:accessibilityLabel}));});var overlayStyle={WebkitTapHighlightColor:'transparent'};var styles=StyleSheet.create({overlay:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{backgroundColor:'rgba(0, 0, 0, 0.5)'}),pressable:{flex:1}});","map":{"version":3,"sources":["views/legacy/Overlay.tsx"],"names":["React","Animated","interpolate","interpolateDeprecated","interpolateNode","cond","greaterThan","PROGRESS_EPSILON","Overlay","forwardRef","progress","onPress","style","accessibilityLabel","props","ref","animatedStyle","opacity","inputRange","Platform","outputRange","zIndex","styles","overlay","overlayStyle","pressable","WebkitTapHighlightColor","StyleSheet","create","absoluteFillObject","backgroundColor","flex"],"mappings":"inCAAA,MAAO,GAAKA,CAAAA,KAAK,KAAM,OAAO,CAAA,OAAA,QAAA,qDAAA,SAAA,sDAAA,UAAA,gDAE9B,MAAOC,CAAAA,QAAQ,KAAM,yBAAyB,CAE9C,GAEeE,CAAAA,qBAAqB,CAIhCF,QAAQ,CAJVC,WAAW,CACXE,eAAe,CAGbH,QAAQ,CAHVG,eAAe,CACfC,IAAI,CAEFJ,QAAQ,CAFVI,IAAI,CACJC,WAAAA,CACEL,QAAQ,CADVK,WAAAA,CAGF,GAAMJ,CAAAA,WAAmC,CACvCE,eAAe,OAAfA,eAAe,CAAID,qBAAqB,CAE1C,GAAMI,CAAAA,gBAAgB,CAAG,IAAI,CAQ7B,MAAO,IAAMC,CAAAA,OAAO,CAAGR,KAAK,CAACS,UAAU,CAAC,QAASD,CAAAA,OAAO,CAAA,IAAA,CAQtDO,GAA6B,CAC7B,CARA,GACEL,CAAAA,QAAQ,CAKF,IAAA,CALNA,QAAQ,CACRC,OAAO,CAID,IAAA,CAJNA,OAAO,CACPC,KAAK,CAGC,IAAA,CAHNA,KAAK,CAAA,qBAAA,CAGC,IAAA,CAFNC,kBAAkB,CAAlBA,kBAAkB,CAAA,qBAAA,UAAG,cAAc,CAAA,qBAAA,CAChCC,KAAAA,CAAAA,wBAAAA,CACG,IAAA,CAAA,SAAA,EAGR,GAAME,CAAAA,aAAa,CAAG,CACpBC,OAAO,CAAEf,WAAW,CAACQ,QAAQ,CAAE,CAK7BQ,UAAU,CACRC,QAAgB,SAAS,EAAIA,QAAgB,OAAO,CAChD,CAAC,CAAC,CAAE,CAAC,CAAC,CACN,CAACZ,gBAAgB,CAAE,CAAC,CAAC,CAC3Ba,WAAW,CAAE,CAAC,CAAC,CAAE,CAAC,CACpB,CAAC,CAAC,CAIFC,MAAM,CAAEhB,IAAI,CAACC,WAAW,CAACI,QAAQ,CAAEH,gBAAgB,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC7D,CAAC,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,CAAA,QAAA,CAAA,CAAA,CAAA,CACRO,KAAK,CAAA,CACT,GAAG,CAAEC,GAAI,CACT,KAAK,CAAE,CAACO,MAAM,CAACC,OAAO,CAAEC,YAAY,CAAER,aAAa,CAAEJ,KAAK,CAAE,CAAA,CAAA,CAE5D,KAAA,CAAA,aAAA,CAAC,SAAS,CAAA,CACR,OAAO,CAAED,OAAQ,CACjB,KAAK,CAAEW,MAAM,CAACG,SAAU,CACxB,iBAAiB,CAAC,QAAQ,CAC1B,kBAAkB,CAAEZ,kBAAmB,CAAA,CACvC,CACY,CAEpB,CAAC,CAAC,CAEF,GAAMW,CAAAA,YAAY,CACX,CAGHE,uBAAuB,CAAE,aAC3B,CAEA,CAEF,GAAMJ,CAAAA,MAAM,CAAGK,UAAU,CAACC,MAAM,CAAC,CAC/BL,OAAO,CAAA,aAAA,CAAA,aAAA,IACFI,UAAU,CAACE,kBAAkB,MAChCC,eAAe,CAAE,oBAAA,EAClB,CACDL,SAAS,CAAE,CACTM,IAAI,CAAE,CACR,CACF,CAAC,CAAC","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\nconst {\n  // @ts-expect-error: this is to support reanimated 1\n  interpolate: interpolateDeprecated,\n  interpolateNode,\n  cond,\n  greaterThan\n} = Animated;\nconst interpolate = interpolateNode ?? interpolateDeprecated;\nconst PROGRESS_EPSILON = 0.05;\nexport const Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {\n  let {\n    progress,\n    onPress,\n    style,\n    accessibilityLabel = 'Close drawer',\n    ...props\n  } = _ref;\n  const animatedStyle = {\n    opacity: interpolate(progress, {\n      // Default input range is [PROGRESS_EPSILON, 1]\n      // On Windows, the output value is 1 when input value is out of range for some reason\n      // The default value 0 will be interpolated to 1 in this case, which is not what we want.\n      // Therefore changing input range on Windows to [0,1] instead.\n      inputRange: Platform.OS === 'windows' || Platform.OS === 'macos' ? [0, 1] : [PROGRESS_EPSILON, 1],\n      outputRange: [0, 1]\n    }),\n    // We don't want the user to be able to press through the overlay when drawer is open\n    // One approach is to adjust the pointerEvents based on the progress\n    // But we can also send the overlay behind the screen, which works, and is much less code\n    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1)\n  };\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style]\n  }), /*#__PURE__*/React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nconst overlayStyle = Platform.select({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  pressable: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}