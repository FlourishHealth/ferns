{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import{State}from'../../State';import{BaseButton}from'../GestureButtons';export var TOUCHABLE_STATE={UNDETERMINED:0,BEGAN:1,MOVED_OUTSIDE:2};var GenericTouchable=function(_Component){_inherits(GenericTouchable,_Component);var _super=_createSuper(GenericTouchable);function GenericTouchable(){var _this;_classCallCheck(this,GenericTouchable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"pressInTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"pressOutTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"longPressTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"longPressDetected\",false);_defineProperty(_assertThisInitialized(_this),\"pointerInside\",true);_defineProperty(_assertThisInitialized(_this),\"STATE\",TOUCHABLE_STATE.UNDETERMINED);_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",function(_ref2){var pointerInside=_ref2.nativeEvent.pointerInside;if(_this.pointerInside!==pointerInside){if(pointerInside){_this.onMoveIn();}else{_this.onMoveOut();}}_this.pointerInside=pointerInside;});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(_ref3){var nativeEvent=_ref3.nativeEvent;var state=nativeEvent.state;if(state===State.CANCELLED||state===State.FAILED){_this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}else if(state===(\"web\"!=='android'?State.ACTIVE:State.BEGAN)&&_this.STATE===TOUCHABLE_STATE.UNDETERMINED){_this.handlePressIn();}else if(state===State.END){var shouldCallOnPress=!_this.longPressDetected&&_this.STATE!==TOUCHABLE_STATE.MOVED_OUTSIDE&&_this.pressOutTimeout===null;_this.handleGoToUndetermined();if(shouldCallOnPress){var _this$props$onPress,_this$props;(_this$props$onPress=(_this$props=_this.props).onPress)===null||_this$props$onPress===void 0?void 0:_this$props$onPress.call(_this$props);}}});_defineProperty(_assertThisInitialized(_this),\"onLongPressDetected\",function(){var _this$props$onLongPre,_this$props2;_this.longPressDetected=true;(_this$props$onLongPre=(_this$props2=_this.props).onLongPress)===null||_this$props$onLongPre===void 0?void 0:_this$props$onLongPre.call(_this$props2);});return _this;}_createClass(GenericTouchable,[{key:\"handlePressIn\",value:function handlePressIn(){var _this2=this;if(this.props.delayPressIn){this.pressInTimeout=setTimeout(function(){_this2.moveToState(TOUCHABLE_STATE.BEGAN);_this2.pressInTimeout=null;},this.props.delayPressIn);}else{this.moveToState(TOUCHABLE_STATE.BEGAN);}if(this.props.onLongPress){var time=(this.props.delayPressIn||0)+(this.props.delayLongPress||0);this.longPressTimeout=setTimeout(this.onLongPressDetected,time);}}},{key:\"handleMoveOutside\",value:function handleMoveOutside(){var _this3=this;if(this.props.delayPressOut){this.pressOutTimeout=this.pressOutTimeout||setTimeout(function(){_this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);_this3.pressOutTimeout=null;},this.props.delayPressOut);}else{this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);}}},{key:\"handleGoToUndetermined\",value:function handleGoToUndetermined(){var _this4=this;clearTimeout(this.pressOutTimeout);if(this.props.delayPressOut){this.pressOutTimeout=setTimeout(function(){if(_this4.STATE===TOUCHABLE_STATE.UNDETERMINED){_this4.moveToState(TOUCHABLE_STATE.BEGAN);}_this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);_this4.pressOutTimeout=null;},this.props.delayPressOut);}else{if(this.STATE===TOUCHABLE_STATE.UNDETERMINED){this.moveToState(TOUCHABLE_STATE.BEGAN);}this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}}},{key:\"componentDidMount\",value:function componentDidMount(){this.reset();}},{key:\"reset\",value:function reset(){this.longPressDetected=false;this.pointerInside=true;clearTimeout(this.pressInTimeout);clearTimeout(this.pressOutTimeout);clearTimeout(this.longPressTimeout);this.pressOutTimeout=null;this.longPressTimeout=null;this.pressInTimeout=null;}},{key:\"moveToState\",value:function moveToState(newState){var _this$props$onStateCh,_this$props6;if(newState===this.STATE){return;}if(newState===TOUCHABLE_STATE.BEGAN){var _this$props$onPressIn,_this$props3;(_this$props$onPressIn=(_this$props3=this.props).onPressIn)===null||_this$props$onPressIn===void 0?void 0:_this$props$onPressIn.call(_this$props3);}else if(newState===TOUCHABLE_STATE.MOVED_OUTSIDE){var _this$props$onPressOu,_this$props4;(_this$props$onPressOu=(_this$props4=this.props).onPressOut)===null||_this$props$onPressOu===void 0?void 0:_this$props$onPressOu.call(_this$props4);}else if(newState===TOUCHABLE_STATE.UNDETERMINED){this.reset();if(this.STATE===TOUCHABLE_STATE.BEGAN){var _this$props$onPressOu2,_this$props5;(_this$props$onPressOu2=(_this$props5=this.props).onPressOut)===null||_this$props$onPressOu2===void 0?void 0:_this$props$onPressOu2.call(_this$props5);}}(_this$props$onStateCh=(_this$props6=this.props).onStateChange)===null||_this$props$onStateCh===void 0?void 0:_this$props$onStateCh.call(_this$props6,this.STATE,newState);this.STATE=newState;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.reset();}},{key:\"onMoveIn\",value:function onMoveIn(){if(this.STATE===TOUCHABLE_STATE.MOVED_OUTSIDE){this.moveToState(TOUCHABLE_STATE.BEGAN);}}},{key:\"onMoveOut\",value:function onMoveOut(){clearTimeout(this.longPressTimeout);this.longPressTimeout=null;if(this.STATE===TOUCHABLE_STATE.BEGAN){this.handleMoveOutside();}}},{key:\"render\",value:function render(){var _ref,_this$props$touchSoun;var hitSlop=(_ref=typeof this.props.hitSlop==='number'?{top:this.props.hitSlop,left:this.props.hitSlop,bottom:this.props.hitSlop,right:this.props.hitSlop}:this.props.hitSlop)!==null&&_ref!==void 0?_ref:undefined;var coreProps={accessible:this.props.accessible!==false,accessibilityLabel:this.props.accessibilityLabel,accessibilityHint:this.props.accessibilityHint,accessibilityRole:this.props.accessibilityRole,accessibilityState:this.props.accessibilityState,accessibilityActions:this.props.accessibilityActions,onAccessibilityAction:this.props.onAccessibilityAction,nativeID:this.props.nativeID,onLayout:this.props.onLayout};return React.createElement(BaseButton,_extends({style:this.props.containerStyle,onHandlerStateChange:this.props.disabled?undefined:this.onHandlerStateChange,onGestureEvent:this.onGestureEvent,hitSlop:hitSlop,shouldActivateOnStart:this.props.shouldActivateOnStart,disallowInterruption:this.props.disallowInterruption,testID:this.props.testID,touchSoundDisabled:(_this$props$touchSoun=this.props.touchSoundDisabled)!==null&&_this$props$touchSoun!==void 0?_this$props$touchSoun:false,enabled:!this.props.disabled},this.props.extraButtonProps),React.createElement(Animated.View,_extends({},coreProps,{style:this.props.style}),this.props.children));}}]);return GenericTouchable;}(Component);export{GenericTouchable as default};_defineProperty(GenericTouchable,\"defaultProps\",{delayLongPress:600,extraButtonProps:{rippleColor:'transparent',exclusive:true}});","map":{"version":3,"sources":["GenericTouchable.tsx"],"names":["React","Component","State","BaseButton","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","delayLongPress","extraButtonProps","rippleColor","exclusive","handlePressIn","props","delayPressIn","pressInTimeout","setTimeout","moveToState","onLongPress","time","longPressTimeout","onLongPressDetected","handleMoveOutside","delayPressOut","pressOutTimeout","handleGoToUndetermined","clearTimeout","STATE","componentDidMount","reset","longPressDetected","pointerInside","newState","onPressIn","onPressOut","onStateChange","nativeEvent","onMoveIn","onMoveOut","state","CANCELLED","FAILED","Platform","ACTIVE","END","shouldCallOnPress","onPress","componentWillUnmount","render","hitSlop","top","left","bottom","right","undefined","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","nativeID","onLayout","containerStyle","disabled","onHandlerStateChange","onGestureEvent","shouldActivateOnStart","disallowInterruption","testID","touchSoundDisabled","style","children"],"mappings":"miDAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAAA,OAAA,QAAA,qDAAA,QAAA,8CAUA,OAASC,KAAT,KAAsB,aAAtB,CACA,OAASC,UAAT,KAA2B,mBAA3B,CAgBA,MAAO,IAAMC,CAAAA,eAAe,CAAG,CAC7BC,YAAY,CAAE,CADe,CAE7BC,KAAK,CAAE,CAFsB,CAG7BC,aAAa,CAAE,CAHc,CAAxB,CAAA,GAyCcC,CAAAA,gBAAN,UAAA,UAAA,EAAA,SAAA,CAAA,gBAAA,CAAA,UAAA,MAAA,MAAA,CAAA,YAAA,CAAA,gBAAA,EAEb,SAAA,iBAAA,CAAA,KAAA,KAAA,CAAA,eAAA,MAAA,gBAAA,UAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,KAAA,KAAA,CAAA,IAAA,EAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,QAAA,MAAA,CAAA,IAAA,GAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,gBAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,kBAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,mBAAA,CAeoB,KAfpB,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,eAAA,CAiBgB,IAjBhB,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,OAAA,CAoBwBJ,eAAe,CAACC,YApBxC,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,gBAAA,CAkHiB,SAAA,KAAA,CAEoC,IADpC2B,CAAAA,aAAAA,CAAAA,KAAAA,CAAfK,WAAW,CAAIL,aAAAA,CAEf,GAAI,KAAA,CAAKA,aAAL,GAAuBA,aAA3B,CAA0C,CACxC,GAAIA,aAAJ,CAAmB,CACjB,KAAA,CAAKM,QAAL,CAAA,CAAA,CACD,CAFD,IAEO,CACL,KAAA,CAAKC,SAAL,CAAA,CAAA,CACD,CACF,CACD,KAAA,CAAKP,aAAL,CAAqBA,aAArB,CACD,CA7HD,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,sBAAA,CA+HuB,SAAA,KAAA,CAEyC,IAD9DK,CAAAA,WAAAA,CAAAA,KAAAA,CAAAA,WAAAA,CAEA,GAAQG,CAAAA,KAAAA,CAAUH,WAAlB,CAAQG,KAAAA,CACR,GAAIA,KAAK,GAAKtC,KAAK,CAACuC,SAAhBD,EAA6BA,KAAK,GAAKtC,KAAK,CAACwC,MAAjD,CAAyD,CAEvD,KAAA,CAAKxB,WAAL,CAAiBd,eAAe,CAACC,YAAjC,CAAA,CACD,CAHD,IAGO,IAILmC,KAAK,IAAMG,QAAgB,SAAhBA,CAA4BzC,KAAK,CAAC0C,MAAlCD,CAA2CzC,KAAK,CAACI,KAAvD,CAALkC,EACA,KAAA,CAAKZ,KAAL,GAAexB,eAAe,CAACC,YAL1B,CAML,CAEA,KAAA,CAAKQ,aAAL,CAAA,CAAA,CACD,CATM,IASA,IAAI2B,KAAK,GAAKtC,KAAK,CAAC2C,GAApB,CAAyB,CAC9B,GAAMC,CAAAA,iBAAiB,CACrB,CAAC,KAAA,CAAKf,iBAAN,EACA,KAAA,CAAKH,KAAL,GAAexB,eAAe,CAACG,aAD/B,EAEA,KAAA,CAAKkB,eAAL,GAAyB,IAH3B,CAIA,KAAA,CAAKC,sBAAL,CAAA,CAAA,CACA,GAAIoB,iBAAJ,CAAuB,CAAA,GAAA,CAAA,mBAAA,CAAA,WAAA,CAErB,CAAA,mBAAA,CAAA,CAAA,WAAA,CAAA,KAAA,CAAKhC,KAAL,EAAWiC,OAAX,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CACD,CACF,CACF,CA1JD,CAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,EAAA,qBAAA,CA4JsB,UAAM,CAAA,GAAA,CAAA,qBAAA,CAAA,YAAA,CAC1B,KAAA,CAAKhB,iBAAL,CAAyB,IADC,CAG1B,CAAA,qBAAA,CAAA,CAAA,YAAA,CAAA,KAAA,CAAKjB,KAAL,EAAWK,WAAX,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACD,CAhKD,CAAA,CAAA,OAAA,KAAA,CAAA,CAAA,YAAA,CAAA,gBAAA,GAAA,GAAA,iBAAA,KAAA,CAwBAN,SAAAA,cAAAA,CAAgB,KAAA,MAAA,MACd,GAAI,IAAA,CAAKC,KAAL,CAAWC,YAAf,CAA6B,CAC3B,IAAA,CAAKC,cAAL,CAAsBC,UAAU,CAAC,UAAM,CACrC,MAAA,CAAKC,WAAL,CAAiBd,eAAe,CAACE,KAAjC,CAAA,CACA,MAAA,CAAKU,cAAL,CAAsB,IAAtB,CACD,CAH+B,CAG7B,IAAA,CAAKF,KAAL,CAAWC,YAHkB,CAAhC,CAID,CALD,IAKO,CACL,IAAA,CAAKG,WAAL,CAAiBd,eAAe,CAACE,KAAjC,CAAA,CACD,CACD,GAAI,IAAA,CAAKQ,KAAL,CAAWK,WAAf,CAA4B,CAC1B,GAAMC,CAAAA,IAAI,CACR,CAAC,IAAA,CAAKN,KAAL,CAAWC,YAAX,EAA2B,CAA5B,GAAkC,IAAA,CAAKD,KAAL,CAAWL,cAAX,EAA6B,CAA/D,CADF,CAEA,IAAA,CAAKY,gBAAL,CAAwBJ,UAAU,CAAC,IAAA,CAAKK,mBAAN,CAA2BF,IAA3B,CAAlC,CACD,CACF,CAtCD,GAAA,GAAA,qBAAA,KAAA,CAyCAG,SAAAA,kBAAAA,CAAoB,KAAA,MAAA,MAClB,GAAI,IAAA,CAAKT,KAAL,CAAWU,aAAf,CAA8B,CAC5B,IAAA,CAAKC,eAAL,CACE,IAAA,CAAKA,eAAL,EACAR,UAAU,CAAC,UAAM,CACf,MAAA,CAAKC,WAAL,CAAiBd,eAAe,CAACG,aAAjC,CAAA,CACA,MAAA,CAAKkB,eAAL,CAAuB,IAAvB,CACD,CAHS,CAGP,IAAA,CAAKX,KAAL,CAAWU,aAHJ,CAFZ,CAMD,CAPD,IAOO,CACL,IAAA,CAAKN,WAAL,CAAiBd,eAAe,CAACG,aAAjC,CAAA,CACD,CACF,CApDD,GAAA,GAAA,0BAAA,KAAA,CAuDAmB,SAAAA,uBAAAA,CAAyB,KAAA,MAAA,MACvBC,YAAY,CAAC,IAAA,CAAKF,eAAN,CADW,CAEvB,GAAI,IAAA,CAAKX,KAAL,CAAWU,aAAf,CAA8B,CAC5B,IAAA,CAAKC,eAAL,CAAuBR,UAAU,CAAC,UAAM,CACtC,GAAI,MAAA,CAAKW,KAAL,GAAexB,eAAe,CAACC,YAAnC,CAAiD,CAC/C,MAAA,CAAKa,WAAL,CAAiBd,eAAe,CAACE,KAAjC,CAAA,CACD,CACD,MAAA,CAAKY,WAAL,CAAiBd,eAAe,CAACC,YAAjC,CAAA,CACA,MAAA,CAAKoB,eAAL,CAAuB,IAAvB,CACD,CANgC,CAM9B,IAAA,CAAKX,KAAL,CAAWU,aANmB,CAAjC,CAOD,CARD,IAQO,CACL,GAAI,IAAA,CAAKI,KAAL,GAAexB,eAAe,CAACC,YAAnC,CAAiD,CAC/C,IAAA,CAAKa,WAAL,CAAiBd,eAAe,CAACE,KAAjC,CAAA,CACD,CACD,IAAA,CAAKY,WAAL,CAAiBd,eAAe,CAACC,YAAjC,CAAA,CACD,CACF,CAAA,GAAA,GAAA,qBAAA,KAAA,CAEDwB,SAAAA,kBAAAA,CAAoB,CAClB,IAAA,CAAKC,KAAL,CAAA,CAAA,CACD,CA3ED,GAAA,GAAA,SAAA,KAAA,CA6EAA,SAAAA,MAAAA,CAAQ,CACN,IAAA,CAAKC,iBAAL,CAAyB,KAAzB,CACA,IAAA,CAAKC,aAAL,CAAqB,IAArB,CACAL,YAAY,CAAC,IAAA,CAAKX,cAAN,CAAZW,CACAA,YAAY,CAAC,IAAA,CAAKF,eAAN,CAAZE,CACAA,YAAY,CAAC,IAAA,CAAKN,gBAAN,CAAZM,CACA,IAAA,CAAKF,eAAL,CAAuB,IAAvB,CACA,IAAA,CAAKJ,gBAAL,CAAwB,IAAxB,CACA,IAAA,CAAKL,cAAL,CAAsB,IAAtB,CACD,CAtFD,GAAA,GAAA,eAAA,KAAA,CAyFAE,SAAAA,YAAYe,QAAD,CAA2B,CAAA,GAAA,CAAA,qBAAA,CAAA,YAAA,CACpC,GAAIA,QAAQ,GAAK,IAAA,CAAKL,KAAtB,CAA6B,CAE3B,OACD,CACD,GAAIK,QAAQ,GAAK7B,eAAe,CAACE,KAAjC,CAAwC,CAAA,GAAA,CAAA,qBAAA,CAAA,YAAA,CAEtC,CAAA,qBAAA,CAAA,CAAA,YAAA,CAAA,IAAA,CAAKQ,KAAL,EAAWoB,SAAX,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACD,CAHD,IAGO,IAAID,QAAQ,GAAK7B,eAAe,CAACG,aAAjC,CAAgD,CAAA,GAAA,CAAA,qBAAA,CAAA,YAAA,CAErD,CAAA,qBAAA,CAAA,CAAA,YAAA,CAAA,IAAA,CAAKO,KAAL,EAAWqB,UAAX,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACD,CAHM,IAGA,IAAIF,QAAQ,GAAK7B,eAAe,CAACC,YAAjC,CAA+C,CAEpD,IAAA,CAAKyB,KAAL,CAAA,CAAA,CACA,GAAI,IAAA,CAAKF,KAAL,GAAexB,eAAe,CAACE,KAAnC,CAA0C,CAAA,GAAA,CAAA,sBAAA,CAAA,YAAA,CAExC,CAAA,sBAAA,CAAA,CAAA,YAAA,CAAA,IAAA,CAAKQ,KAAL,EAAWqB,UAAX,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,sBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACD,CAjBiC,CAoBpC,CAAA,qBAAA,CAAA,CAAA,YAAA,CAAA,IAAA,CAAKrB,KAAL,EAAWsB,aAAX,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,YAAA,CAA2B,IAAA,CAAKR,KAAhC,CAAuCK,QAAvC,CApBoC,CAsBpC,IAAA,CAAKL,KAAL,CAAaK,QAAb,CACD,CAAA,GAAA,GAAA,wBAAA,KAAA,CAkDDe,SAAAA,qBAAAA,CAAuB,CAErB,IAAA,CAAKlB,KAAL,CAAA,CAAA,CACD,CAAA,GAAA,GAAA,YAAA,KAAA,CAEDQ,SAAAA,SAAAA,CAAW,CACT,GAAI,IAAA,CAAKV,KAAL,GAAexB,eAAe,CAACG,aAAnC,CAAkD,CAEhD,IAAA,CAAKW,WAAL,CAAiBd,eAAe,CAACE,KAAjC,CAAA,CACD,CACF,CAAA,GAAA,GAAA,aAAA,KAAA,CAEDiC,SAAAA,UAAAA,CAAY,CAEVZ,YAAY,CAAC,IAAA,CAAKN,gBAAN,CAAZM,CACA,IAAA,CAAKN,gBAAL,CAAwB,IAAxB,CACA,GAAI,IAAA,CAAKO,KAAL,GAAexB,eAAe,CAACE,KAAnC,CAA0C,CACxC,IAAA,CAAKiB,iBAAL,CAAA,CAAA,CACD,CACF,CAAA,GAAA,GAAA,UAAA,KAAA,CAED0B,SAAAA,OAAAA,CAAS,CAAA,GAAA,CAAA,IAAA,CAAA,qBAAA,CACP,GAAMC,CAAAA,OAAO,CAAA,CAAA,IAAA,CACV,MAAO,KAAA,CAAKpC,KAAL,CAAWoC,OAAlB,GAA8B,QAA9B,CACG,CACEC,GAAG,CAAE,IAAA,CAAKrC,KAAL,CAAWoC,OADlB,CAEEE,IAAI,CAAE,IAAA,CAAKtC,KAAL,CAAWoC,OAFnB,CAGEG,MAAM,CAAE,IAAA,CAAKvC,KAAL,CAAWoC,OAHrB,CAIEI,KAAK,CAAE,IAAA,CAAKxC,KAAL,CAAWoC,OAJpB,CADH,CAOG,IAAA,CAAKpC,KAAL,CAAWoC,OARJ,IAAA,IAAA,EAAA,IAAA,GAAA,IAAA,EAAA,CAAA,IAAA,CAQgBK,SAR7B,CAUA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,UAAU,CAAE,IAAA,CAAK3C,KAAL,CAAW2C,UAAX,GAA0B,KADtB,CAEhBC,kBAAkB,CAAE,IAAA,CAAK5C,KAAL,CAAW4C,kBAFf,CAGhBC,iBAAiB,CAAE,IAAA,CAAK7C,KAAL,CAAW6C,iBAHd,CAIhBC,iBAAiB,CAAE,IAAA,CAAK9C,KAAL,CAAW8C,iBAJd,CAOhBC,kBAAkB,CAAE,IAAA,CAAK/C,KAAL,CAAW+C,kBAPf,CAQhBC,oBAAoB,CAAE,IAAA,CAAKhD,KAAL,CAAWgD,oBARjB,CAShBC,qBAAqB,CAAE,IAAA,CAAKjD,KAAL,CAAWiD,qBATlB,CAUhBC,QAAQ,CAAE,IAAA,CAAKlD,KAAL,CAAWkD,QAVL,CAWhBC,QAAQ,CAAE,IAAA,CAAKnD,KAAL,CAAWmD,QAXL,CAAlB,CAcA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,UAAD,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,IAAA,CAAKnD,KAAL,CAAWoD,cADpB,CAEE,oBAAoB,CAElB,IAAA,CAAKpD,KAAL,CAAWqD,QAAX,CAAsBZ,SAAtB,CAAkC,IAAA,CAAKa,oBAJ3C,CAME,cAAc,CAAE,IAAA,CAAKC,cANvB,CAOE,OAAO,CAAEnB,OAPX,CAQE,qBAAqB,CAAE,IAAA,CAAKpC,KAAL,CAAWwD,qBARpC,CASE,oBAAoB,CAAE,IAAA,CAAKxD,KAAL,CAAWyD,oBATnC,CAUE,MAAM,CAAE,IAAA,CAAKzD,KAAL,CAAW0D,MAVrB,CAWE,kBAAkB,CAAA,CAAA,qBAAA,CAAE,IAAA,CAAK1D,KAAL,CAAW2D,kBAAb,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAAmC,KAXvD,CAYE,OAAO,CAAE,CAAC,IAAA,CAAK3D,KAAL,CAAWqD,QAZvB,CAAA,CAaM,IAAA,CAAKrD,KAAL,CAAWJ,gBAbjB,CAAA,CAcE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAU,IAAV,CAAA,QAAA,CAAA,CAAA,CAAA,CAAmB8C,SAAnB,CAAA,CAA8B,KAAK,CAAE,IAAA,CAAK1C,KAAL,CAAW4D,KAAhD,CAAA,CAAA,CACG,IAAA,CAAK5D,KAAL,CAAW6D,QADd,CAdF,CADF,CAoBD,CAAA,WAAA,gBAAA,GAtO2C1E,SAA/B,SAAMO,gBAAN,IAAA,OAAA,E,gBAAMA,gB,gBAGG,CACpBC,cAAc,CAAE,GADI,CAEpBC,gBAAgB,CAAE,CAChBC,WAAW,CAAE,aADG,CAEhBC,SAAS,CAAE,IAFK,CAFE,C","sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedbackProps,\n  Insets,\n} from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport { NativeViewGestureHandlerPayload } from '../../handlers/NativeViewGestureHandler';\nimport { TouchableNativeFeedbackExtraProps } from './TouchableNativeFeedback.android';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = typeof TOUCHABLE_STATE[keyof typeof TOUCHABLE_STATE];\n\nexport interface GenericTouchableProps\n  extends Omit<TouchableWithoutFeedbackProps, 'hitSlop'> {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props. - TODO: this comment may be unuseful in this moment\n\n  // TODO: in RN these events get native event parameter, which prolly could be used in our implementation too\n  onPress?: () => void;\n  onPressIn?: () => void;\n  onPressOut?: () => void;\n  onLongPress?: () => void;\n\n  nativeID?: string;\n  shouldActivateOnStart?: boolean;\n  disallowInterruption?: boolean;\n\n  containerStyle?: StyleProp<ViewStyle>;\n  hitSlop?: Insets | number;\n}\n\ninterface InternalProps {\n  extraButtonProps: TouchableNativeFeedbackExtraProps;\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const hitSlop =\n      (typeof this.props.hitSlop === 'number'\n        ? {\n            top: this.props.hitSlop,\n            left: this.props.hitSlop,\n            bottom: this.props.hitSlop,\n            right: this.props.hitSlop,\n          }\n        : this.props.hitSlop) ?? undefined;\n\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        enabled={!this.props.disabled}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}