{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";export function requestPermissions(_x){return _requestPermissions.apply(this,arguments);}function _requestPermissions(){_requestPermissions=_asyncToGenerator(function*(kind){return new Promise(function(){var _ref=_asyncToGenerator(function*(resolve,reject){return\"denied\";});return function(_x2,_x3){return _ref.apply(this,arguments);};}());});return _requestPermissions.apply(this,arguments);}","map":{"version":3,"sources":["../src/Permissions.ts"],"names":[],"mappings":"uEAMA,eAAsB,CAAA,kBAAkB,CAAA,EAAA,SAAA,mBAAA,CAAA,KAAA,MAAA,SAAA,GAqCvC,SAAA,oBAAA,EAAA,mBAAA,CAAA,iBAAA,CArCM,UAAkC,IAAoB,CAAA,CAC3D,MAAO,IAAI,CAAA,OAAO,gBAAA,IAAA,CAAA,iBAAA,CAAC,UAAO,OAAO,CAAE,MAAM,CAAI,CAC3C,MAAO,QAAQ,CACjB,CAAC,kBAAA,GAAA,CAAA,GAAA,SAAA,IAAA,CAAA,KAAA,MAAA,SAAA,QAAC,CAkCJ,CAAC,SAAA,mBAAA,CAAA,KAAA,MAAA,SAAA","sourceRoot":"","sourcesContent":["export async function requestPermissions(kind) {\n    return new Promise(async (resolve, reject) => {\n        return \"denied\";\n    });\n    // const userPropertyKey = `PermissionsFor${capitalize(kind)}`;\n    //   let k = kind;\n    //   let options: any = undefined;\n    //   if (kind === \"locationAlways\") {\n    //     k = \"location\";\n    //     options = { type: \"always\" };\n    //   }\n    //   if (Platform.OS === \"android\" && k === \"notification\") {\n    //     return;\n    //   }\n    //   // TODO check soft request status.\n    //   const current = await Permissions.check(MAP[k] as any);\n    //   // Tracking.log(`[permissions] ${k} permissions are ${current}`);\n    //   if (current === \"denied\" || current === \"limited\") {\n    //     // Tracking.setUserProperty(userPropertyKey, \"false\");\n    //     return reject(MAP_RESULTS[current]);\n    //   } else if (current === \"granted\") {\n    //     // Tracking.setUserProperty(userPropertyKey, \"true\");\n    //     return resolve(\"authorized\");\n    //   }\n    //   const response = await Permissions.request(MAP[k] as any, options);\n    //   if (response === \"granted\") {\n    //     // Tracking.setUserProperty(userPropertyKey, \"true\");\n    //     return resolve(\"authorized\");\n    //   } else {\n    //     // Tracking.setUserProperty(userPropertyKey, \"false\");\n    //     return reject(MAP_RESULTS[response]);\n    //   }\n    // });\n}\n//# sourceMappingURL=Permissions.js.map"]},"metadata":{},"sourceType":"module"}