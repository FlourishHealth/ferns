{"ast":null,"code":"var byteToHex=[];for(var i=0;i<256;++i){byteToHex[i]=(i+0x100).toString(16).substr(1);}function bytesToUuid(buf,offset){var i=offset||0;var bth=byteToHex;return[bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],'-',bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]]].join('');}export default bytesToUuid;","map":{"version":3,"sources":["../../../src/uuid/lib/bytesToUuid.ts"],"names":[],"mappings":"AAIA,GAAM,CAAA,SAAS,CAAa,EAAE,CAC9B,IAAK,GAAI,CAAA,CAAC,CAAG,CAAC,CAAE,CAAC,CAAG,GAAG,CAAE,EAAE,CAAC,CAAE,CAC5B,SAAS,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,CAAG,KAAK,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAClD,CAED,QAAS,CAAA,WAAW,CAAC,GAAa,CAAE,MAAe,CAAA,CACjD,GAAI,CAAA,CAAC,CAAG,MAAM,EAAI,CAAC,CACnB,GAAM,CAAA,GAAG,CAAG,SAAS,CAErB,MAAO,CACL,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CACH,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CACH,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CACH,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CACH,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACb,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CACd,CAAC,IAAI,CAAC,EAAE,CAAC,CACZ,CAEA,cAAe,CAAA,WAAW","sourcesContent":["/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex: string[] = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf: number[], offset?: number) {\n  let i = offset || 0;\n  const bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return [\n    bth[buf[i++]],\n    bth[buf[i++]],\n    bth[buf[i++]],\n    bth[buf[i++]],\n    '-',\n    bth[buf[i++]],\n    bth[buf[i++]],\n    '-',\n    bth[buf[i++]],\n    bth[buf[i++]],\n    '-',\n    bth[buf[i++]],\n    bth[buf[i++]],\n    '-',\n    bth[buf[i++]],\n    bth[buf[i++]],\n    bth[buf[i++]],\n    bth[buf[i++]],\n    bth[buf[i++]],\n    bth[buf[i++]],\n  ].join('');\n}\n\nexport default bytesToUuid;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}