{"ast":null,"code":"'use strict';import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import{isSharedValue}from'../reanimated2';import{isChromeDebugger}from'../reanimated2/PlatformChecker';import WorkletEventHandler from'../reanimated2/WorkletEventHandler';import{initialUpdaterRun}from'../reanimated2/animation';import{hasInlineStyles,getInlineStyle}from'./InlinePropManager';import{flattenArray,has}from'./utils';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";function dummyListener(){}export var PropsFilter=function(){function PropsFilter(){_classCallCheck(this,PropsFilter);_defineProperty(this,\"_initialStyle\",{});}_createClass(PropsFilter,[{key:\"filterNonAnimatedProps\",value:function filterNonAnimatedProps(component){var _this=this;var inputProps=component.props;var props={};var _loop=function _loop(){var value=inputProps[key];if(key==='style'){var styleProp=inputProps.style;var styles=flattenArray(styleProp!=null?styleProp:[]);var processedStyle=styles.map(function(style){if(style&&style.viewDescriptors){style.viewsRef.add(component);if(component._isFirstRender){_this._initialStyle=_objectSpread(_objectSpread(_objectSpread({},style.initial.value),_this._initialStyle),initialUpdaterRun(style.initial.updater));}return _this._initialStyle;}else if(hasInlineStyles(style)){return getInlineStyle(style,component._isFirstRender);}else{return style;}});props[key]=StyleSheet.flatten(processedStyle);}else if(key==='animatedProps'){var animatedProp=inputProps.animatedProps;if(animatedProp.initial!==undefined){Object.keys(animatedProp.initial.value).forEach(function(key){var _animatedProp$initial,_animatedProp$viewsRe;props[key]=(_animatedProp$initial=animatedProp.initial)===null||_animatedProp$initial===void 0?void 0:_animatedProp$initial.value[key];(_animatedProp$viewsRe=animatedProp.viewsRef)===null||_animatedProp$viewsRe===void 0?void 0:_animatedProp$viewsRe.add(component);});}}else if(has('current',value)&&value.current instanceof WorkletEventHandler){if(value.current.eventNames.length>0){value.current.eventNames.forEach(function(eventName){props[eventName]=has('listeners',value.current)?value.current.listeners[eventName]:dummyListener;});}else{props[key]=dummyListener;}}else if(isSharedValue(value)){if(component._isFirstRender){props[key]=value.value;}}else if(key!=='onGestureHandlerStateChange'||!isChromeDebugger()){props[key]=value;}};for(var key in inputProps){_loop();}return props;}}]);return PropsFilter;}();","map":{"version":3,"sources":["PropsFilter.tsx"],"names":["isSharedValue","isChromeDebugger","WorkletEventHandler","initialUpdaterRun","hasInlineStyles","getInlineStyle","flattenArray","has","dummyListener","PropsFilter","constructor","filterNonAnimatedProps","component","inputProps","props","key","value","styleProp","style","styles","processedStyle","map","viewDescriptors","viewsRef","add","_isFirstRender","_initialStyle","initial","updater","StyleSheet","flatten","animatedProp","animatedProps","undefined","Object","keys","forEach","current","eventNames","length","eventName","listeners"],"mappings":"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","sourcesContent":["'use strict';\nimport type { StyleProps, SharedValue } from '../reanimated2';\nimport { isSharedValue } from '../reanimated2';\nimport { isChromeDebugger } from '../reanimated2/PlatformChecker';\nimport WorkletEventHandler from '../reanimated2/WorkletEventHandler';\nimport { initialUpdaterRun } from '../reanimated2/animation';\nimport { hasInlineStyles, getInlineStyle } from './InlinePropManager';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  IAnimatedComponentInternal,\n  IPropsFilter,\n} from './commonTypes';\nimport { flattenArray, has } from './utils';\nimport { StyleSheet } from 'react-native';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nexport class PropsFilter implements IPropsFilter {\n  private _initialStyle = {};\n\n  public filterNonAnimatedProps(\n    component: React.Component<unknown, unknown> & IAnimatedComponentInternal\n  ): Record<string, unknown> {\n    const inputProps =\n      component.props as AnimatedComponentProps<InitialComponentProps>;\n    const props: Record<string, unknown> = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray<StyleProps>(styleProp ?? []);\n        const processedStyle: StyleProps = styles.map((style) => {\n          if (style && style.viewDescriptors) {\n            // this is how we recognize styles returned by useAnimatedStyle\n            style.viewsRef.add(component);\n            if (component._isFirstRender) {\n              this._initialStyle = {\n                ...style.initial.value,\n                ...this._initialStyle,\n                ...initialUpdaterRun<StyleProps>(style.initial.updater),\n              };\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, component._isFirstRender);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps as Partial<\n          AnimatedComponentProps<AnimatedProps>\n        >;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach((key) => {\n            props[key] = animatedProp.initial?.value[key];\n            animatedProp.viewsRef?.add(component);\n          });\n        }\n      } else if (\n        has('current', value) &&\n        value.current instanceof WorkletEventHandler\n      ) {\n        if (value.current.eventNames.length > 0) {\n          value.current.eventNames.forEach((eventName) => {\n            props[eventName] = has('listeners', value.current)\n              ? (value.current.listeners as Record<string, unknown>)[eventName]\n              : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (component._isFirstRender) {\n          props[key] = (value as SharedValue<unknown>).value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}