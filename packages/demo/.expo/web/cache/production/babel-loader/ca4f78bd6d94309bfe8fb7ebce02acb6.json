{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var _excluded=[\"enabled\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{State}from'../../State';import{PointerType,TouchEventType,EventTypes}from'../interfaces';import GestureHandlerOrchestrator from'../tools/GestureHandlerOrchestrator';import InteractionManager from'../tools/InteractionManager';import PointerTracker from'../tools/PointerTracker';var GestureHandler=function(){function GestureHandler(delegate){var _this=this;_classCallCheck(this,GestureHandler);_defineProperty(this,\"lastSentState\",null);_defineProperty(this,\"currentState\",State.UNDETERMINED);_defineProperty(this,\"shouldCancellWhenOutside\",false);_defineProperty(this,\"hasCustomActivationCriteria\",false);_defineProperty(this,\"enabled\",false);_defineProperty(this,\"viewRef\",void 0);_defineProperty(this,\"propsRef\",void 0);_defineProperty(this,\"handlerTag\",void 0);_defineProperty(this,\"config\",{enabled:false});_defineProperty(this,\"tracker\",new PointerTracker());_defineProperty(this,\"activationIndex\",0);_defineProperty(this,\"awaiting\",false);_defineProperty(this,\"active\",false);_defineProperty(this,\"shouldResetProgress\",false);_defineProperty(this,\"pointerType\",PointerType.NONE);_defineProperty(this,\"delegate\",void 0);_defineProperty(this,\"sendEvent\",function(newState,oldState){var _this$propsRef$curren=_this.propsRef.current,onGestureHandlerEvent=_this$propsRef$curren.onGestureHandlerEvent,onGestureHandlerStateChange=_this$propsRef$curren.onGestureHandlerStateChange;var resultEvent=_this.transformEventData(newState,oldState);if(_this.lastSentState!==newState){_this.lastSentState=newState;invokeNullableMethod(onGestureHandlerStateChange,resultEvent);}if(_this.currentState===State.ACTIVE){resultEvent.nativeEvent.oldState=undefined;invokeNullableMethod(onGestureHandlerEvent,resultEvent);}});this.delegate=delegate;}_createClass(GestureHandler,[{key:\"init\",value:function init(viewRef,propsRef){this.propsRef=propsRef;this.viewRef=viewRef;this.currentState=State.UNDETERMINED;this.delegate.init(viewRef,this);}},{key:\"attachEventManager\",value:function attachEventManager(manager){manager.setOnPointerDown(this.onPointerDown.bind(this));manager.setOnPointerAdd(this.onPointerAdd.bind(this));manager.setOnPointerUp(this.onPointerUp.bind(this));manager.setOnPointerRemove(this.onPointerRemove.bind(this));manager.setOnPointerMove(this.onPointerMove.bind(this));manager.setOnPointerEnter(this.onPointerEnter.bind(this));manager.setOnPointerLeave(this.onPointerLeave.bind(this));manager.setOnPointerCancel(this.onPointerCancel.bind(this));manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));manager.setListeners();}},{key:\"onCancel\",value:function onCancel(){}},{key:\"onReset\",value:function onReset(){}},{key:\"resetProgress\",value:function resetProgress(){}},{key:\"reset\",value:function reset(){this.tracker.resetTracker();this.onReset();this.resetProgress();this.delegate.reset();this.currentState=State.UNDETERMINED;}},{key:\"moveToState\",value:function moveToState(newState,sendIfDisabled){if(this.currentState===newState){return;}var oldState=this.currentState;this.currentState=newState;if(this.tracker.getTrackedPointersCount()>0&&this.config.needsPointerData&&this.isFinished()){this.cancelTouches();}GestureHandlerOrchestrator.getInstance().onHandlerStateChange(this,newState,oldState,sendIfDisabled);this.onStateChange(newState,oldState);}},{key:\"onStateChange\",value:function onStateChange(_newState,_oldState){}},{key:\"begin\",value:function begin(){if(!this.checkHitSlop()){return;}if(this.currentState===State.UNDETERMINED){this.moveToState(State.BEGAN);}}},{key:\"fail\",value:function fail(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.BEGAN){this.delegate.onFail();this.moveToState(State.FAILED,sendIfDisabled);}this.resetProgress();}},{key:\"cancel\",value:function cancel(sendIfDisabled){if(this.currentState===State.ACTIVE||this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN){this.onCancel();this.delegate.onCancel();this.moveToState(State.CANCELLED,sendIfDisabled);}}},{key:\"activate\",value:function activate(){var _force=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(this.currentState===State.UNDETERMINED||this.currentState===State.BEGAN){this.delegate.onActivate();this.moveToState(State.ACTIVE);}}},{key:\"end\",value:function end(){if(this.currentState===State.BEGAN||this.currentState===State.ACTIVE){this.delegate.onEnd();this.moveToState(State.END);}this.resetProgress();}},{key:\"isAwaiting\",value:function isAwaiting(){return this.awaiting;}},{key:\"setAwaiting\",value:function setAwaiting(value){this.awaiting=value;}},{key:\"isActive\",value:function isActive(){return this.active;}},{key:\"setActive\",value:function setActive(value){this.active=value;}},{key:\"getShouldResetProgress\",value:function getShouldResetProgress(){return this.shouldResetProgress;}},{key:\"setShouldResetProgress\",value:function setShouldResetProgress(value){this.shouldResetProgress=value;}},{key:\"getActivationIndex\",value:function getActivationIndex(){return this.activationIndex;}},{key:\"setActivationIndex\",value:function setActivationIndex(value){this.activationIndex=value;}},{key:\"shouldWaitForHandlerFailure\",value:function shouldWaitForHandlerFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldWaitForHandlerFailure(this,handler);}},{key:\"shouldRequireToWaitForFailure\",value:function shouldRequireToWaitForFailure(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(this,handler);}},{key:\"shouldRecognizeSimultaneously\",value:function shouldRecognizeSimultaneously(handler){if(handler===this){return true;}return InteractionManager.getInstance().shouldRecognizeSimultaneously(this,handler);}},{key:\"shouldBeCancelledByOther\",value:function shouldBeCancelledByOther(handler){if(handler===this){return false;}return InteractionManager.getInstance().shouldHandlerBeCancelledBy(this,handler);}},{key:\"onPointerDown\",value:function onPointerDown(event){GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);this.pointerType=event.pointerType;if(this.pointerType===PointerType.TOUCH){GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);}if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerAdd\",value:function onPointerAdd(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerUp\",value:function onPointerUp(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerRemove\",value:function onPointerRemove(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerMove\",value:function onPointerMove(event){this.tryToSendMoveEvent(false);if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerLeave\",value:function onPointerLeave(event){if(this.shouldCancellWhenOutside){switch(this.currentState){case State.ACTIVE:this.cancel();break;case State.BEGAN:this.fail();break;}return;}if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerEnter\",value:function onPointerEnter(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerCancel\",value:function onPointerCancel(event){if(this.config.needsPointerData){this.sendTouchEvent(event);}this.cancel();this.reset();}},{key:\"onPointerOutOfBounds\",value:function onPointerOutOfBounds(event){this.tryToSendMoveEvent(true);if(this.config.needsPointerData){this.sendTouchEvent(event);}}},{key:\"onPointerMoveOver\",value:function onPointerMoveOver(_event){}},{key:\"onPointerMoveOut\",value:function onPointerMoveOut(_event){}},{key:\"tryToSendMoveEvent\",value:function tryToSendMoveEvent(out){if(this.enabled&&this.active&&(!out||out&&!this.shouldCancellWhenOutside)){this.sendEvent(this.currentState,this.currentState);}}},{key:\"sendTouchEvent\",value:function sendTouchEvent(event){if(!this.enabled){return;}var onGestureHandlerEvent=this.propsRef.current.onGestureHandlerEvent;var touchEvent=this.transformTouchEvent(event);if(touchEvent){invokeNullableMethod(onGestureHandlerEvent,touchEvent);}}},{key:\"transformEventData\",value:function transformEventData(newState,oldState){return{nativeEvent:_objectSpread(_objectSpread({numberOfPointers:this.tracker.getTrackedPointersCount(),state:newState,pointerInside:this.delegate.isPointerInBounds({x:this.tracker.getLastAvgX(),y:this.tracker.getLastAvgY()})},this.transformNativeEvent()),{},{handlerTag:this.handlerTag,target:this.viewRef,oldState:newState!==oldState?oldState:undefined}),timeStamp:Date.now()};}},{key:\"transformTouchEvent\",value:function transformTouchEvent(event){var _this2=this;var _event$touchEventType;var rect=this.delegate.measureView();var all=[];var changed=[];var trackerData=this.tracker.getData();if(trackerData.size===0||!trackerData.has(event.pointerId)){return;}trackerData.forEach(function(element,key){var id=_this2.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});});if(event.eventType!==EventTypes.CANCEL){changed.push({id:this.tracker.getMappedTouchEventId(event.pointerId),x:event.x-rect.pageX,y:event.y-rect.pageY,absoluteX:event.x,absoluteY:event.y});}else{trackerData.forEach(function(element,key){var id=_this2.tracker.getMappedTouchEventId(key);changed.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});});}var eventType=TouchEventType.UNDETERMINED;switch(event.eventType){case EventTypes.DOWN:case EventTypes.ADDITIONAL_POINTER_DOWN:eventType=TouchEventType.DOWN;break;case EventTypes.UP:case EventTypes.ADDITIONAL_POINTER_UP:eventType=TouchEventType.UP;break;case EventTypes.MOVE:eventType=TouchEventType.MOVE;break;case EventTypes.CANCEL:eventType=TouchEventType.CANCELLED;break;}var numberOfTouches=all.length;if(event.eventType===EventTypes.UP||event.eventType===EventTypes.ADDITIONAL_POINTER_UP){--numberOfTouches;}return{nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:(_event$touchEventType=event.touchEventType)!==null&&_event$touchEventType!==void 0?_event$touchEventType:eventType,changedTouches:changed,allTouches:all,numberOfTouches:numberOfTouches},timeStamp:Date.now()};}},{key:\"cancelTouches\",value:function cancelTouches(){var _this3=this;var rect=this.delegate.measureView();var all=[];var changed=[];var trackerData=this.tracker.getData();if(trackerData.size===0){return;}trackerData.forEach(function(element,key){var id=_this3.tracker.getMappedTouchEventId(key);all.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});changed.push({id:id,x:element.lastX-rect.pageX,y:element.lastY-rect.pageY,absoluteX:element.lastX,absoluteY:element.lastY});});var cancelEvent={nativeEvent:{handlerTag:this.handlerTag,state:this.currentState,eventType:TouchEventType.CANCELLED,changedTouches:changed,allTouches:all,numberOfTouches:all.length},timeStamp:Date.now()};var onGestureHandlerEvent=this.propsRef.current.onGestureHandlerEvent;invokeNullableMethod(onGestureHandlerEvent,cancelEvent);}},{key:\"transformNativeEvent\",value:function transformNativeEvent(){var rect=this.delegate.measureView();return{x:this.tracker.getLastAvgX()-rect.pageX,y:this.tracker.getLastAvgY()-rect.pageY,absoluteX:this.tracker.getLastAvgX(),absoluteY:this.tracker.getLastAvgY()};}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref){var _ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled,props=_objectWithoutProperties(_ref,_excluded);this.config=_objectSpread({enabled:enabled},props);this.enabled=enabled;if(this.config.shouldCancelWhenOutside!==undefined){this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);}this.validateHitSlops();if(this.enabled){return;}switch(this.currentState){case State.ACTIVE:this.fail(true);break;case State.UNDETERMINED:GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(this);break;default:this.cancel(true);break;}}},{key:\"checkCustomActivationCriteria\",value:function checkCustomActivationCriteria(criterias){for(var key in this.config){if(criterias.indexOf(key)>=0){this.hasCustomActivationCriteria=true;}}}},{key:\"validateHitSlops\",value:function validateHitSlops(){if(!this.config.hitSlop){return;}if(this.config.hitSlop.left!==undefined&&this.config.hitSlop.right!==undefined&&this.config.hitSlop.width!==undefined){throw new Error('HitSlop Error: Cannot define left, right and width at the same time');}if(this.config.hitSlop.width!==undefined&&this.config.hitSlop.left===undefined&&this.config.hitSlop.right===undefined){throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top!==undefined&&this.config.hitSlop.bottom!==undefined){throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');}if(this.config.hitSlop.height!==undefined&&this.config.hitSlop.top===undefined&&this.config.hitSlop.bottom===undefined){throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');}}},{key:\"checkHitSlop\",value:function checkHitSlop(){if(!this.config.hitSlop){return true;}var _this$delegate$measur=this.delegate.measureView(),width=_this$delegate$measur.width,height=_this$delegate$measur.height;var left=0;var top=0;var right=width;var bottom=height;if(this.config.hitSlop.horizontal!==undefined){left-=this.config.hitSlop.horizontal;right+=this.config.hitSlop.horizontal;}if(this.config.hitSlop.vertical!==undefined){top-=this.config.hitSlop.vertical;bottom+=this.config.hitSlop.vertical;}if(this.config.hitSlop.left!==undefined){left=-this.config.hitSlop.left;}if(this.config.hitSlop.right!==undefined){right=width+this.config.hitSlop.right;}if(this.config.hitSlop.top!==undefined){top=-this.config.hitSlop.top;}if(this.config.hitSlop.bottom!==undefined){bottom=width+this.config.hitSlop.bottom;}if(this.config.hitSlop.width!==undefined){if(this.config.hitSlop.left!==undefined){right=left+this.config.hitSlop.width;}else if(this.config.hitSlop.right!==undefined){left=right-this.config.hitSlop.width;}}if(this.config.hitSlop.height!==undefined){if(this.config.hitSlop.top!==undefined){bottom=top+this.config.hitSlop.height;}else if(this.config.hitSlop.bottom!==undefined){top=bottom-this.config.hitSlop.height;}}var rect=this.delegate.measureView();var offsetX=this.tracker.getLastX()-rect.pageX;var offsetY=this.tracker.getLastY()-rect.pageY;if(offsetX>=left&&offsetX<=right&&offsetY>=top&&offsetY<=bottom){return true;}return false;}},{key:\"resetConfig\",value:function resetConfig(){}},{key:\"getTag\",value:function getTag(){return this.handlerTag;}},{key:\"setTag\",value:function setTag(tag){this.handlerTag=tag;}},{key:\"getConfig\",value:function getConfig(){return this.config;}},{key:\"getDelegate\",value:function getDelegate(){return this.delegate;}},{key:\"getTracker\",value:function getTracker(){return this.tracker;}},{key:\"getTrackedPointersID\",value:function getTrackedPointersID(){return this.tracker.getTrackedPointersID();}},{key:\"getState\",value:function getState(){return this.currentState;}},{key:\"isEnabled\",value:function isEnabled(){return this.enabled;}},{key:\"isFinished\",value:function isFinished(){return this.currentState===State.END||this.currentState===State.FAILED||this.currentState===State.CANCELLED;}},{key:\"setShouldCancelWhenOutside\",value:function setShouldCancelWhenOutside(shouldCancel){this.shouldCancellWhenOutside=shouldCancel;}},{key:\"getShouldCancelWhenOutside\",value:function getShouldCancelWhenOutside(){return this.shouldCancellWhenOutside;}},{key:\"getPointerType\",value:function getPointerType(){return this.pointerType;}}]);return GestureHandler;}();export{GestureHandler as default};function invokeNullableMethod(method,event){if(!method){return;}if(typeof method==='function'){method(event);return;}if('__getHandler'in method&&typeof method.__getHandler==='function'){var handler=method.__getHandler();invokeNullableMethod(handler,event);return;}if(!('__nodeConfig'in method)){return;}var argMapping=method.__nodeConfig.argMapping;if(!Array.isArray(argMapping)){return;}for(var _ref2 of argMapping.entries()){var _ref3=_slicedToArray(_ref2,2);var index=_ref3[0];var _ref3$=_slicedToArray(_ref3[1],2);var key=_ref3$[0];var value=_ref3$[1];if(!(key in event.nativeEvent)){continue;}var nativeValue=event.nativeEvent[key];if(value!==null&&value!==void 0&&value.setValue){value.setValue(nativeValue);}else{method.__nodeConfig.argMapping[index]=[key,nativeValue];}}return;}","map":{"version":3,"sources":["GestureHandler.ts"],"names":["State","PointerType","TouchEventType","EventTypes","GestureHandlerOrchestrator","InteractionManager","PointerTracker","GestureHandler","UNDETERMINED","enabled","NONE","constructor","delegate","init","viewRef","propsRef","currentState","attachEventManager","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerLeave","onPointerLeave","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setOnPointerMoveOver","onPointerMoveOver","setOnPointerMoveOut","onPointerMoveOut","setListeners","onCancel","onReset","resetProgress","reset","tracker","resetTracker","moveToState","newState","sendIfDisabled","oldState","getTrackedPointersCount","config","needsPointerData","isFinished","cancelTouches","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","ACTIVE","onFail","FAILED","cancel","CANCELLED","activate","_force","onActivate","end","onEnd","END","isAwaiting","awaiting","setAwaiting","value","isActive","active","setActive","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","getActivationIndex","activationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","sendTouchEvent","tryToSendMoveEvent","shouldCancellWhenOutside","_event","out","sendEvent","onGestureHandlerEvent","current","touchEvent","transformTouchEvent","invokeNullableMethod","onGestureHandlerStateChange","resultEvent","transformEventData","lastSentState","nativeEvent","undefined","numberOfPointers","state","pointerInside","isPointerInBounds","x","getLastAvgX","y","getLastAvgY","transformNativeEvent","handlerTag","target","timeStamp","Date","now","rect","measureView","all","changed","trackerData","getData","size","has","pointerId","forEach","element","key","id","getMappedTouchEventId","push","lastX","pageX","lastY","pageY","absoluteX","absoluteY","eventType","CANCEL","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","length","touchEventType","changedTouches","allTouches","cancelEvent","updateGestureConfig","props","shouldCancelWhenOutside","setShouldCancelWhenOutside","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hasCustomActivationCriteria","hitSlop","left","right","width","Error","height","top","bottom","horizontal","vertical","offsetX","getLastX","offsetY","getLastY","resetConfig","getTag","setTag","tag","getConfig","getDelegate","getTracker","getTrackedPointersID","getState","isEnabled","shouldCancel","getShouldCancelWhenOutside","getPointerType","method","__getHandler","argMapping","__nodeConfig","Array","isArray","index","entries","nativeValue","setValue"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  PointerType,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport { GestureHandlerDelegate } from '../tools/GestureHandlerDelegate';\n\nexport default abstract class GestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancellWhenOutside = false;\n  protected hasCustomActivationCriteria = false;\n  protected enabled = false;\n\n  private viewRef!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private handlerTag!: number;\n  protected config: Config = { enabled: false };\n\n  protected tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n  protected pointerType: PointerType = PointerType.NONE;\n\n  protected delegate: GestureHandlerDelegate<unknown>;\n\n  public constructor(delegate: GestureHandlerDelegate<unknown>) {\n    this.delegate = delegate;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(viewRef: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.viewRef = viewRef;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.delegate.init(viewRef, this);\n  }\n\n  public attachEventManager(manager: EventManager<unknown>): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n    manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n    manager.setListeners();\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.delegate.reset();\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    if (\n      this.tracker.getTrackedPointersCount() > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      // Here the order of calling the delegate and moveToState is important.\n      // At this point we can use currentState as previuos state, because immediately after changing cursor we call moveToState method.\n      this.delegate.onFail();\n\n      this.moveToState(State.FAILED, sendIfDisabled);\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n\n      // Same as above - order matters\n      this.delegate.onCancel();\n\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n    }\n  }\n\n  public activate(_force = false) {\n    if (\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.delegate.onActivate();\n\n      this.moveToState(State.ACTIVE);\n    }\n  }\n\n  public end() {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      // Same as above - order matters\n      this.delegate.onEnd();\n\n      this.moveToState(State.END);\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.getInstance().shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerLeave(event: AdaptedEvent): void {\n    if (this.shouldCancellWhenOutside) {\n      switch (this.currentState) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n\n    this.cancel();\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMoveOver(_event: AdaptedEvent): void {\n    // used only by hover gesture handler atm\n  }\n  protected onPointerMoveOut(_event: AdaptedEvent): void {\n    // used only by hover gesture handler atm\n  }\n  private tryToSendMoveEvent(out: boolean): void {\n    if (\n      this.enabled &&\n      this.active &&\n      (!out || (out && !this.shouldCancellWhenOutside))\n    ) {\n      this.sendEvent(this.currentState, this.currentState);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: this.delegate.isPointerInBounds({\n          x: this.tracker.getLastAvgX(),\n          y: this.tracker.getLastAvgY(),\n        }),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.viewRef,\n        oldState: newState !== oldState ? oldState : undefined,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.pageX,\n        y: element.lastY - rect.pageY,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.pageX,\n        y: event.y - rect.pageY,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.lastX - rect.pageX,\n          y: element.lastY - rect.pageY,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: event.touchEventType ?? eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.pageX,\n        y: element.lastY - rect.pageY,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n\n      changed.push({\n        id: id,\n        x: element.lastX - rect.pageX,\n        y: element.lastY - rect.pageY,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent(): Record<string, unknown> {\n    // those properties are shared by most handlers and if not this method will be overriden\n    const rect = this.delegate.measureView();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.pageX,\n      y: this.tracker.getLastAvgY() - rect.pageY,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n    };\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(\n          this\n        );\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const { width, height } = this.delegate.measureView();\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect = this.delegate.measureView();\n    const offsetX: number = this.tracker.getLastX() - rect.pageX;\n    const offsetY: number = this.tracker.getLastY() - rect.pageY;\n\n    if (\n      offsetX >= left &&\n      offsetX <= right &&\n      offsetY >= top &&\n      offsetY <= bottom\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  protected resetConfig(): void {}\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  public getConfig() {\n    return this.config;\n  }\n\n  public getDelegate(): GestureHandlerDelegate<unknown> {\n    return this.delegate;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.currentState === State.END ||\n      this.currentState === State.FAILED ||\n      this.currentState === State.CANCELLED\n    );\n  }\n\n  protected setShouldCancelWhenOutside(shouldCancel: boolean) {\n    this.shouldCancellWhenOutside = shouldCancel;\n  }\n\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancellWhenOutside;\n  }\n\n  public getPointerType(): PointerType {\n    return this.pointerType;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping }: { argMapping: unknown } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      //Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      //RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"]},"metadata":{},"sourceType":"module"}