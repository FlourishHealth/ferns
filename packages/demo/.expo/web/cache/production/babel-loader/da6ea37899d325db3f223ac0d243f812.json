{"ast":null,"code":"'use strict';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,\"string\");return typeof key===\"symbol\"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!==\"object\"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||\"default\");if(typeof res!==\"object\")return res;throw new TypeError(\"@@toPrimitive must return a primitive value.\");}return(hint===\"string\"?String:Number)(input);}import{flattenArray}from'./utils';import{makeViewDescriptorsSet}from'../reanimated2/ViewDescriptorsSet';import{adaptViewConfig}from'../ConfigHelper';import updateProps from'../reanimated2/UpdateProps';import{stopMapper,startMapper}from'../reanimated2/mappers';import{isSharedValue}from'../reanimated2/isSharedValue';import{shouldBeUseWeb}from'../reanimated2/PlatformChecker';var SHOULD_BE_USE_WEB=shouldBeUseWeb();function isInlineStyleTransform(transform){if(!Array.isArray(transform)){return false;}return transform.some(function(t){return hasInlineStyles(t);});}function inlinePropsHasChanged(styles1,styles2){if(Object.keys(styles1).length!==Object.keys(styles2).length){return true;}for(var key of Object.keys(styles1)){if(styles1[key]!==styles2[key])return true;}return false;}var _worklet_9755239701942_init_data={code:\"function getInlinePropsUpdate(inlineProps){const getInlinePropsUpdate=this._recur;const{isSharedValue}=this.__closure;const update={};for(const[key,styleValue]of Object.entries(inlineProps)){if(isSharedValue(styleValue)){update[key]=styleValue.value;}else if(Array.isArray(styleValue)){update[key]=styleValue.map(function(item){return getInlinePropsUpdate(item);});}else if(typeof styleValue==='object'){update[key]=getInlinePropsUpdate(styleValue);}else{update[key]=styleValue;}}return update;}\"};var getInlinePropsUpdate=function(){var getInlinePropsUpdate=function getInlinePropsUpdate(inlineProps){var update={};for(var _ref of Object.entries(inlineProps)){var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var styleValue=_ref2[1];if(isSharedValue(styleValue)){update[key]=styleValue.value;}else if(Array.isArray(styleValue)){update[key]=styleValue.map(function(item){return getInlinePropsUpdate(item);});}else if(typeof styleValue==='object'){update[key]=getInlinePropsUpdate(styleValue);}else{update[key]=styleValue;}}return update;};getInlinePropsUpdate.__closure={isSharedValue:isSharedValue};getInlinePropsUpdate.__workletHash=9755239701942;getInlinePropsUpdate.__initData=_worklet_9755239701942_init_data;return getInlinePropsUpdate;}();function extractSharedValuesMapFromProps(props){var inlineProps={};for(var key in props){var value=props[key];if(key==='style'){var _props$style;var styles=flattenArray((_props$style=props.style)!=null?_props$style:[]);styles.forEach(function(style){if(!style){return;}for(var _ref3 of Object.entries(style)){var _ref4=_slicedToArray(_ref3,2);var _key=_ref4[0];var styleValue=_ref4[1];if(isSharedValue(styleValue)){inlineProps[_key]=styleValue;}else if(_key==='transform'&&isInlineStyleTransform(styleValue)){inlineProps[_key]=styleValue;}}});}else if(isSharedValue(value)){inlineProps[key]=value;}}return inlineProps;}export function hasInlineStyles(style){if(!style){return false;}return Object.keys(style).some(function(key){var styleValue=style[key];return isSharedValue(styleValue)||key==='transform'&&isInlineStyleTransform(styleValue);});}export function getInlineStyle(style,isFirstRender){if(isFirstRender){return getInlinePropsUpdate(style);}var newStyle={};for(var _ref5 of Object.entries(style)){var _ref6=_slicedToArray(_ref5,2);var key=_ref6[0];var styleValue=_ref6[1];if(!isSharedValue(styleValue)&&!(key==='transform'&&isInlineStyleTransform(styleValue))){newStyle[key]=styleValue;}}return newStyle;}var _worklet_11406519397301_init_data={code:\"function anonymous(){const{getInlinePropsUpdate,newInlineProps,updateProps,shareableViewDescriptors,maybeViewRef}=this.__closure;const update=getInlinePropsUpdate(newInlineProps);updateProps(shareableViewDescriptors,update,maybeViewRef);}\"};export var InlinePropManager=function(){function InlinePropManager(){_classCallCheck(this,InlinePropManager);_defineProperty(this,\"_inlinePropsViewDescriptors\",null);_defineProperty(this,\"_inlinePropsMapperId\",null);_defineProperty(this,\"_inlineProps\",{});}_createClass(InlinePropManager,[{key:\"attachInlineProps\",value:function attachInlineProps(animatedComponent,viewInfo){var newInlineProps=extractSharedValuesMapFromProps(animatedComponent.props);var hasChanged=inlinePropsHasChanged(newInlineProps,this._inlineProps);if(hasChanged){if(!this._inlinePropsViewDescriptors){this._inlinePropsViewDescriptors=makeViewDescriptorsSet();var viewTag=viewInfo.viewTag,viewName=viewInfo.viewName,shadowNodeWrapper=viewInfo.shadowNodeWrapper,viewConfig=viewInfo.viewConfig;if(Object.keys(newInlineProps).length&&viewConfig){adaptViewConfig(viewConfig);}this._inlinePropsViewDescriptors.add({tag:viewTag,name:viewName,shadowNodeWrapper:shadowNodeWrapper});}var shareableViewDescriptors=this._inlinePropsViewDescriptors.shareableViewDescriptors;var maybeViewRef=SHOULD_BE_USE_WEB?{items:new Set([animatedComponent])}:undefined;var updaterFunction=function(){var anonymous=function anonymous(){var update=getInlinePropsUpdate(newInlineProps);updateProps(shareableViewDescriptors,update,maybeViewRef);};anonymous.__closure={getInlinePropsUpdate:getInlinePropsUpdate,newInlineProps:newInlineProps,updateProps:updateProps,shareableViewDescriptors:shareableViewDescriptors,maybeViewRef:maybeViewRef};anonymous.__workletHash=11406519397301;anonymous.__initData=_worklet_11406519397301_init_data;return anonymous;}();this._inlineProps=newInlineProps;if(this._inlinePropsMapperId){stopMapper(this._inlinePropsMapperId);}this._inlinePropsMapperId=null;if(Object.keys(newInlineProps).length){this._inlinePropsMapperId=startMapper(updaterFunction,Object.values(newInlineProps));}}}},{key:\"detachInlineProps\",value:function detachInlineProps(){if(this._inlinePropsMapperId){stopMapper(this._inlinePropsMapperId);}}}]);return InlinePropManager;}();","map":{"version":3,"sources":["InlinePropManager.ts"],"names":["flattenArray","makeViewDescriptorsSet","adaptViewConfig","updateProps","stopMapper","startMapper","isSharedValue","shouldBeUseWeb","SHOULD_BE_USE_WEB","isInlineStyleTransform","transform","Array","isArray","some","t","hasInlineStyles","inlinePropsHasChanged","styles1","styles2","Object","keys","length","key","getInlinePropsUpdate","inlineProps","update","styleValue","entries","value","map","item","extractSharedValuesMapFromProps","props","styles","style","forEach","getInlineStyle","isFirstRender","newStyle","InlinePropManager","constructor","_defineProperty","attachInlineProps","animatedComponent","viewInfo","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","viewTag","viewName","shadowNodeWrapper","viewConfig","add","tag","name","shareableViewDescriptors","maybeViewRef","items","Set","undefined","updaterFunction","_inlinePropsMapperId","values","detachInlineProps"],"mappings":"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","sourcesContent":["'use strict';\nimport type { StyleProps } from '../reanimated2';\nimport type {\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  IInlinePropManager,\n  ViewInfo,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../reanimated2/ViewDescriptorsSet';\nimport type {\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from '../reanimated2/ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../reanimated2/UpdateProps';\nimport { stopMapper, startMapper } from '../reanimated2/mappers';\nimport { isSharedValue } from '../reanimated2/isSharedValue';\nimport { shouldBeUseWeb } from '../reanimated2/PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nfunction isInlineStyleTransform(transform: unknown): boolean {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n\n  return transform.some((t: Record<string, unknown>) => hasInlineStyles(t));\n}\n\nfunction inlinePropsHasChanged(\n  styles1: StyleProps,\n  styles2: StyleProps\n): boolean {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, unknown>) {\n  'worklet';\n  const update: Record<string, unknown> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else if (Array.isArray(styleValue)) {\n      update[key] = styleValue.map((item) => {\n        return getInlinePropsUpdate(item);\n      });\n    } else if (typeof styleValue === 'object') {\n      update[key] = getInlinePropsUpdate(styleValue as Record<string, unknown>);\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<\n    Record<string, unknown> /* Initial component props */\n  >\n): Record<string, unknown> {\n  const inlineProps: Record<string, unknown> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nexport function hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nexport function getInlineStyle(\n  style: Record<string, unknown>,\n  isFirstRender: boolean\n) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  const newStyle: StyleProps = {};\n  for (const [key, styleValue] of Object.entries(style)) {\n    if (\n      !isSharedValue(styleValue) &&\n      !(key === 'transform' && isInlineStyleTransform(styleValue))\n    ) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\n\nexport class InlinePropManager implements IInlinePropManager {\n  _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n  _inlinePropsMapperId: number | null = null;\n  _inlineProps: StyleProps = {};\n\n  public attachInlineProps(\n    animatedComponent: React.Component<unknown, unknown> &\n      IAnimatedComponentInternal,\n    viewInfo: ViewInfo\n  ) {\n    const newInlineProps: Record<string, unknown> =\n      extractSharedValuesMapFromProps(animatedComponent.props);\n    const hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n\n    if (hasChanged) {\n      if (!this._inlinePropsViewDescriptors) {\n        this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n        const { viewTag, viewName, shadowNodeWrapper, viewConfig } = viewInfo;\n\n        if (Object.keys(newInlineProps).length && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n\n        this._inlinePropsViewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag as number,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n      const shareableViewDescriptors =\n        this._inlinePropsViewDescriptors.shareableViewDescriptors;\n\n      const maybeViewRef = SHOULD_BE_USE_WEB\n        ? ({ items: new Set([animatedComponent]) } as ViewRefSet<unknown>) // see makeViewsRefSet\n        : undefined;\n      const updaterFunction = () => {\n        'worklet';\n        const update = getInlinePropsUpdate(newInlineProps);\n        updateProps(shareableViewDescriptors, update, maybeViewRef);\n      };\n      this._inlineProps = newInlineProps;\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n      this._inlinePropsMapperId = null;\n      if (Object.keys(newInlineProps).length) {\n        this._inlinePropsMapperId = startMapper(\n          updaterFunction,\n          Object.values(newInlineProps)\n        );\n      }\n    }\n  }\n\n  public detachInlineProps() {\n    if (this._inlinePropsMapperId) {\n      stopMapper(this._inlinePropsMapperId);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}