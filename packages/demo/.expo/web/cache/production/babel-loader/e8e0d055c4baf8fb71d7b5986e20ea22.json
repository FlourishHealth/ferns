{"ast":null,"code":"import React,{useMemo}from\"react\";import{isMobileDevice}from\"./MediaQuery\";import{MobileAddressAutocomplete}from\"./MobileAddressAutoComplete\";import{TextField}from\"./TextField\";import{isNative,isValidGoogleApiKey}from\"./Utilities\";import{WebAddressAutocomplete}from\"./WebAddressAutocomplete\";export var UnifiedAddressAutoCompleteField=function UnifiedAddressAutoCompleteField(_ref){var disabled=_ref.disabled,googleMapsApiKey=_ref.googleMapsApiKey,googlePlacesMobileStyles=_ref.googlePlacesMobileStyles,includeCounty=_ref.includeCounty,inputValue=_ref.inputValue,handleAddressChange=_ref.handleAddressChange,handleAutoCompleteChange=_ref.handleAutoCompleteChange,testID=_ref.testID;var isWeb=typeof document!==\"undefined\";var isValidatedGoogleApiKey=useMemo(function(){return googleMapsApiKey?isValidGoogleApiKey(googleMapsApiKey):false;},[googleMapsApiKey]);if(isWeb&&isValidatedGoogleApiKey){return React.createElement(WebAddressAutocomplete,{disabled:disabled,googleMapsApiKey:googleMapsApiKey,handleAddressChange:handleAddressChange,handleAutoCompleteChange:handleAutoCompleteChange,includeCounty:includeCounty,inputValue:inputValue,testID:testID});}else if(isMobileDevice()&&isNative()&&isValidatedGoogleApiKey){return React.createElement(MobileAddressAutocomplete,{disabled:disabled,googleMapsApiKey:googleMapsApiKey,handleAddressChange:handleAddressChange,handleAutoCompleteChange:handleAutoCompleteChange,includeCounty:includeCounty,inputValue:inputValue,styles:googlePlacesMobileStyles,testID:testID});}else{return React.createElement(TextField,{disabled:disabled,label:\"Street Address\",placeholder:\"Enter an address\",testID:testID,type:\"text\",value:inputValue,onChange:function onChange(_ref2){var value=_ref2.value;handleAddressChange({value:value});}});}};","map":{"version":3,"sources":["../src/UnifiedAddressAutoComplete.tsx"],"names":[],"mappings":"AAAA,MAAO,CAAA,KAAK,EAAG,OAAO,KAAO,OAAO,CAGpC,OAAQ,cAAc,KAAO,cAAc,CAC3C,OAAQ,yBAAyB,KAAO,6BAA6B,CACrE,OAAQ,SAAS,KAAO,aAAa,CACrC,OAAQ,QAAQ,CAAE,mBAAmB,KAAO,aAAa,CACzD,OAAQ,sBAAsB,KAAO,0BAA0B,CAE/D,MAAO,IAAM,CAAA,+BAA+B,CAAG,QAAlC,CAAA,+BAA+B,CAAA,IAAA,CASb,IAR7B,CAAA,QAAQ,CAAA,IAAA,CAAR,QAAQ,CACR,gBAAgB,CAAA,IAAA,CAAhB,gBAAgB,CAChB,wBAAwB,CAAA,IAAA,CAAxB,wBAAwB,CACxB,aAAa,CAAA,IAAA,CAAb,aAAa,CACb,UAAU,CAAA,IAAA,CAAV,UAAU,CACV,mBAAmB,CAAA,IAAA,CAAnB,mBAAmB,CACnB,wBAAwB,CAAA,IAAA,CAAxB,wBAAwB,CACxB,MAAM,CAAA,IAAA,CAAN,MAAM,CAEN,GAAM,CAAA,KAAK,CAAG,MAAO,CAAA,QAAQ,GAAK,WAAW,CAC7C,GAAM,CAAA,uBAAuB,CAAG,OAAO,CACrC,iBAAO,CAAA,gBAAgB,CAAG,mBAAmB,CAAC,gBAAgB,CAAC,CAAG,KAAK,EAAC,CACxE,CAAC,gBAAgB,CAAC,CACnB,CAED,GAAI,KAAK,EAAI,uBAAuB,CAAE,CACpC,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,sBAAsB,CAAA,CACrB,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,gBAAgB,CAClC,mBAAmB,CAAE,mBAAmB,CACxC,wBAAwB,CAAE,wBAAwB,CAClD,aAAa,CAAE,aAAa,CAC5B,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,MAAM,CAAA,CACd,CAEN,CAAC,IAAM,IAAI,cAAc,CAAA,CAAE,EAAI,QAAQ,CAAA,CAAE,EAAI,uBAAuB,CAAE,CACpE,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,yBAAyB,CAAA,CACxB,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,gBAAgB,CAClC,mBAAmB,CAAE,mBAAmB,CACxC,wBAAwB,CAAE,wBAAwB,CAClD,aAAa,CAAE,aAAa,CAC5B,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,wBAAwB,CAChC,MAAM,CAAE,MAAM,CAAA,CACd,CAEN,CAAC,IAAM,CACL,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,SAAS,CAAA,CACR,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAC,gBAAgB,CACtB,WAAW,CAAC,kBAAkB,CAC9B,MAAM,CAAE,MAAM,CACd,IAAI,CAAC,MAAM,CACX,KAAK,CAAE,UAAU,CACjB,QAAQ,CAAE,SAAA,SAAA,KAAA,CAAkB,IAAhB,CAAA,KAAK,CAAA,KAAA,CAAL,KAAK,CACf,mBAAmB,CAAC,CAAC,KAAK,CAAL,KAAK,CAAC,CAAC,CAC9B,CAAC,CAAA,CACD,CAEN,CACF,CAAC","sourceRoot":"","sourcesContent":["import React, { useMemo } from \"react\";\nimport { isMobileDevice } from \"./MediaQuery\";\nimport { MobileAddressAutocomplete } from \"./MobileAddressAutoComplete\";\nimport { TextField } from \"./TextField\";\nimport { isNative, isValidGoogleApiKey } from \"./Utilities\";\nimport { WebAddressAutocomplete } from \"./WebAddressAutocomplete\";\nexport const UnifiedAddressAutoCompleteField = ({ disabled, googleMapsApiKey, googlePlacesMobileStyles, includeCounty, inputValue, handleAddressChange, handleAutoCompleteChange, testID, }) => {\n    const isWeb = typeof document !== \"undefined\";\n    const isValidatedGoogleApiKey = useMemo(() => (googleMapsApiKey ? isValidGoogleApiKey(googleMapsApiKey) : false), [googleMapsApiKey]);\n    if (isWeb && isValidatedGoogleApiKey) {\n        return (React.createElement(WebAddressAutocomplete, { disabled: disabled, googleMapsApiKey: googleMapsApiKey, handleAddressChange: handleAddressChange, handleAutoCompleteChange: handleAutoCompleteChange, includeCounty: includeCounty, inputValue: inputValue, testID: testID }));\n    }\n    else if (isMobileDevice() && isNative() && isValidatedGoogleApiKey) {\n        return (React.createElement(MobileAddressAutocomplete, { disabled: disabled, googleMapsApiKey: googleMapsApiKey, handleAddressChange: handleAddressChange, handleAutoCompleteChange: handleAutoCompleteChange, includeCounty: includeCounty, inputValue: inputValue, styles: googlePlacesMobileStyles, testID: testID }));\n    }\n    else {\n        return (React.createElement(TextField, { disabled: disabled, label: \"Street Address\", placeholder: \"Enter an address\", testID: testID, type: \"text\", value: inputValue, onChange: ({ value }) => {\n                handleAddressChange({ value });\n            } }));\n    }\n};\n//# sourceMappingURL=UnifiedAddressAutoComplete.js.map"]},"metadata":{},"sourceType":"module"}