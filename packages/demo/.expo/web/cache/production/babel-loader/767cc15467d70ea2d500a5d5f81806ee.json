{"ast":null,"code":"'use strict';export function measure(animatedRef){var element=animatedRef();if(element===-1){console.warn(`[Reanimated] The view with tag ${element} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);return null;}var viewportOffset=element.getBoundingClientRect();return{width:element.offsetWidth,height:element.offsetHeight,x:element.offsetLeft,y:element.offsetTop,pageX:viewportOffset.left,pageY:viewportOffset.top};}","map":{"version":3,"sources":["measure.web.ts"],"names":["measure","animatedRef","element","console","warn","viewportOffset","getBoundingClientRect","width","offsetWidth","height","offsetHeight","x","offsetLeft","y","offsetTop","pageX","left","pageY","top"],"mappings":"AAAA,YAAY,CAKZ,MAAO,SAASA,CAAAA,OAAOA,CACrBC,WAA2B,CACA,CAC3B,GAAMC,CAAAA,OAAO,CAAID,WAAW,CAAA,CAAU,CAEtC,GAAIC,OAAO,GAAK,CAAC,CAAC,CAAE,CAClBC,OAAO,CAACC,IAAI,CACT,kCAAiCF,OAAQ,4JAA2J,CACtM,CACD,MAAO,KAAI,CACb,CAEA,GAAMG,CAAAA,cAAc,CAAIH,OAAO,CAAiBI,qBAAqB,CAAA,CAAE,CACvE,MAAO,CACLC,KAAK,CAAEL,OAAO,CAACM,WAAW,CAC1BC,MAAM,CAAEP,OAAO,CAACQ,YAAY,CAC5BC,CAAC,CAAET,OAAO,CAACU,UAAU,CACrBC,CAAC,CAAEX,OAAO,CAACY,SAAS,CACpBC,KAAK,CAAEV,cAAc,CAACW,IAAI,CAC1BC,KAAK,CAAEZ,cAAc,CAACa,GACxB,CAAC,CACH","sourcesContent":["'use strict';\nimport type { MeasuredDimensions } from '../commonTypes';\nimport type { AnimatedRef } from '../hook/commonTypes';\nimport type { Component } from 'react';\n\nexport function measure<T extends Component>(\n  animatedRef: AnimatedRef<T>\n): MeasuredDimensions | null {\n  const element = (animatedRef as any)();\n\n  if (element === -1) {\n    console.warn(\n      `[Reanimated] The view with tag ${element} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`\n    );\n    return null;\n  }\n\n  const viewportOffset = (element as HTMLElement).getBoundingClientRect();\n  return {\n    width: element.offsetWidth,\n    height: element.offsetHeight,\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    pageX: viewportOffset.left,\n    pageY: viewportOffset.top,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}