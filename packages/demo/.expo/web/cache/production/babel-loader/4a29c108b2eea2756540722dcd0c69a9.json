{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty2(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import{PanGestureHandler}from'../handlers/PanGestureHandler';import{TapGestureHandler}from'../handlers/TapGestureHandler';import{State}from'../State';var DRAG_TOSS=0.05;var Swipeable=function(_Component){_inherits(Swipeable,_Component);var _super=_createSuper(Swipeable);function Swipeable(_props){var _this;_classCallCheck(this,Swipeable);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",void 0);_defineProperty(_assertThisInitialized(_this),\"transX\",void 0);_defineProperty(_assertThisInitialized(_this),\"showLeftAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"leftActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"showRightAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"rightActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"updateAnimatedEvent\",function(props,state){var friction=props.friction,overshootFriction=props.overshootFriction;var dragX=state.dragX,rowTranslation=state.rowTranslation,_state$leftWidth=state.leftWidth,leftWidth=_state$leftWidth===void 0?0:_state$leftWidth,_state$rowWidth=state.rowWidth,rowWidth=_state$rowWidth===void 0?0:_state$rowWidth;var _state$rightOffset=state.rightOffset,rightOffset=_state$rightOffset===void 0?rowWidth:_state$rightOffset;var rightWidth=Math.max(0,rowWidth-rightOffset);var _props$overshootLeft=props.overshootLeft,overshootLeft=_props$overshootLeft===void 0?leftWidth>0:_props$overshootLeft,_props$overshootRight=props.overshootRight,overshootRight=_props$overshootRight===void 0?rightWidth>0:_props$overshootRight;var transX=Animated.add(rowTranslation,dragX.interpolate({inputRange:[0,friction],outputRange:[0,1]})).interpolate({inputRange:[-rightWidth-1,-rightWidth,leftWidth,leftWidth+1],outputRange:[-rightWidth-(overshootRight?1/overshootFriction:0),-rightWidth,leftWidth,leftWidth+(overshootLeft?1/overshootFriction:0)]});_this.transX=transX;_this.showLeftAction=leftWidth>0?transX.interpolate({inputRange:[-1,0,leftWidth],outputRange:[0,0,1]}):new Animated.Value(0);_this.leftActionTranslate=_this.showLeftAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});_this.showRightAction=rightWidth>0?transX.interpolate({inputRange:[-rightWidth,0,1],outputRange:[1,0,0]}):new Animated.Value(0);_this.rightActionTranslate=_this.showRightAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});});_defineProperty(_assertThisInitialized(_this),\"onTapHandlerStateChange\",function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===State.ACTIVE){_this.close();}});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(ev){if(ev.nativeEvent.oldState===State.ACTIVE){_this.handleRelease(ev);}if(ev.nativeEvent.state===State.ACTIVE){var _ev$nativeEvent=ev.nativeEvent,velocityX=_ev$nativeEvent.velocityX,dragX=_ev$nativeEvent.translationX;var rowState=_this.state.rowState;var friction=_this.props.friction;var translationX=(dragX+DRAG_TOSS*velocityX)/friction;var direction=rowState===-1?'right':rowState===1?'left':translationX>0?'left':'right';if(rowState===0){var _this$props$onSwipeab,_this$props;(_this$props$onSwipeab=(_this$props=_this.props).onSwipeableOpenStartDrag)===null||_this$props$onSwipeab===void 0?void 0:_this$props$onSwipeab.call(_this$props,direction);}else{var _this$props$onSwipeab2,_this$props2;(_this$props$onSwipeab2=(_this$props2=_this.props).onSwipeableCloseStartDrag)===null||_this$props$onSwipeab2===void 0?void 0:_this$props$onSwipeab2.call(_this$props2,direction);}}});_defineProperty(_assertThisInitialized(_this),\"handleRelease\",function(ev){var _ev$nativeEvent2=ev.nativeEvent,velocityX=_ev$nativeEvent2.velocityX,dragX=_ev$nativeEvent2.translationX;var _this$state=_this.state,_this$state$leftWidth=_this$state.leftWidth,leftWidth=_this$state$leftWidth===void 0?0:_this$state$leftWidth,_this$state$rowWidth=_this$state.rowWidth,rowWidth=_this$state$rowWidth===void 0?0:_this$state$rowWidth,rowState=_this$state.rowState;var _this$state$rightOffs=_this.state.rightOffset,rightOffset=_this$state$rightOffs===void 0?rowWidth:_this$state$rightOffs;var rightWidth=rowWidth-rightOffset;var _this$props13=_this.props,friction=_this$props13.friction,_this$props13$leftThr=_this$props13.leftThreshold,leftThreshold=_this$props13$leftThr===void 0?leftWidth/2:_this$props13$leftThr,_this$props13$rightTh=_this$props13.rightThreshold,rightThreshold=_this$props13$rightTh===void 0?rightWidth/2:_this$props13$rightTh;var startOffsetX=_this.currentOffset()+dragX/friction;var translationX=(dragX+DRAG_TOSS*velocityX)/friction;var toValue=0;if(rowState===0){if(translationX>leftThreshold){toValue=leftWidth;}else if(translationX<-rightThreshold){toValue=-rightWidth;}}else if(rowState===1){if(translationX>-leftThreshold){toValue=leftWidth;}}else{if(translationX<rightThreshold){toValue=-rightWidth;}}_this.animateRow(startOffsetX,toValue,velocityX/friction);});_defineProperty(_assertThisInitialized(_this),\"animateRow\",function(fromValue,toValue,velocityX){var _this$state2=_this.state,dragX=_this$state2.dragX,rowTranslation=_this$state2.rowTranslation;dragX.setValue(0);rowTranslation.setValue(fromValue);_this.setState({rowState:Math.sign(toValue)});Animated.spring(rowTranslation,_objectSpread({restSpeedThreshold:1.7,restDisplacementThreshold:0.4,velocity:velocityX,bounciness:0,toValue:toValue,useNativeDriver:_this.props.useNativeAnimations},_this.props.animationOptions)).start(function(_ref2){var finished=_ref2.finished;if(finished){if(toValue>0){var _this$props$onSwipeab3,_this$props3,_this$props$onSwipeab4,_this$props4;(_this$props$onSwipeab3=(_this$props3=_this.props).onSwipeableLeftOpen)===null||_this$props$onSwipeab3===void 0?void 0:_this$props$onSwipeab3.call(_this$props3);(_this$props$onSwipeab4=(_this$props4=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab4===void 0?void 0:_this$props$onSwipeab4.call(_this$props4,'left',_assertThisInitialized(_this));}else if(toValue<0){var _this$props$onSwipeab5,_this$props5,_this$props$onSwipeab6,_this$props6;(_this$props$onSwipeab5=(_this$props5=_this.props).onSwipeableRightOpen)===null||_this$props$onSwipeab5===void 0?void 0:_this$props$onSwipeab5.call(_this$props5);(_this$props$onSwipeab6=(_this$props6=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab6===void 0?void 0:_this$props$onSwipeab6.call(_this$props6,'right',_assertThisInitialized(_this));}else{var _this$props$onSwipeab7,_this$props7;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab7=(_this$props7=_this.props).onSwipeableClose)===null||_this$props$onSwipeab7===void 0?void 0:_this$props$onSwipeab7.call(_this$props7,closingDirection,_assertThisInitialized(_this));}}});if(toValue>0){var _this$props$onSwipeab8,_this$props8,_this$props$onSwipeab9,_this$props9;(_this$props$onSwipeab8=(_this$props8=_this.props).onSwipeableLeftWillOpen)===null||_this$props$onSwipeab8===void 0?void 0:_this$props$onSwipeab8.call(_this$props8);(_this$props$onSwipeab9=(_this$props9=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab9===void 0?void 0:_this$props$onSwipeab9.call(_this$props9,'left');}else if(toValue<0){var _this$props$onSwipeab10,_this$props10,_this$props$onSwipeab11,_this$props11;(_this$props$onSwipeab10=(_this$props10=_this.props).onSwipeableRightWillOpen)===null||_this$props$onSwipeab10===void 0?void 0:_this$props$onSwipeab10.call(_this$props10);(_this$props$onSwipeab11=(_this$props11=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab11===void 0?void 0:_this$props$onSwipeab11.call(_this$props11,'right');}else{var _this$props$onSwipeab12,_this$props12;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab12=(_this$props12=_this.props).onSwipeableWillClose)===null||_this$props$onSwipeab12===void 0?void 0:_this$props$onSwipeab12.call(_this$props12,closingDirection);}});_defineProperty(_assertThisInitialized(_this),\"onRowLayout\",function(_ref3){var nativeEvent=_ref3.nativeEvent;_this.setState({rowWidth:nativeEvent.layout.width});});_defineProperty(_assertThisInitialized(_this),\"currentOffset\",function(){var _this$state3=_this.state,_this$state3$leftWidt=_this$state3.leftWidth,leftWidth=_this$state3$leftWidt===void 0?0:_this$state3$leftWidt,_this$state3$rowWidth=_this$state3.rowWidth,rowWidth=_this$state3$rowWidth===void 0?0:_this$state3$rowWidth,rowState=_this$state3.rowState;var _this$state$rightOffs2=_this.state.rightOffset,rightOffset=_this$state$rightOffs2===void 0?rowWidth:_this$state$rightOffs2;var rightWidth=rowWidth-rightOffset;if(rowState===1){return leftWidth;}else if(rowState===-1){return-rightWidth;}return 0;});_defineProperty(_assertThisInitialized(_this),\"close\",function(){_this.animateRow(_this.currentOffset(),0);});_defineProperty(_assertThisInitialized(_this),\"openLeft\",function(){var _this$state$leftWidth2=_this.state.leftWidth,leftWidth=_this$state$leftWidth2===void 0?0:_this$state$leftWidth2;_this.animateRow(_this.currentOffset(),leftWidth);});_defineProperty(_assertThisInitialized(_this),\"openRight\",function(){var _this$state$rowWidth2=_this.state.rowWidth,rowWidth=_this$state$rowWidth2===void 0?0:_this$state$rowWidth2;var _this$state$rightOffs3=_this.state.rightOffset,rightOffset=_this$state$rightOffs3===void 0?rowWidth:_this$state$rightOffs3;var rightWidth=rowWidth-rightOffset;_this.animateRow(_this.currentOffset(),-rightWidth);});_defineProperty(_assertThisInitialized(_this),\"reset\",function(){var _this$state4=_this.state,dragX=_this$state4.dragX,rowTranslation=_this$state4.rowTranslation;dragX.setValue(0);rowTranslation.setValue(0);_this.setState({rowState:0});});var _dragX=new Animated.Value(0);_this.state={dragX:_dragX,rowTranslation:new Animated.Value(0),rowState:0,leftWidth:undefined,rightOffset:undefined,rowWidth:undefined};_this.updateAnimatedEvent(_props,_this.state);_this.onGestureEvent=Animated.event([{nativeEvent:{translationX:_dragX}}],{useNativeDriver:_props.useNativeAnimations});return _this;}_createClass(Swipeable,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(props,state){if(this.props.friction!==props.friction||this.props.overshootLeft!==props.overshootLeft||this.props.overshootRight!==props.overshootRight||this.props.overshootFriction!==props.overshootFriction||this.state.leftWidth!==state.leftWidth||this.state.rightOffset!==state.rightOffset||this.state.rowWidth!==state.rowWidth){this.updateAnimatedEvent(props,state);}return true;}},{key:\"render\",value:function render(){var _this2=this;var rowState=this.state.rowState;var _this$props14=this.props,children=_this$props14.children,renderLeftActions=_this$props14.renderLeftActions,renderRightActions=_this$props14.renderRightActions,_this$props14$dragOff=_this$props14.dragOffsetFromLeftEdge,dragOffsetFromLeftEdge=_this$props14$dragOff===void 0?10:_this$props14$dragOff,_this$props14$dragOff2=_this$props14.dragOffsetFromRightEdge,dragOffsetFromRightEdge=_this$props14$dragOff2===void 0?10:_this$props14$dragOff2;var left=renderLeftActions&&React.createElement(Animated.View,{style:[styles.leftActions,{transform:[{translateX:this.leftActionTranslate}]}]},renderLeftActions(this.showLeftAction,this.transX,this),React.createElement(View,{onLayout:function onLayout(_ref4){var nativeEvent=_ref4.nativeEvent;return _this2.setState({leftWidth:nativeEvent.layout.x});}}));var right=renderRightActions&&React.createElement(Animated.View,{style:[styles.rightActions,{transform:[{translateX:this.rightActionTranslate}]}]},renderRightActions(this.showRightAction,this.transX,this),React.createElement(View,{onLayout:function onLayout(_ref5){var nativeEvent=_ref5.nativeEvent;return _this2.setState({rightOffset:nativeEvent.layout.x});}}));return React.createElement(PanGestureHandler,_extends({activeOffsetX:[-dragOffsetFromRightEdge,dragOffsetFromLeftEdge]},this.props,{onGestureEvent:this.onGestureEvent,onHandlerStateChange:this.onHandlerStateChange}),React.createElement(Animated.View,{onLayout:this.onRowLayout,style:[styles.container,this.props.containerStyle]},left,right,React.createElement(TapGestureHandler,{enabled:rowState!==0,onHandlerStateChange:this.onTapHandlerStateChange},React.createElement(Animated.View,{pointerEvents:rowState===0?'auto':'box-only',style:[{transform:[{translateX:this.transX}]},this.props.childrenContainerStyle]},children))));}}]);return Swipeable;}(Component);export{Swipeable as default};_defineProperty(Swipeable,\"defaultProps\",{friction:1,overshootFriction:1,useNativeAnimations:true});var styles=StyleSheet.create({container:{overflow:'hidden'},leftActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row-reverse':'row'}),rightActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row':'row-reverse'})});","map":{"version":3,"sources":["Swipeable.tsx"],"names":["React","Component","PanGestureHandler","TapGestureHandler","State","DRAG_TOSS","Swipeable","friction","overshootFriction","useNativeAnimations","constructor","props","dragX","Animated","Value","state","rowTranslation","rowState","leftWidth","undefined","rightOffset","rowWidth","updateAnimatedEvent","onGestureEvent","event","nativeEvent","translationX","useNativeDriver","shouldComponentUpdate","overshootLeft","overshootRight","rightWidth","Math","max","transX","add","interpolate","inputRange","outputRange","showLeftAction","leftActionTranslate","Number","MIN_VALUE","extrapolate","showRightAction","rightActionTranslate","oldState","ACTIVE","close","ev","handleRelease","velocityX","direction","onSwipeableOpenStartDrag","onSwipeableCloseStartDrag","leftThreshold","rightThreshold","startOffsetX","currentOffset","toValue","animateRow","fromValue","setValue","setState","sign","spring","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","animationOptions","start","finished","onSwipeableLeftOpen","onSwipeableOpen","onSwipeableRightOpen","closingDirection","onSwipeableClose","onSwipeableLeftWillOpen","onSwipeableWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","layout","width","render","children","renderLeftActions","renderRightActions","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","left","styles","leftActions","transform","translateX","x","right","rightActions","onHandlerStateChange","onRowLayout","container","containerStyle","onTapHandlerStateChange","childrenContainerStyle","create","overflow","StyleSheet","absoluteFillObject","flexDirection","I18nManager","isRTL"],"mappings":"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","sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerProps,\n} from '../handlers/PanGestureHandler';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerEventPayload,\n} from '../handlers/TapGestureHandler';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\n// Animated.AnimatedInterpolation has been converted to a generic type\n// in @types/react-native 0.70. This way we can maintain compatibility\n// with all versions of @types/react-native\ntype AnimatedInterpolation = ReturnType<Animated.Value['interpolate']>;\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Distance that the panel must be dragged from the left edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromLeftEdge?: number;\n\n  /**\n   * Distance that the panel must be dragged from the right edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromRightEdge?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when left action panel gets open.\n   */\n  onSwipeableLeftOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when right action panel gets open.\n   */\n  onSwipeableRightOpen?: () => void;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (direction: 'left' | 'right', swipeable: Swipeable) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: 'left' | 'right',\n    swipeable: Swipeable\n  ) => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when left action panel starts animating on open.\n   */\n  onSwipeableLeftWillOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when right action panel starts animating on open.\n   */\n  onSwipeableRightWillOpen?: () => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to open.\n   */\n  onSwipeableOpenStartDrag?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to close.\n   */\n  onSwipeableCloseStartDrag?: (direction: 'left' | 'right') => void;\n\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, +]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progressAnimatedValue: AnimatedInterpolation,\n    dragAnimatedValue: AnimatedInterpolation,\n    swipeable: Swipeable\n  ) => React.ReactNode;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, -]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progressAnimatedValue: AnimatedInterpolation,\n    dragAnimatedValue: AnimatedInterpolation,\n    swipeable: Swipeable\n  ) => React.ReactNode;\n\n  useNativeAnimations?: boolean;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n}\n\ntype SwipeableState = {\n  dragX: Animated.Value;\n  rowTranslation: Animated.Value;\n  rowState: number;\n  leftWidth?: number;\n  rightOffset?: number;\n  rowWidth?: number;\n};\n\nexport default class Swipeable extends Component<\n  SwipeableProps,\n  SwipeableState\n> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n\n  constructor(props: SwipeableProps) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this.updateAnimatedEvent(props, this.state);\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations! }\n    );\n  }\n\n  shouldComponentUpdate(props: SwipeableProps, state: SwipeableState) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n\n    return true;\n  }\n\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private transX?: AnimatedInterpolation;\n  private showLeftAction?: AnimatedInterpolation | Animated.Value;\n  private leftActionTranslate?: AnimatedInterpolation;\n  private showRightAction?: AnimatedInterpolation | Animated.Value;\n  private rightActionTranslate?: AnimatedInterpolation;\n\n  private updateAnimatedEvent = (\n    props: SwipeableProps,\n    state: SwipeableState\n  ) => {\n    const { friction, overshootFriction } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const { overshootLeft = leftWidth > 0, overshootRight = rightWidth > 0 } =\n      props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction!],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [-rightWidth - 1, -rightWidth, leftWidth, leftWidth + 1],\n      outputRange: [\n        -rightWidth - (overshootRight ? 1 / overshootFriction! : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 / overshootFriction! : 0),\n      ],\n    });\n    this.transX = transX;\n    this.showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this.leftActionTranslate = this.showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this.showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this.rightActionTranslate = this.showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  private onHandlerStateChange = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    if (ev.nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease(ev);\n    }\n\n    if (ev.nativeEvent.state === State.ACTIVE) {\n      const { velocityX, translationX: dragX } = ev.nativeEvent;\n      const { rowState } = this.state;\n      const { friction } = this.props;\n\n      const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n      const direction =\n        rowState === -1\n          ? 'right'\n          : rowState === 1\n          ? 'left'\n          : translationX > 0\n          ? 'left'\n          : 'right';\n\n      if (rowState === 0) {\n        this.props.onSwipeableOpenStartDrag?.(direction);\n      } else {\n        this.props.onSwipeableCloseStartDrag?.(direction);\n      }\n    }\n  };\n\n  private handleRelease = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    const { velocityX, translationX: dragX } = ev.nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this.currentOffset() + dragX / friction!;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this.animateRow(startOffsetX, toValue, velocityX / friction!);\n  };\n\n  private animateRow = (\n    fromValue: number,\n    toValue: number,\n    velocityX?:\n      | number\n      | {\n          x: number;\n          y: number;\n        }\n  ) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0) {\n          this.props.onSwipeableLeftOpen?.();\n          this.props.onSwipeableOpen?.('left', this);\n        } else if (toValue < 0) {\n          this.props.onSwipeableRightOpen?.();\n          this.props.onSwipeableOpen?.('right', this);\n        } else {\n          const closingDirection = fromValue > 0 ? 'left' : 'right';\n          this.props.onSwipeableClose?.(closingDirection, this);\n        }\n      }\n    });\n    if (toValue > 0) {\n      this.props.onSwipeableLeftWillOpen?.();\n      this.props.onSwipeableWillOpen?.('left');\n    } else if (toValue < 0) {\n      this.props.onSwipeableRightWillOpen?.();\n      this.props.onSwipeableWillOpen?.('right');\n    } else {\n      const closingDirection = fromValue > 0 ? 'left' : 'right';\n      this.props.onSwipeableWillClose?.(closingDirection);\n    }\n  };\n\n  private onRowLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  private currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this.animateRow(this.currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this.animateRow(this.currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this.animateRow(this.currentOffset(), -rightWidth);\n  };\n\n  reset = () => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(0);\n    this.setState({ rowState: 0 });\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const {\n      children,\n      renderLeftActions,\n      renderRightActions,\n      dragOffsetFromLeftEdge = 10,\n      dragOffsetFromRightEdge = 10,\n    } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          // all those and below parameters can have ! since they are all\n          // asigned in constructor in `updateAnimatedEvent` but TS cannot spot\n          // it for some reason\n          { transform: [{ translateX: this.leftActionTranslate! }] },\n        ]}>\n        {renderLeftActions(this.showLeftAction!, this.transX!, this)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this.rightActionTranslate! }] },\n        ]}>\n        {renderRightActions(this.showRightAction!, this.transX!, this)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-dragOffsetFromRightEdge, dragOffsetFromLeftEdge]}\n        {...this.props}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}>\n        <Animated.View\n          onLayout={this.onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this.onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this.transX! }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}