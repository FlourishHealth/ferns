{"ast":null,"code":"import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{CodedError}from'expo-modules-core';export var ClipboardUnavailableException=function(_CodedError){_inherits(ClipboardUnavailableException,_CodedError);var _super=_createSuper(ClipboardUnavailableException);function ClipboardUnavailableException(){_classCallCheck(this,ClipboardUnavailableException);return _super.call(this,'ERR_CLIPBOARD_UNAVAILABLE',\"The 'AsyncClipboard' API is not available on this browser\");}return _createClass(ClipboardUnavailableException);}(CodedError);export var CopyFailureException=function(_CodedError2){_inherits(CopyFailureException,_CodedError2);var _super2=_createSuper(CopyFailureException);function CopyFailureException(cause){_classCallCheck(this,CopyFailureException);return _super2.call(this,'ERR_COPY_FAILURE',`Failed to copy to clipboard: ${cause}`);}return _createClass(CopyFailureException);}(CodedError);export var PasteFailureException=function(_CodedError3){_inherits(PasteFailureException,_CodedError3);var _super3=_createSuper(PasteFailureException);function PasteFailureException(cause){_classCallCheck(this,PasteFailureException);return _super3.call(this,'ERR_COPY_FAILURE',`Failed to paste from clipboard: ${cause}`);}return _createClass(PasteFailureException);}(CodedError);export var NoPermissionException=function(_CodedError4){_inherits(NoPermissionException,_CodedError4);var _super4=_createSuper(NoPermissionException);function NoPermissionException(){_classCallCheck(this,NoPermissionException);return _super4.call(this,'ERR_NO_PERMISSION','User denied permission to access clipboard');}return _createClass(NoPermissionException);}(CodedError);","map":{"version":3,"sources":["../../src/web/Exceptions.ts"],"names":[],"mappings":"qgCAAA,OAAS,UAAU,KAAQ,mBAAmB,CAE9C,UAAa,CAAA,6BAA8B,UAAA,WAAA,EAAA,SAAA,CAAA,6BAAA,CAAA,WAAA,MAAA,MAAA,CAAA,YAAA,CAAA,6BAAA,EACzC,SAAA,8BAAA,CAAA,CAAA,eAAA,MAAA,6BAAA,SAAA,MAAA,CAAA,IAAA,MACQ,2BAA2B,CAAE,2DAA2D,EAChG,CAAC,OAAA,YAAA,CAAA,6BAAA,IAHgD,UAAU,EAM7D,UAAa,CAAA,oBAAqB,UAAA,YAAA,EAAA,SAAA,CAAA,oBAAA,CAAA,YAAA,MAAA,OAAA,CAAA,YAAA,CAAA,oBAAA,EAChC,SAAA,qBAAY,KAAa,CAAA,CAAA,eAAA,MAAA,oBAAA,SAAA,OAAA,CAAA,IAAA,MACjB,kBAAkB,CAAE,gCAAgC,KAAK,EAAE,EACnE,CAAC,OAAA,YAAA,CAAA,oBAAA,IAHuC,UAAU,EAMpD,UAAa,CAAA,qBAAsB,UAAA,YAAA,EAAA,SAAA,CAAA,qBAAA,CAAA,YAAA,MAAA,OAAA,CAAA,YAAA,CAAA,qBAAA,EACjC,SAAA,sBAAY,KAAa,CAAA,CAAA,eAAA,MAAA,qBAAA,SAAA,OAAA,CAAA,IAAA,MACjB,kBAAkB,CAAE,mCAAmC,KAAK,EAAE,EACtE,CAAC,OAAA,YAAA,CAAA,qBAAA,IAHwC,UAAU,EAMrD,UAAa,CAAA,qBAAsB,UAAA,YAAA,EAAA,SAAA,CAAA,qBAAA,CAAA,YAAA,MAAA,OAAA,CAAA,YAAA,CAAA,qBAAA,EACjC,SAAA,sBAAA,CAAA,CAAA,eAAA,MAAA,qBAAA,SAAA,OAAA,CAAA,IAAA,MACQ,mBAAmB,CAAE,4CAA4C,EACzE,CAAC,OAAA,YAAA,CAAA,qBAAA,IAHwC,UAAU","sourcesContent":["import { CodedError } from 'expo-modules-core';\n\nexport class ClipboardUnavailableException extends CodedError {\n  constructor() {\n    super('ERR_CLIPBOARD_UNAVAILABLE', \"The 'AsyncClipboard' API is not available on this browser\");\n  }\n}\n\nexport class CopyFailureException extends CodedError {\n  constructor(cause: string) {\n    super('ERR_COPY_FAILURE', `Failed to copy to clipboard: ${cause}`);\n  }\n}\n\nexport class PasteFailureException extends CodedError {\n  constructor(cause: string) {\n    super('ERR_COPY_FAILURE', `Failed to paste from clipboard: ${cause}`);\n  }\n}\n\nexport class NoPermissionException extends CodedError {\n  constructor() {\n    super('ERR_NO_PERMISSION', 'User denied permission to access clipboard');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}