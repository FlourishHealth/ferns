{"ast":null,"code":"'use strict';import{useEffect,useRef}from'react';import FrameCallbackRegistryJS from'../frameCallback/FrameCallbackRegistryJS';var frameCallbackRegistry=new FrameCallbackRegistryJS();export function useFrameCallback(callback){var autostart=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var ref=useRef({setActive:function setActive(isActive){frameCallbackRegistry.manageStateFrameCallback(ref.current.callbackId,isActive);ref.current.isActive=isActive;},isActive:autostart,callbackId:-1});useEffect(function(){ref.current.callbackId=frameCallbackRegistry.registerFrameCallback(callback);ref.current.setActive(ref.current.isActive);return function(){frameCallbackRegistry.unregisterFrameCallback(ref.current.callbackId);ref.current.callbackId=-1;};},[callback,autostart]);return ref.current;}","map":{"version":3,"names":["useEffect","useRef","FrameCallbackRegistryJS","frameCallbackRegistry","useFrameCallback","callback","autostart","arguments","length","undefined","ref","setActive","isActive","manageStateFrameCallback","current","callbackId","registerFrameCallback","unregisterFrameCallback"],"sources":["/Users/josh/src/ui/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useFrameCallback.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from '../frameCallback/FrameCallbackRegistryJS';\nimport type { FrameInfo } from '../frameCallback/FrameCallbackRegistryUI';\n\n/**\n * @param setActive - A function that lets you start the frame callback or stop it from running.\n * @param isActive - A boolean indicating whether a callback is running.\n * @param callbackId - A number indicating a unique identifier of the frame callback.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback#returns\n */\nexport type FrameCallback = {\n  setActive: (isActive: boolean) => void;\n  isActive: boolean;\n  callbackId: number;\n};\nconst frameCallbackRegistry = new FrameCallbackRegistryJS();\n\n/**\n * Lets you run a function on every frame update.\n *\n * @param callback - A function executed on every frame update.\n * @param autostart - Whether the callback should start automatically. Defaults to `true`.\n * @returns A frame callback object - {@link FrameCallback}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback\n */\nexport function useFrameCallback(\n  callback: (frameInfo: FrameInfo) => void,\n  autostart = true\n): FrameCallback {\n  const ref = useRef<FrameCallback>({\n    setActive: (isActive: boolean) => {\n      frameCallbackRegistry.manageStateFrameCallback(\n        ref.current.callbackId,\n        isActive\n      );\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1,\n  });\n\n  useEffect(() => {\n    ref.current.callbackId =\n      frameCallbackRegistry.registerFrameCallback(callback);\n    ref.current.setActive(ref.current.isActive);\n\n    return () => {\n      frameCallbackRegistry.unregisterFrameCallback(ref.current.callbackId);\n      ref.current.callbackId = -1;\n    };\n  }, [callback, autostart]);\n\n  return ref.current;\n}\n"],"mappings":"AAAA,YAAY,CACZ,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,MAAO,CAAAC,uBAAuB,KAAM,0CAA0C,CAc9E,GAAM,CAAAC,qBAAqB,CAAG,GAAI,CAAAD,uBAAuB,EAAE,CAU3D,MAAO,SAAS,CAAAE,gBAAgBA,CAC9BC,QAAwC,CAEzB,IADf,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAEhB,GAAM,CAAAG,GAAG,CAAGT,MAAM,CAAgB,CAChCU,SAAS,CAAG,SAAAA,UAAAC,QAAiB,CAAK,CAChCT,qBAAqB,CAACU,wBAAwB,CAC5CH,GAAG,CAACI,OAAO,CAACC,UAAU,CACtBH,QAAQ,CACT,CACDF,GAAG,CAACI,OAAO,CAACF,QAAQ,CAAGA,QAAQ,CACjC,CAAC,CACDA,QAAQ,CAAEN,SAAS,CACnBS,UAAU,CAAE,CAAC,CACf,CAAC,CAAC,CAEFf,SAAS,CAAC,UAAM,CACdU,GAAG,CAACI,OAAO,CAACC,UAAU,CACpBZ,qBAAqB,CAACa,qBAAqB,CAACX,QAAQ,CAAC,CACvDK,GAAG,CAACI,OAAO,CAACH,SAAS,CAACD,GAAG,CAACI,OAAO,CAACF,QAAQ,CAAC,CAE3C,MAAO,WAAM,CACXT,qBAAqB,CAACc,uBAAuB,CAACP,GAAG,CAACI,OAAO,CAACC,UAAU,CAAC,CACrEL,GAAG,CAACI,OAAO,CAACC,UAAU,CAAG,CAAC,CAAC,CAC7B,CAAC,CACH,CAAC,CAAE,CAACV,QAAQ,CAAEC,SAAS,CAAC,CAAC,CAEzB,MAAO,CAAAI,GAAG,CAACI,OAAO,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}