{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/josh/src/ui/apps/demo/node_modules/react-native-actions-sheet/dist/src/views/ScrollView.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useImperativeHandle } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { ScrollView as RNGHScrollView } from 'react-native-gesture-handler';\nimport { useScrollHandlers } from '../hooks/use-scroll-handlers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction $ScrollView(props, ref) {\n  var handlers = useScrollHandlers({\n    hasRefreshControl: !!props.refreshControl,\n    refreshControlBoundary: props.refreshControlGestureArea || 0.15\n  });\n  useImperativeHandle(ref, function () {\n    return handlers.ref;\n  });\n  var ScrollComponent = Platform.OS === 'web' ? RNScrollView : RNGHScrollView;\n  return _jsxDEV(ScrollComponent, _objectSpread(_objectSpread(_objectSpread({}, props), handlers), {}, {\n    onScroll: function onScroll(event) {\n      var _a;\n      handlers.onScroll(event);\n      (_a = props.onScroll) === null || _a === void 0 ? void 0 : _a.call(props, event);\n    },\n    onLayout: function onLayout(event) {\n      var _a;\n      handlers.onLayout();\n      (_a = props.onLayout) === null || _a === void 0 ? void 0 : _a.call(props, event);\n    },\n    bounces: false,\n    scrollEventThrottle: 1\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n}\nexport var ScrollView = React.forwardRef($ScrollView);","map":{"version":3,"names":["React","useImperativeHandle","Platform","RNScrollView","ScrollView","RNGHScrollView","useScrollHandlers","jsxDEV","_jsxDEV","$ScrollView","props","ref","handlers","hasRefreshControl","refreshControl","refreshControlBoundary","refreshControlGestureArea","ScrollComponent","OS","_objectSpread","onScroll","event","_a","call","onLayout","bounces","scrollEventThrottle","fileName","_jsxFileName","lineNumber","columnNumber","forwardRef"],"sources":["/Users/josh/src/ui/apps/demo/node_modules/react-native-actions-sheet/dist/src/views/ScrollView.js"],"sourcesContent":["/* eslint-disable curly */\nimport React, { useImperativeHandle } from 'react';\nimport { Platform, ScrollView as RNScrollView, } from 'react-native';\nimport { ScrollView as RNGHScrollView, } from 'react-native-gesture-handler';\nimport { useScrollHandlers } from '../hooks/use-scroll-handlers';\nfunction $ScrollView(props, ref) {\n    var handlers = useScrollHandlers({\n        hasRefreshControl: !!props.refreshControl,\n        refreshControlBoundary: props.refreshControlGestureArea || 0.15,\n    });\n    useImperativeHandle(ref, function () { return handlers.ref; });\n    var ScrollComponent = Platform.OS === 'web' ? RNScrollView : RNGHScrollView;\n    return (<ScrollComponent {...props} {...handlers} onScroll={function (event) {\n            var _a;\n            handlers.onScroll(event);\n            (_a = props.onScroll) === null || _a === void 0 ? void 0 : _a.call(props, event);\n        }} onLayout={function (event) {\n            var _a;\n            handlers.onLayout();\n            (_a = props.onLayout) === null || _a === void 0 ? void 0 : _a.call(props, event);\n        }} bounces={false} scrollEventThrottle={1}/>);\n}\nexport var ScrollView = React.forwardRef($ScrollView);\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,mBAAmB,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAEnD,SAASC,UAAU,IAAIC,cAAc,QAAS,8BAA8B;AAC5E,SAASC,iBAAiB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjE,SAASC,WAAWA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC7B,IAAIC,QAAQ,GAAGN,iBAAiB,CAAC;IAC7BO,iBAAiB,EAAE,CAAC,CAACH,KAAK,CAACI,cAAc;IACzCC,sBAAsB,EAAEL,KAAK,CAACM,yBAAyB,IAAI;EAC/D,CAAC,CAAC;EACFf,mBAAmB,CAACU,GAAG,EAAE,YAAY;IAAE,OAAOC,QAAQ,CAACD,GAAG;EAAE,CAAC,CAAC;EAC9D,IAAIM,eAAe,GAAGf,QAAQ,CAACgB,EAAE,KAAK,KAAK,GAAGf,YAAY,GAAGE,cAAc;EAC3E,OAAQG,OAAA,CAACS,eAAe,EAAAE,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAKT,KAAK,GAAME,QAAQ;IAAEQ,QAAQ,EAAE,SAAAA,SAAUC,KAAK,EAAE;MACrE,IAAIC,EAAE;MACNV,QAAQ,CAACQ,QAAQ,CAACC,KAAK,CAAC;MACxB,CAACC,EAAE,GAAGZ,KAAK,CAACU,QAAQ,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACb,KAAK,EAAEW,KAAK,CAAC;IACpF,CAAE;IAACG,QAAQ,EAAE,SAAAA,SAAUH,KAAK,EAAE;MAC1B,IAAIC,EAAE;MACNV,QAAQ,CAACY,QAAQ,CAAC,CAAC;MACnB,CAACF,EAAE,GAAGZ,KAAK,CAACc,QAAQ,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACb,KAAK,EAAEW,KAAK,CAAC;IACpF,CAAE;IAACI,OAAO,EAAE,KAAM;IAACC,mBAAmB,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACpD;AACA,OAAO,IAAI1B,UAAU,GAAGJ,KAAK,CAAC+B,UAAU,CAACtB,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}