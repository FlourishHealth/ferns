{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"vertical\", \"children\", \"data\", \"renderItem\", \"renderAll\", \"index\", \"useReactNativeGestureHandler\", \"showPagination\", \"PaginationComponent\", \"paginationActiveColor\", \"paginationDefaultColor\", \"paginationStyle\", \"paginationStyleItem\", \"paginationStyleItemActive\", \"paginationStyleItemInactive\", \"onPaginationSelectedIndex\", \"paginationTapDisabled\", \"autoplayDelay\", \"autoplay\", \"autoplayLoop\", \"autoplayLoopKeepAnimation\", \"autoplayInvertDirection\", \"onChangeIndex\", \"onMomentumScrollEnd\", \"onViewableItemsChanged\", \"viewabilityConfig\", \"disableGesture\", \"e2eID\", \"paginationAccessibilityLabels\"];\nvar _jsxFileName = \"/Users/josh/src/ui/apps/demo/node_modules/react-native-swiper-flatlist/src/components/SwiperFlatList/SwiperFlatList.tsx\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useRef } from 'react';\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { Pagination } from '../Pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MILLISECONDS = 1000;\nvar FIRST_INDEX = 0;\nvar ITEM_VISIBLE_PERCENT_THRESHOLD = 60;\nexport var SwiperFlatList = React.forwardRef(function (_ref, ref) {\n  var _ref$vertical = _ref.vertical,\n    vertical = _ref$vertical === void 0 ? false : _ref$vertical,\n    children = _ref.children,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    renderItem = _ref.renderItem,\n    _ref$renderAll = _ref.renderAll,\n    renderAll = _ref$renderAll === void 0 ? false : _ref$renderAll,\n    _ref$index = _ref.index,\n    index = _ref$index === void 0 ? I18nManager.isRTL ? data.length - 1 : FIRST_INDEX : _ref$index,\n    _ref$useReactNativeGe = _ref.useReactNativeGestureHandler,\n    useReactNativeGestureHandler = _ref$useReactNativeGe === void 0 ? false : _ref$useReactNativeGe,\n    _ref$showPagination = _ref.showPagination,\n    showPagination = _ref$showPagination === void 0 ? false : _ref$showPagination,\n    _ref$PaginationCompon = _ref.PaginationComponent,\n    PaginationComponent = _ref$PaginationCompon === void 0 ? Pagination : _ref$PaginationCompon,\n    paginationActiveColor = _ref.paginationActiveColor,\n    paginationDefaultColor = _ref.paginationDefaultColor,\n    paginationStyle = _ref.paginationStyle,\n    paginationStyleItem = _ref.paginationStyleItem,\n    paginationStyleItemActive = _ref.paginationStyleItemActive,\n    paginationStyleItemInactive = _ref.paginationStyleItemInactive,\n    onPaginationSelectedIndex = _ref.onPaginationSelectedIndex,\n    _ref$paginationTapDis = _ref.paginationTapDisabled,\n    paginationTapDisabled = _ref$paginationTapDis === void 0 ? false : _ref$paginationTapDis,\n    _ref$autoplayDelay = _ref.autoplayDelay,\n    autoplayDelay = _ref$autoplayDelay === void 0 ? 3 : _ref$autoplayDelay,\n    _ref$autoplay = _ref.autoplay,\n    autoplay = _ref$autoplay === void 0 ? false : _ref$autoplay,\n    _ref$autoplayLoop = _ref.autoplayLoop,\n    autoplayLoop = _ref$autoplayLoop === void 0 ? false : _ref$autoplayLoop,\n    _ref$autoplayLoopKeep = _ref.autoplayLoopKeepAnimation,\n    autoplayLoopKeepAnimation = _ref$autoplayLoopKeep === void 0 ? false : _ref$autoplayLoopKeep,\n    _ref$autoplayInvertDi = _ref.autoplayInvertDirection,\n    autoplayInvertDirection = _ref$autoplayInvertDi === void 0 ? I18nManager.isRTL : _ref$autoplayInvertDi,\n    onChangeIndex = _ref.onChangeIndex,\n    onMomentumScrollEnd = _ref.onMomentumScrollEnd,\n    onViewableItemsChanged = _ref.onViewableItemsChanged,\n    _ref$viewabilityConfi = _ref.viewabilityConfig,\n    viewabilityConfig = _ref$viewabilityConfi === void 0 ? {} : _ref$viewabilityConfi,\n    _ref$disableGesture = _ref.disableGesture,\n    disableGesture = _ref$disableGesture === void 0 ? false : _ref$disableGesture,\n    e2eID = _ref.e2eID,\n    paginationAccessibilityLabels = _ref.paginationAccessibilityLabels,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _data = [];\n  var _renderItem;\n  if (children) {\n    _data = Array.isArray(children) ? children : [children];\n    _renderItem = function _renderItem(_ref2) {\n      var item = _ref2.item;\n      return item;\n    };\n  } else if (data) {\n    _data = data;\n    _renderItem = renderItem;\n  } else {\n    console.error('Invalid props, `data` or `children` is required');\n  }\n  var size = _data.length;\n  var _initialNumToRender = renderAll ? size : 1;\n  var _React$useState = React.useState({\n      index: index,\n      prevIndex: index\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentIndexes = _React$useState2[0],\n    setCurrentIndexes = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    ignoreOnMomentumScrollEnd = _React$useState4[0],\n    setIgnoreOnMomentumScrollEnd = _React$useState4[1];\n  var flatListElement = React.useRef(null);\n  var _React$useState5 = React.useState(!disableGesture),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    scrollEnabled = _React$useState6[0],\n    setScrollEnabled = _React$useState6[1];\n  React.useEffect(function () {\n    setScrollEnabled(!disableGesture);\n  }, [disableGesture]);\n  var _onChangeIndex = React.useCallback(function (_ref3) {\n    var _index = _ref3.index,\n      _prevIndex = _ref3.prevIndex;\n    if (_index !== _prevIndex) {\n      onChangeIndex == null ? void 0 : onChangeIndex({\n        index: _index,\n        prevIndex: _prevIndex\n      });\n    }\n  }, [onChangeIndex]);\n  var _scrollToIndex = React.useCallback(function (params) {\n    var _flatListElement$curr;\n    var indexToScroll = params.index,\n      _params$animated = params.animated,\n      animated = _params$animated === void 0 ? true : _params$animated;\n    var newParams = {\n      animated: animated,\n      index: indexToScroll\n    };\n    setIgnoreOnMomentumScrollEnd(true);\n    var next = {\n      index: indexToScroll,\n      prevIndex: currentIndexes.index\n    };\n    if (currentIndexes.index !== next.index && currentIndexes.prevIndex !== next.prevIndex) {\n      setCurrentIndexes({\n        index: next.index,\n        prevIndex: next.prevIndex\n      });\n    } else if (currentIndexes.index !== next.index) {\n      setCurrentIndexes(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          index: next.index\n        });\n      });\n    } else if (currentIndexes.prevIndex !== next.prevIndex) {\n      setCurrentIndexes(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          prevIndex: next.prevIndex\n        });\n      });\n    }\n    flatListElement == null ? void 0 : (_flatListElement$curr = flatListElement.current) == null ? void 0 : _flatListElement$curr.scrollToIndex(newParams);\n  }, [currentIndexes.index, currentIndexes.prevIndex]);\n  React.useEffect(function () {\n    _onChangeIndex({\n      index: currentIndexes.index,\n      prevIndex: currentIndexes.prevIndex\n    });\n  }, [_onChangeIndex, currentIndexes.index, currentIndexes.prevIndex]);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollToIndex: function scrollToIndex(item) {\n        setScrollEnabled(true);\n        _scrollToIndex(item);\n        setScrollEnabled(!disableGesture);\n      },\n      getCurrentIndex: function getCurrentIndex() {\n        return currentIndexes.index;\n      },\n      getPrevIndex: function getPrevIndex() {\n        return currentIndexes.prevIndex;\n      },\n      goToLastIndex: function goToLastIndex() {\n        setScrollEnabled(true);\n        _scrollToIndex({\n          index: I18nManager.isRTL ? FIRST_INDEX : size - 1\n        });\n        setScrollEnabled(!disableGesture);\n      },\n      goToFirstIndex: function goToFirstIndex() {\n        setScrollEnabled(true);\n        _scrollToIndex({\n          index: I18nManager.isRTL ? size - 1 : FIRST_INDEX\n        });\n        setScrollEnabled(!disableGesture);\n      }\n    };\n  });\n  React.useEffect(function () {\n    var isLastIndexEnd = autoplayInvertDirection ? currentIndexes.index === FIRST_INDEX : currentIndexes.index === _data.length - 1;\n    var shouldContinuoWithAutoplay = autoplay && !isLastIndexEnd;\n    var autoplayTimer;\n    if (shouldContinuoWithAutoplay || autoplayLoop) {\n      autoplayTimer = setTimeout(function () {\n        if (_data.length < 1) {\n          return;\n        }\n        if (!autoplay) {\n          return;\n        }\n        var nextIncrement = autoplayInvertDirection ? -1 : +1;\n        var nextIndex = (currentIndexes.index + nextIncrement) % _data.length;\n        if (autoplayInvertDirection && nextIndex < FIRST_INDEX) {\n          nextIndex = _data.length - 1;\n        }\n        var animate = !isLastIndexEnd || autoplayLoopKeepAnimation;\n        _scrollToIndex({\n          index: nextIndex,\n          animated: animate\n        });\n      }, autoplayDelay * MILLISECONDS);\n    }\n    return function () {\n      return clearTimeout(autoplayTimer);\n    };\n  }, [autoplay, currentIndexes.index, _data.length, autoplayInvertDirection, autoplayLoop, autoplayDelay, autoplayLoopKeepAnimation, _scrollToIndex]);\n  var _onMomentumScrollEnd = function _onMomentumScrollEnd(event) {\n    if (ignoreOnMomentumScrollEnd) {\n      setIgnoreOnMomentumScrollEnd(false);\n      return;\n    }\n    onMomentumScrollEnd == null ? void 0 : onMomentumScrollEnd({\n      index: currentIndexes.index\n    }, event);\n  };\n  var _onViewableItemsChanged = React.useMemo(function () {\n    return function (params) {\n      var changed = params.changed;\n      var newItem = changed == null ? void 0 : changed[FIRST_INDEX];\n      if (newItem !== undefined) {\n        var nextIndex = newItem.index;\n        if (newItem.isViewable) {\n          setCurrentIndexes(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              index: nextIndex\n            });\n          });\n        } else {\n          setCurrentIndexes(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              prevIndex: nextIndex\n            });\n          });\n        }\n      }\n      onViewableItemsChanged == null ? void 0 : onViewableItemsChanged(params);\n    };\n  }, [onViewableItemsChanged]);\n  var viewabilityConfigCallbackPairs = useRef([{\n    onViewableItemsChanged: _onViewableItemsChanged,\n    viewabilityConfig: _objectSpread({\n      minimumViewTime: 200,\n      itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD\n    }, viewabilityConfig)\n  }]);\n  var flatListProps = _objectSpread(_objectSpread({\n    scrollEnabled: scrollEnabled,\n    ref: flatListElement,\n    keyExtractor: function keyExtractor(_item, _index) {\n      var _ref4, _item$key;\n      var item = _item;\n      var key = (_ref4 = (_item$key = item == null ? void 0 : item.key) != null ? _item$key : item == null ? void 0 : item.id) != null ? _ref4 : _index.toString();\n      return key;\n    },\n    horizontal: !vertical,\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    pagingEnabled: true\n  }, props), {}, {\n    onMomentumScrollEnd: _onMomentumScrollEnd,\n    onScrollToIndexFailed: function onScrollToIndexFailed(info) {\n      return setTimeout(function () {\n        return _scrollToIndex({\n          index: info.index,\n          animated: false\n        });\n      });\n    },\n    data: _data,\n    renderItem: _renderItem,\n    initialNumToRender: _initialNumToRender,\n    initialScrollIndex: index,\n    viewabilityConfig: _objectSpread({\n      minimumViewTime: 200,\n      itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD\n    }, viewabilityConfig),\n    viewabilityConfigCallbackPairs: Platform.OS === 'ios' ? viewabilityConfigCallbackPairs.current : undefined,\n    onViewableItemsChanged: Platform.OS === 'android' ? _onViewableItemsChanged : undefined,\n    testID: e2eID\n  });\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  if (props.getItemLayout === undefined) {\n    var itemDimension = vertical ? height : width;\n    flatListProps.getItemLayout = function (__data, ItemIndex) {\n      return {\n        length: itemDimension,\n        offset: itemDimension * ItemIndex,\n        index: ItemIndex\n      };\n    };\n  }\n  if (Platform.OS === 'web') {\n    flatListProps.dataSet = {\n      'paging-enabled-fix': true\n    };\n  }\n  if (useReactNativeGestureHandler) {\n    console.warn('Please remove `useReactNativeGestureHandler` and import the library like:');\n    console.warn(\"import { SwiperFlatListWithGestureHandler } from 'react-native-swiper-flatlist/WithGestureHandler';\");\n  }\n  return _jsxDEV(React.Fragment, {\n    children: [_jsxDEV(RNFlatList, _objectSpread({}, flatListProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, _this), showPagination ? _jsxDEV(PaginationComponent, {\n      size: size,\n      paginationIndex: currentIndexes.index,\n      scrollToIndex: function scrollToIndex(params) {\n        _scrollToIndex(params);\n      },\n      paginationActiveColor: paginationActiveColor,\n      paginationDefaultColor: paginationDefaultColor,\n      paginationStyle: paginationStyle,\n      paginationStyleItem: paginationStyleItem,\n      paginationStyleItemActive: paginationStyleItemActive,\n      paginationStyleItemInactive: paginationStyleItemInactive,\n      onPaginationSelectedIndex: onPaginationSelectedIndex,\n      paginationTapDisabled: paginationTapDisabled,\n      e2eID: e2eID,\n      paginationAccessibilityLabels: paginationAccessibilityLabels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 7\n  }, _this);\n});","map":{"version":3,"names":["React","useRef","RNFlatList","I18nManager","Platform","useWindowDimensions","Pagination","jsxDEV","_jsxDEV","MILLISECONDS","FIRST_INDEX","ITEM_VISIBLE_PERCENT_THRESHOLD","SwiperFlatList","forwardRef","_ref","ref","_ref$vertical","vertical","children","_ref$data","data","renderItem","_ref$renderAll","renderAll","_ref$index","index","isRTL","length","_ref$useReactNativeGe","useReactNativeGestureHandler","_ref$showPagination","showPagination","_ref$PaginationCompon","PaginationComponent","paginationActiveColor","paginationDefaultColor","paginationStyle","paginationStyleItem","paginationStyleItemActive","paginationStyleItemInactive","onPaginationSelectedIndex","_ref$paginationTapDis","paginationTapDisabled","_ref$autoplayDelay","autoplayDelay","_ref$autoplay","autoplay","_ref$autoplayLoop","autoplayLoop","_ref$autoplayLoopKeep","autoplayLoopKeepAnimation","_ref$autoplayInvertDi","autoplayInvertDirection","onChangeIndex","onMomentumScrollEnd","onViewableItemsChanged","_ref$viewabilityConfi","viewabilityConfig","_ref$disableGesture","disableGesture","e2eID","paginationAccessibilityLabels","props","_objectWithoutProperties","_excluded","_data","_renderItem","Array","isArray","_ref2","item","console","error","size","_initialNumToRender","_React$useState","useState","prevIndex","_React$useState2","_slicedToArray","currentIndexes","setCurrentIndexes","_React$useState3","_React$useState4","ignoreOnMomentumScrollEnd","setIgnoreOnMomentumScrollEnd","flatListElement","_React$useState5","_React$useState6","scrollEnabled","setScrollEnabled","useEffect","_onChangeIndex","useCallback","_ref3","_index","_prevIndex","_scrollToIndex","params","_flatListElement$curr","indexToScroll","_params$animated","animated","newParams","next","prevState","_objectSpread","current","scrollToIndex","useImperativeHandle","getCurrentIndex","getPrevIndex","goToLastIndex","goToFirstIndex","isLastIndexEnd","shouldContinuoWithAutoplay","autoplayTimer","setTimeout","nextIncrement","nextIndex","animate","clearTimeout","_onMomentumScrollEnd","event","_onViewableItemsChanged","useMemo","changed","newItem","undefined","isViewable","viewabilityConfigCallbackPairs","minimumViewTime","itemVisiblePercentThreshold","flatListProps","keyExtractor","_item","_ref4","_item$key","key","id","toString","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","pagingEnabled","onScrollToIndexFailed","info","initialNumToRender","initialScrollIndex","OS","testID","_useWindowDimensions","width","height","getItemLayout","itemDimension","__data","ItemIndex","offset","dataSet","warn","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","_this","paginationIndex"],"sources":["/Users/josh/src/ui/apps/demo/node_modules/react-native-swiper-flatlist/src/components/SwiperFlatList/SwiperFlatList.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport {\n  FlatList as RNFlatList,\n  FlatListProps,\n  I18nManager,\n  Platform,\n  useWindowDimensions,\n  ViewabilityConfigCallbackPair,\n  ViewabilityConfigCallbackPairs,\n} from 'react-native';\n\nimport { Pagination } from '../Pagination/Pagination';\nimport { SwiperFlatListProps, SwiperFlatListRefProps } from './SwiperFlatListProps';\n\nconst MILLISECONDS = 1000;\nconst FIRST_INDEX = 0;\nconst ITEM_VISIBLE_PERCENT_THRESHOLD = 60;\n\n// TODO: figure out how to use forwardRef with generics\ntype T1 = any;\ntype ScrollToIndex = { index: number; animated?: boolean };\n\n// const SwiperFlatList = React.forwardRef<RefProps, SwiperFlatListProps<SwiperType>>(\nexport const SwiperFlatList = React.forwardRef(\n  // <T1 extends any>(\n  (\n    {\n      vertical = false,\n      children,\n      data = [],\n      renderItem,\n      renderAll = false,\n      index = I18nManager.isRTL ? data.length - 1 : FIRST_INDEX,\n      useReactNativeGestureHandler = false,\n      // Pagination\n      showPagination = false,\n      PaginationComponent = Pagination,\n      paginationActiveColor,\n      paginationDefaultColor,\n      paginationStyle,\n      paginationStyleItem,\n      paginationStyleItemActive,\n      paginationStyleItemInactive,\n      onPaginationSelectedIndex,\n      paginationTapDisabled = false,\n      // Autoplay\n      autoplayDelay = 3,\n      autoplay = false,\n      autoplayLoop = false,\n      autoplayLoopKeepAnimation = false,\n      autoplayInvertDirection = I18nManager.isRTL,\n      // Functions\n      onChangeIndex,\n      onMomentumScrollEnd,\n      onViewableItemsChanged,\n      viewabilityConfig = {},\n      disableGesture = false,\n      e2eID,\n      paginationAccessibilityLabels,\n      ...props\n    }: SwiperFlatListProps<T1>,\n    ref: React.Ref<SwiperFlatListRefProps>,\n  ) => {\n    let _data: unknown[] = [];\n    let _renderItem: FlatListProps<any>['renderItem'];\n\n    if (children) {\n      // github.com/gusgard/react-native-swiper-flatlist/issues/40\n      _data = Array.isArray(children) ? children : [children];\n      _renderItem = ({ item }) => item;\n    } else if (data) {\n      _data = data;\n      _renderItem = renderItem;\n    } else {\n      console.error('Invalid props, `data` or `children` is required');\n    }\n    const size = _data.length;\n    // Items to render in the initial batch.\n    const _initialNumToRender = renderAll ? size : 1;\n    const [currentIndexes, setCurrentIndexes] = React.useState({ index, prevIndex: index });\n    const [ignoreOnMomentumScrollEnd, setIgnoreOnMomentumScrollEnd] = React.useState(false);\n    const flatListElement = React.useRef<RNFlatList<unknown>>(null);\n    const [scrollEnabled, setScrollEnabled] = React.useState(!disableGesture);\n\n    React.useEffect(() => {\n      setScrollEnabled(!disableGesture);\n    }, [disableGesture]);\n\n    const _onChangeIndex = React.useCallback(\n      ({ index: _index, prevIndex: _prevIndex }: { index: number; prevIndex: number }) => {\n        if (_index !== _prevIndex) {\n          onChangeIndex?.({ index: _index, prevIndex: _prevIndex });\n        }\n      },\n      [onChangeIndex],\n    );\n\n    const _scrollToIndex = React.useCallback(\n      (params: ScrollToIndex) => {\n        const { index: indexToScroll, animated = true } = params;\n        const newParams = { animated, index: indexToScroll };\n\n        setIgnoreOnMomentumScrollEnd(true);\n\n        const next = {\n          index: indexToScroll,\n          prevIndex: currentIndexes.index,\n        };\n        if (currentIndexes.index !== next.index && currentIndexes.prevIndex !== next.prevIndex) {\n          setCurrentIndexes({ index: next.index, prevIndex: next.prevIndex });\n        } else if (currentIndexes.index !== next.index) {\n          setCurrentIndexes((prevState) => ({ ...prevState, index: next.index }));\n        } else if (currentIndexes.prevIndex !== next.prevIndex) {\n          setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: next.prevIndex }));\n        }\n\n        // When execute \"scrollToIndex\", we ignore the method \"onMomentumScrollEnd\"\n        // because it not working on Android\n        // https://github.com/facebook/react-native/issues/21718\n        flatListElement?.current?.scrollToIndex(newParams);\n      },\n      [currentIndexes.index, currentIndexes.prevIndex],\n    );\n\n    // change the index when the user swipe the items\n    React.useEffect(() => {\n      _onChangeIndex({ index: currentIndexes.index, prevIndex: currentIndexes.prevIndex });\n    }, [_onChangeIndex, currentIndexes.index, currentIndexes.prevIndex]);\n\n    React.useImperativeHandle(ref, () => ({\n      scrollToIndex: (item: ScrollToIndex) => {\n        setScrollEnabled(true);\n        _scrollToIndex(item);\n        setScrollEnabled(!disableGesture);\n      },\n      getCurrentIndex: () => currentIndexes.index,\n      getPrevIndex: () => currentIndexes.prevIndex,\n      goToLastIndex: () => {\n        setScrollEnabled(true);\n        _scrollToIndex({ index: I18nManager.isRTL ? FIRST_INDEX : size - 1 });\n        setScrollEnabled(!disableGesture);\n      },\n      goToFirstIndex: () => {\n        setScrollEnabled(true);\n        _scrollToIndex({ index: I18nManager.isRTL ? size - 1 : FIRST_INDEX });\n        setScrollEnabled(!disableGesture);\n      },\n    }));\n\n    React.useEffect(() => {\n      const isLastIndexEnd = autoplayInvertDirection\n        ? currentIndexes.index === FIRST_INDEX\n        : currentIndexes.index === _data.length - 1;\n      const shouldContinuoWithAutoplay = autoplay && !isLastIndexEnd;\n      let autoplayTimer: ReturnType<typeof setTimeout>;\n      if (shouldContinuoWithAutoplay || autoplayLoop) {\n        autoplayTimer = setTimeout(() => {\n          if (_data.length < 1) {\n            // avoid nextIndex being set to NaN\n            return;\n          }\n\n          if (!autoplay) {\n            // disabled if autoplay is off\n            return;\n          }\n\n          const nextIncrement = autoplayInvertDirection ? -1 : +1;\n\n          let nextIndex = (currentIndexes.index + nextIncrement) % _data.length;\n          if (autoplayInvertDirection && nextIndex < FIRST_INDEX) {\n            nextIndex = _data.length - 1;\n          }\n\n          // Disable end loop animation unless `autoplayLoopKeepAnimation` prop configured\n          const animate = !isLastIndexEnd || autoplayLoopKeepAnimation;\n\n          _scrollToIndex({ index: nextIndex, animated: animate });\n        }, autoplayDelay * MILLISECONDS);\n      }\n      // https://upmostly.com/tutorials/settimeout-in-react-components-using-hooks\n      return () => clearTimeout(autoplayTimer);\n    }, [\n      autoplay,\n      currentIndexes.index,\n      _data.length,\n      autoplayInvertDirection,\n      autoplayLoop,\n      autoplayDelay,\n      autoplayLoopKeepAnimation,\n      _scrollToIndex,\n    ]);\n\n    const _onMomentumScrollEnd: FlatListProps<unknown>['onMomentumScrollEnd'] = (event) => {\n      // NOTE: Method not executed when call \"flatListElement?.current?.scrollToIndex\"\n      if (ignoreOnMomentumScrollEnd) {\n        setIgnoreOnMomentumScrollEnd(false);\n        return;\n      }\n\n      onMomentumScrollEnd?.({ index: currentIndexes.index }, event);\n    };\n\n    const _onViewableItemsChanged = React.useMemo<\n      ViewabilityConfigCallbackPair['onViewableItemsChanged']\n    >(\n      () => (params) => {\n        const { changed } = params;\n        const newItem = changed?.[FIRST_INDEX];\n        if (newItem !== undefined) {\n          const nextIndex = newItem.index as number;\n          if (newItem.isViewable) {\n            setCurrentIndexes((prevState) => ({ ...prevState, index: nextIndex }));\n          } else {\n            setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: nextIndex }));\n          }\n        }\n        onViewableItemsChanged?.(params);\n      },\n      [onViewableItemsChanged],\n    );\n\n    const viewabilityConfigCallbackPairs = useRef<ViewabilityConfigCallbackPairs>([\n      {\n        onViewableItemsChanged: _onViewableItemsChanged,\n        viewabilityConfig: {\n          // https://facebook.github.io/react-native/docs/flatlist#minimumviewtime\n          minimumViewTime: 200,\n          itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD,\n          ...viewabilityConfig,\n        },\n      },\n    ]);\n\n    const flatListProps: FlatListProps<unknown> & { ref: React.RefObject<RNFlatList<unknown>> } = {\n      scrollEnabled,\n      ref: flatListElement,\n      keyExtractor: (_item, _index) => {\n        const item = _item as { key?: string; id?: string };\n        const key = item?.key ?? item?.id ?? _index.toString();\n        return key;\n      },\n      horizontal: !vertical,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      pagingEnabled: true,\n      ...props,\n      onMomentumScrollEnd: _onMomentumScrollEnd,\n      onScrollToIndexFailed: (info) =>\n        setTimeout(() => _scrollToIndex({ index: info.index, animated: false })),\n      data: _data,\n      renderItem: _renderItem,\n      initialNumToRender: _initialNumToRender,\n      initialScrollIndex: index, // used with onScrollToIndexFailed\n      viewabilityConfig: {\n        // https://facebook.github.io/react-native/docs/flatlist#minimumviewtime\n        minimumViewTime: 200,\n        itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD,\n        ...viewabilityConfig,\n      },\n      viewabilityConfigCallbackPairs:\n        Platform.OS === 'ios' ? viewabilityConfigCallbackPairs.current : undefined,\n      onViewableItemsChanged: Platform.OS === 'android' ? _onViewableItemsChanged : undefined,\n      // debug: true, // for debug\n      testID: e2eID,\n    };\n\n    const { width, height } = useWindowDimensions();\n    if (props.getItemLayout === undefined) {\n      const itemDimension = vertical ? height : width;\n      flatListProps.getItemLayout = (__data, ItemIndex: number) => ({\n        length: itemDimension,\n        offset: itemDimension * ItemIndex,\n        index: ItemIndex,\n      });\n    }\n    if (Platform.OS === 'web') {\n      // TODO: do we need this anymore? check 3.1.0\n      (flatListProps as any).dataSet = { 'paging-enabled-fix': true };\n    }\n\n    //NOTE: quick fix for the new version of metro bundler\n    // we should remove this console.warn in the next version (3.2.4)\n    if (useReactNativeGestureHandler) {\n      console.warn('Please remove `useReactNativeGestureHandler` and import the library like:');\n      console.warn(\n        \"import { SwiperFlatListWithGestureHandler } from 'react-native-swiper-flatlist/WithGestureHandler';\",\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <RNFlatList {...flatListProps} />\n        {showPagination ? (\n          <PaginationComponent\n            size={size}\n            paginationIndex={currentIndexes.index}\n            scrollToIndex={(params: ScrollToIndex) => {\n              _scrollToIndex(params);\n            }}\n            paginationActiveColor={paginationActiveColor}\n            paginationDefaultColor={paginationDefaultColor}\n            paginationStyle={paginationStyle}\n            paginationStyleItem={paginationStyleItem}\n            paginationStyleItemActive={paginationStyleItemActive}\n            paginationStyleItemInactive={paginationStyleItemInactive}\n            onPaginationSelectedIndex={onPaginationSelectedIndex}\n            paginationTapDisabled={paginationTapDisabled}\n            e2eID={e2eID}\n            paginationAccessibilityLabels={paginationAccessibilityLabels}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  },\n);\n\n// https://gist.github.com/Venryx/7cff24b17867da305fff12c6f8ef6f96\ntype Handle<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer T2>>\n  ? T2\n  : never;\nexport type SwiperFlatList = Handle<typeof SwiperFlatList>;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}