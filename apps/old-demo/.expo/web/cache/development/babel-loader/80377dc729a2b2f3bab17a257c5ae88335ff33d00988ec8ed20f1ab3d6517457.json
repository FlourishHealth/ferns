{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"render\"];\nvar _jsxFileName = \"/Users/josh/src/ui/apps/demo/node_modules/react-native-markdown-view/MarkdownView.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SimpleMarkdown from 'simple-markdown';\nimport DefaultRenders from './renders';\nimport DefaultStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction simpleMarkdownRule(rule, styles) {\n  var render = rule.render,\n    properties = _objectWithoutProperties(rule, _excluded);\n  var reactRender = render ? {\n    react: function react(node, output, state) {\n      return render(node, output, state, styles);\n    }\n  } : null;\n  return _objectSpread(_objectSpread({}, properties), reactRender);\n}\nfunction simpleMarkdownRules(rules, styles) {\n  var markdownRules = {};\n  Object.keys(rules).forEach(function (nodeKey) {\n    return markdownRules[nodeKey] = simpleMarkdownRule(rules[nodeKey], styles);\n  });\n  return markdownRules;\n}\nfunction mergeStyles(baseStyles, styles) {\n  var mergedStyles = _objectSpread({}, styles);\n  Object.keys(baseStyles).forEach(function (nodeKey) {\n    return mergedStyles[nodeKey] = styles[nodeKey] ? [baseStyles[nodeKey], styles[nodeKey]] : baseStyles[nodeKey];\n  });\n  return mergedStyles;\n}\nfunction mergeRules(baseRules, rules) {\n  var mergedRules = _objectSpread({}, rules);\n  Object.keys(baseRules).forEach(function (nodeKey) {\n    return mergedRules[nodeKey] = _objectSpread(_objectSpread({}, baseRules[nodeKey]), rules[nodeKey]);\n  });\n  return mergedRules;\n}\nvar IMAGE_LINK = \"(?:\\\\[[^\\\\]]*\\\\]|[^\\\\[\\\\]]|\\\\](?=[^\\\\[]*\\\\]))*\";\nvar IMAGE_HREF_AND_TITLE = \"\\\\s*<?((?:[^\\\\s\\\\\\\\]|\\\\\\\\.)*?)>?(?:\\\\s+['\\\"]([\\\\s\\\\S]*?)['\\\"])?\";\nvar IMAGE_SIZE = \"(?:\\\\s+=([0-9]+)x([0-9]+))?\\\\)\\\\s*\";\nvar inlineRegex = function inlineRegex(regex) {\n  return function (source, state) {\n    return state.inline ? regex.exec(source) : null;\n  };\n};\nvar unescapeUrl = function unescapeUrl(url) {\n  return url.replace(/\\\\([^0-9A-Za-z\\s])/g, '$1');\n};\nvar DefaultRules = Object.freeze(mergeRules(Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(DefaultRenders).map(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    nodeKey = _ref2[0],\n    render = _ref2[1];\n  return _defineProperty({}, nodeKey, {\n    render: render\n  });\n})))), {\n  heading: {\n    match: SimpleMarkdown.blockRegex(/^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n *)*\\n/)\n  },\n  image: {\n    match: inlineRegex(new RegExp(\"^!\\\\[(\" + IMAGE_LINK + \")\\\\]\\\\(\" + IMAGE_HREF_AND_TITLE + IMAGE_SIZE)),\n    parse: function parse(capture, _parse, state) {\n      return {\n        alt: capture[1],\n        target: unescapeUrl(capture[2]),\n        title: capture[3],\n        width: capture[4] ? parseInt(capture[4]) : undefined,\n        height: capture[5] ? parseInt(capture[5]) : undefined\n      };\n    }\n  }\n}));\nvar MarkdownView = function (_Component) {\n  function MarkdownView() {\n    _classCallCheck(this, MarkdownView);\n    return _callSuper(this, MarkdownView, arguments);\n  }\n  _inherits(MarkdownView, _Component);\n  return _createClass(MarkdownView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        _this$props$rules = _this$props.rules,\n        rules = _this$props$rules === void 0 ? {} : _this$props$rules,\n        _this$props$styles = _this$props.styles,\n        styles = _this$props$styles === void 0 ? {} : _this$props$styles,\n        onLinkPress = _this$props.onLinkPress;\n      var mergedStyles = mergeStyles(DefaultStyles, styles);\n      var mergedRules = mergeRules(SimpleMarkdown.defaultRules, simpleMarkdownRules(mergeRules(DefaultRules, rules), mergedStyles));\n      var markdown = (Array.isArray(this.props.children) ? this.props.children.join('') : this.props.children) + '\\n\\n';\n      var ast = SimpleMarkdown.parserFor(mergedRules)(markdown, {\n        inline: false\n      });\n      var render = SimpleMarkdown.reactFor(SimpleMarkdown.ruleOutput(mergedRules, 'react'));\n      var initialRenderState = {\n        onLinkPress: onLinkPress\n      };\n      return _jsxDEV(View, {\n        style: this.props.style,\n        children: render(ast, initialRenderState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n}(Component);\nMarkdownView.propTypes = _objectSpread(_objectSpread({}, View.propTypes), {}, {\n  rules: PropTypes.objectOf(PropTypes.objectOf(PropTypes.func)),\n  styles: PropTypes.objectOf(PropTypes.object),\n  onLinkPress: PropTypes.func\n});\nexport default MarkdownView;","map":{"version":3,"names":["PropTypes","React","Component","View","SimpleMarkdown","DefaultRenders","DefaultStyles","jsxDEV","_jsxDEV","simpleMarkdownRule","rule","styles","render","properties","_objectWithoutProperties","_excluded","reactRender","react","node","output","state","_objectSpread","simpleMarkdownRules","rules","markdownRules","Object","keys","forEach","nodeKey","mergeStyles","baseStyles","mergedStyles","mergeRules","baseRules","mergedRules","IMAGE_LINK","IMAGE_HREF_AND_TITLE","IMAGE_SIZE","inlineRegex","regex","source","inline","exec","unescapeUrl","url","replace","DefaultRules","freeze","assign","apply","concat","_toConsumableArray","entries","map","_ref","_ref2","_slicedToArray","_defineProperty","heading","match","blockRegex","image","RegExp","parse","capture","alt","target","title","width","parseInt","undefined","height","MarkdownView","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","props","_this$props$rules","_this$props$styles","onLinkPress","defaultRules","markdown","Array","isArray","children","join","ast","parserFor","reactFor","ruleOutput","initialRenderState","style","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","objectOf","func","object"],"sources":["/Users/josh/src/ui/apps/demo/node_modules/react-native-markdown-view/MarkdownView.js"],"sourcesContent":["/* @flow */\n\nimport PropTypes from 'prop-types';\n\nimport React, {\n  Component,\n} from 'react'\n\nimport {\n  View,\n} from 'react-native'\n\nimport SimpleMarkdown from 'simple-markdown'\n\nimport DefaultRenders from './renders'\nimport DefaultStyles from './styles'\n\nimport type {\n  ImageNode,\n  Rules,\n  Styles,\n} from './types'\n\nfunction simpleMarkdownRule(rule, styles) {\n  const {render, ...properties} = rule\n  const reactRender = render ? {react: (node, output, state) => render(node, output, state, styles)} : null\n  return {...properties, ...reactRender}\n}\n\nfunction simpleMarkdownRules(rules, styles) {\n  const markdownRules = {}\n  Object.keys(rules).forEach(nodeKey => markdownRules[nodeKey] = simpleMarkdownRule(rules[nodeKey], styles))\n  return markdownRules\n}\n\nfunction mergeStyles(baseStyles, styles) {\n  const mergedStyles = {...styles}\n  Object.keys(baseStyles).forEach(nodeKey => mergedStyles[nodeKey] = styles[nodeKey] ? [baseStyles[nodeKey], styles[nodeKey]] : baseStyles[nodeKey])\n  return mergedStyles\n}\n\nfunction mergeRules(baseRules, rules) {\n  const mergedRules = {...rules}\n  Object.keys(baseRules).forEach(nodeKey => mergedRules[nodeKey] = {...baseRules[nodeKey], ...rules[nodeKey]})\n  return mergedRules\n}\n\nconst IMAGE_LINK = \"(?:\\\\[[^\\\\]]*\\\\]|[^\\\\[\\\\]]|\\\\](?=[^\\\\[]*\\\\]))*\";\nconst IMAGE_HREF_AND_TITLE = \"\\\\s*<?((?:[^\\\\s\\\\\\\\]|\\\\\\\\.)*?)>?(?:\\\\s+['\\\"]([\\\\s\\\\S]*?)['\\\"])?\"\nconst IMAGE_SIZE = \"(?:\\\\s+=([0-9]+)x([0-9]+))?\\\\)\\\\s*\"\n\nconst inlineRegex = (regex) => ((source, state) => state.inline ? regex.exec(source) : null)\nconst unescapeUrl = (url) => url.replace(/\\\\([^0-9A-Za-z\\s])/g, '$1')\n\nconst DefaultRules : Rules = Object.freeze(mergeRules(\n  Object.assign(\n    {},\n    ...Object.entries(DefaultRenders).map(([nodeKey, render]) => ({[nodeKey]: {render: render}}))\n  ),\n  {\n    heading: {\n      match: SimpleMarkdown.blockRegex(/^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n *)*\\n/),\n    },\n    image: {\n      match: inlineRegex(new RegExp(\"^!\\\\[(\" + IMAGE_LINK + \")\\\\]\\\\(\" + IMAGE_HREF_AND_TITLE + IMAGE_SIZE)),\n      parse: (capture, parse, state): ImageNode => ({\n        alt: capture[1],\n        target: unescapeUrl(capture[2]),\n        title: capture[3],\n        width: capture[4] ? parseInt(capture[4]) : undefined,\n        height: capture[5] ? parseInt(capture[5]) : undefined,\n      })\n    }\n  }\n))\n\nclass MarkdownView extends Component {\n  props: {\n    style?: Object,\n    rules?: Rules,\n    onLinkPress?: (string) => void,\n    styles?: Styles,\n    children: string,\n  }\n\n  render() {\n    const {rules = {}, styles = {}, onLinkPress} = this.props\n\n    const mergedStyles = mergeStyles(DefaultStyles, styles)\n    const mergedRules = mergeRules(SimpleMarkdown.defaultRules, simpleMarkdownRules(mergeRules(DefaultRules, rules), mergedStyles))\n\n    const markdown = (Array.isArray(this.props.children) ? this.props.children.join('') : this.props.children) + '\\n\\n'\n\n    const ast = SimpleMarkdown.parserFor(mergedRules)(markdown, {inline: false})\n    const render = SimpleMarkdown.reactFor(SimpleMarkdown.ruleOutput(mergedRules, 'react'))\n    const initialRenderState = {onLinkPress: onLinkPress}\n\n    return (\n      <View style={this.props.style}>\n        {render(ast, initialRenderState)}\n      </View>\n    )\n  }\n}\n\nMarkdownView.propTypes = {\n  ...View.propTypes,\n\n  /**\n   * An object overriding or providing additional rules for parsing and rendering Markdown. Keys\n   * are rule names (you can define your own, or override existing rules), and values are an object\n   * of the form:\n   *\n   *   {\n   *     match: RegExp,\n   *     parse: (match, nestedParse, state),\n   *     render: (node, output, state, styles)\n   *   }\n   *\n   * match: A Regex to be executed against the MarkdownView's text.\n   *\n   * parse: A function that returns an AST 'node' object to pass to the rules' render method. If\n   *        the object returned has a 'type' key, rendering will be deferred to the rule matching\n   *        the value of 'type'.\n   *\n   *   match: Return value of match.exec()\n   *   nestedParse: (string, state) => object, call this to parse nested nodes.\n   *   state: Parser state object, you can attach your own state properties if desirable.\n   *\n   * render: A function that returns the rendered node (and its children). Typically you'll return\n   *         a React Native view component.\n   *\n   *   node: An AST node. Please refer to the Flow types in `types.js`.\n   *   output: A function that can be used to render nested/children nodes. Typically you'll want\n   *           call `output(node.children)` and use that as the content of the component you're\n   *           returning.\n   *   state: Renderer state object. You can attach your own state to this object and use it, for\n   *          example, to render nodes differently depending on their parents/ancestors.\n   *   styles: An object containing React Native styles that you can use for rendering components.\n   *\n   * Default rendering rules have keys:\n   *\n   *   heading, hr, codeBlock, blockQuote, list, table, newline, paragraph, link, image, em,\n   *   strong, u, del, inlineCode, br, text\n   *\n   * Default parse-only rules (which defer rendering to another rule) have keys:\n   *\n   *   nptable, lheading, fence, def, escape, autolink, mailto, url, reflink, refimage,\n   *\n   */\n  rules: PropTypes.objectOf(PropTypes.objectOf(PropTypes.func)),\n\n  /**\n   * An object providing styles to be passed to a corresponding rule render method. Keys are\n   * rule/node names and values are React Native style objects. If a style is defined here and a\n   * default style exists, they will me merged, with style properties defined here taking\n   * precedence.\n   */\n  styles: PropTypes.objectOf(PropTypes.object),\n\n  /**\n   * Callback function for when a link is pressed. The callback receives the URL of the link as a\n   * string (first and only argument).\n   */\n  onLinkPress: PropTypes.func,\n}\n\nexport default MarkdownView\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}